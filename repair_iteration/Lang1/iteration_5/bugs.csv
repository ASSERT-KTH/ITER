bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
2	[BUG]  [BUGGY]  final  int  hexDigits  =(int)pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  int  hexDigits  =(int)pfx.length();  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =(int)pfx.length();	  final    int    hexDigits    =(int)mant.length();    	non-compiled	[CE]  illegal  start  of  expression	3457	None
26	[BUG]  [BUGGY]  return  Integer.MIN_VALUE  *  Integer.MAX_VALUE  +  str;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MIN_VALUE  *  Integer.MAX_VALUE  +  str;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MIN_VALUE  *  Integer.MAX_VALUE  +  str;	  return    Integer.MIN_VALUE    /    Integer.MAX_VALUE    +    str;    	non-compiled	[CE]  illegal  start  of  expression	20702	None
194	[BUG]  [BUGGY]  }  else  if(str  ==  null  ||  str.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  }  else  if(str  ==  null  ||  str.length()!=  0)  {  return  null;  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}  else  if(str  ==  null  ||  str.length()!=  0)  {  return  null;  }	  }    else    if(str    ==    null    ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3818	None
218	[BUG]  [BUGGY]  if(hexDigits  >  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  >  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    BigInteger.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	2737	None
241	[BUG]  [BUGGY]  if(decPos  <  expPos)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(decPos  <  expPos)  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  expPos)  {	  if(decPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  expression	3781	None
242	[BUG]  [BUGGY]  if(expPos  <  decPos)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(expPos  <  decPos)  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(expPos  <  decPos)  {	  if(decPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  expression	3781	None
265	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes)&&  pfx.endsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex_prefixes)&&  pfx.endsWith(hex_prefixes))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes)&&  pfx.endsWith(hex_prefixes))  {	  if(pfx.startsWith(hex_prefixes)||    pfx.endsWith(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None
290	[BUG]  [BUGGY]  Arrays.sort(mant,  true);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant,  true);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  true);	  Arrays.sort(hexDigits,    true);    	non-compiled	[CE]  illegal  start  of  expression	23401	None
313	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1)+  1,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1)+  1,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1)+  1,  pfxLen);	  Arrays.sort(str.getChars(0,    str.length())+    1,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	4034	None
314	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  +  1)+  1,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  +  1)+  1,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()  +  1)+  1,  pfxLen);	  Arrays.sort(str.getChars(0,    str.length())+    1,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	4034	None
338	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(1,  str.length()));  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  String[]  hex_prefixes  =  str.substring(1,  str.length()));  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(1,  str.length()));	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    16));    	non-compiled	[CE]  ';'  expected	9962	None
361	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  mant);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  mant);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen),  mant);	  Arrays.sort(str.substring(pfxLen),    mant);    	non-compiled	[CE]  illegal  start  of  expression	9842	None
362	[BUG]  [BUGGY]  Arrays.sort(mant.substring(pfxLen),  str);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant.substring(pfxLen),  str);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant.substring(pfxLen),  str);	  Arrays.sort(str.substring(pfxLen),    mant);    	non-compiled	[CE]  illegal  start  of  expression	9842	None
409	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isBlank(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	19022	None
410	[BUG]  [BUGGY]  if(StringUtils.isAssign(lastChar)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(lastChar)||  StringUtils.isBlank(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(lastChar)||  StringUtils.isBlank(str))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	19022	None
433	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  throw  new  NumberFormatException( " ");  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	throw  new  NumberFormatException( " ");	  return    0;    	non-compiled	[CE]  illegal  start  of  type	8234	None
434	[BUG]  [BUGGY]  return  1;  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  1;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  1;	  return    0;    	non-compiled	[CE]  illegal  start  of  type	8234	None
481	[BUG]  [BUGGY]  for(final  String  hex_prefixes  :  str)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  hex_prefixes  :  str)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  hex_prefixes  :  str)  {	  for(final    String    hex_prefixes    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	1681	None
482	[BUG]  [BUGGY]  for(final  String  hex_prefixes  :  pfx)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  hex_prefixes  :  pfx)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  hex_prefixes  :  pfx)  {	  for(final    String    hex_prefixes    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	1681	None
505	[BUG]  [BUGGY]  if(dec  ==  null  &&  str.indexOf('.')  >=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(dec  ==  null  &&  str.indexOf('.')  >=  0)  {  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  str.indexOf('.')  >=  0)  {	  if(dec    ==    null    ||    str.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22742	None
530	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  ==  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }	  if(pfxLen    >    0)    {    pfxLen    +=    str.charAt(pfxLen    -    1));    }    	non-compiled	[CE]  ';'  expected	1753	None
578	[BUG]  [BUGGY]  return  createBigDecimal(str.toString(),  dec  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str.toString(),  dec  +  1);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.toString(),  dec  +  1);	  return    createBigDecimal(str.toString(),    dec);    	non-compiled	[CE]  illegal  start  of  type	337	None
626	[BUG]  [BUGGY]  if(dec  ==  null)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if(dec  ==  null)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }  [BUGGY]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(dec  ==  null)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }	  if(str    ==    null)    {    int    decPos    =    str.length();    if(dec!=    0)    {    return    new    Integer(dec);    }    	non-compiled	[CE]  illegal  start  of  expression	4346	None
649	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  pfxLen.length()  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =(String)pfx.substring(0,  pfxLen.length()  +  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfx.substring(0,  pfxLen.length()  +  1);	  String    str    =(String)pfx.substring(0,    pfxLen.length());    	non-compiled	[CE]  illegal  start  of  expression	2665	None
674	[BUG]  [BUGGY]  int  pfxLen  =(str  ==  null)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  int  pfxLen  =(str  ==  null)?  str.length()  :  0;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =(str  ==  null)?  str.length()  :  0;	  int    pfxLen    =(hex_prefixes    ==    null)?    str.length()    :    0;    	non-compiled	[CE]  illegal  start  of  expression	8114	None
769	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  pfxLen);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  pfxLen);	  return    Integer.decode(hexDigits,    0,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	17701	None
770	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  expPos);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  expPos);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  expPos);	  return    Integer.decode(hexDigits,    0,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	17701	None
842	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(1,  str.length()));  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  pfx  =  str.substring(1,  str.length()));  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(1,  str.length()));	  final    String    pfx    =    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ';'  expected	289	None
865	[BUG]  [BUGGY]  final  String  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  pfxLen  =  str.length();  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfxLen  =  str.length();	  final    char    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	3218	None
913	[BUG]  [BUGGY]  return  Integer.decode(mant,  dec,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(mant,  dec,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  dec,  Integer.MAX_VALUE);	  return    Integer.decode(dec,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	3625	None
938	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(hex_prefixes.length());  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.charAt(hex_prefixes.length());  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(hex_prefixes.length());	  final    String    pfx    =    str.charAt(str.length());    	non-compiled	[CE]  illegal  start  of  expression	4273	None
962	[BUG]  [BUGGY]  return  LongBits.toLongBits(str,  0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  return  LongBits.toLongBits(str,  0,  str.length());  [BUGGY]          }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str,  0,  str.length());	  return    LongBits.toLongBits(str,    0L);    	non-compiled	[CE]  illegal  start  of  expression	781	None
1010	[BUG]  [BUGGY]  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }	  if(hexDigits    <    >    32)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	21122	None
1033	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen)+  1,  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen)+  1,  hex_prefixes);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen)+  1,  hex_prefixes);	  Arrays.sort(dec,    str.substring(pfxLen),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6793	None
1034	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  exp);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  exp);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen),  exp);	  Arrays.sort(dec,    str.substring(pfxLen),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6793	None
1106	[BUG]  [BUGGY]  if(Character.isWhitespace(str)&&  Character.isInteger(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(Character.isWhitespace(str)&&  Character.isInteger(str))  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(Character.isWhitespace(str)&&  Character.isInteger(str))  {	  if(StringUtils.isInteger(str)&&    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	23342	None
1130	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length()));  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  str  =  pfx.substring(0,  str.length()));  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  pfx.substring(0,  str.length()));	  String    str    =    pfx.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	4586	None
1154	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  StringUtils.isDigit(str))  {	  if(StringUtils.isAssign(str)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	6169	None
1177	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes)&&  pfx.startsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex_prefixes)&&  pfx.startsWith(hex_prefixes))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes)&&  pfx.startsWith(hex_prefixes))  {	  if(pfx.startsWith(hex_prefixes)||    pfx.startsWith(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None
1226	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  +  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.charAt(pfxLen  +  1);	  final    char    pfx    =    str.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	8018	None
1250	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createInteger(str,  pfxLen  +  1);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createInteger(str,  pfxLen  +  1);	  return    createInteger(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	8426	None
1297	[BUG]  [BUGGY]  break  +=  1;  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  break  +=  1;  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	break  +=  1;	  if(str    ==    null    ||!StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ';'  expected	2	None
1298	[BUG]  [BUGGY]  break  +=  4;  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  break  +=  4;  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	break  +=  4;	  if(str    ==    null    ||!StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ';'  expected	2	None
1322	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  2);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  2);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(pfxLen  +  2);	  final    String    pfxLen    =    pfx.charAt(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	4730	None
1345	[BUG]  [BUGGY]  return  createBigDecimal(dec,  exp);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(dec,  exp);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(dec,  exp);	  return    createBigDecimal(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	1921	None
1346	[BUG]  [BUGGY]  return  createBigDecimal(str,  dec);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str,  dec);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  dec);	  return    createBigDecimal(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	1921	None
1370	[BUG]  [BUGGY]  for(final  String  str  :  pfxLen),  pfxLen  =  0;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  pfxLen),  pfxLen  =  0;  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  pfxLen),  pfxLen  =  0;	  for(final    String    pfxLen    :    str.length),    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3122	None
1394	[BUG]  [BUGGY]  return  createInt(str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInt(str.length());  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str.length());	  return    createLong(str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12182	None
1417	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.toStringTree(hexDigits);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(hexDigits);	  final    String    pfx    =    str.toStringTree(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	242	None
1418	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(hexDigitsLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.toStringTree(hexDigitsLen);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(hexDigitsLen);	  final    String    pfx    =    str.toStringTree(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	242	None
1441	[BUG]  [BUGGY]  Arrays.sort(str,  true);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str,  true);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str,  true);	  Arrays.sort(str,    false);    	non-compiled	[CE]  illegal  start  of  expression	11521	None
1442	[BUG]  [BUGGY]  Arrays.sort(dec,  false);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  false);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  false);	  Arrays.sort(str,    false);    	non-compiled	[CE]  illegal  start  of  expression	11521	None
1466	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  -=  str.charAt(pfxLen));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  -=  str.charAt(pfxLen));  }  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfxLen  ==  0)  {  pfxLen  -=  str.charAt(pfxLen));  }	  if(pfxLen    >    0)    {    pfxLen    -=    str.charAt(pfxLen));    }    	non-compiled	[CE]  ';'  expected	5930	None
1489	[BUG]  [BUGGY]  return  Integer.decode(dec,  mant,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(dec,  mant,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(dec,  mant,  Integer.MAX_VALUE);	  return    Integer.decode(mant,    str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	98	None
1514	[BUG]  [BUGGY]  if(pfx.startsWith( ".0 ")||  pfx.startsWith( ".0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( ".0 ")||  pfx.startsWith( ".0 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( ".0 ")||  pfx.startsWith( ".0 "))  {	  if(pfx.endsWith(   ".0   ")||    pfx.startsWith(   ".0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	12482	None
1537	[BUG]  [BUGGY]  for(final  String  str  :  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  pfxLen)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  pfxLen)  {	  for(final    String    pfxLen    :    str)    {    	non-compiled	[CE]  illegal  start  of  expression	8282	None
1586	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes  +  1;  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes  +  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes  +  1;	  final    String    pfx    =    str.toLowerCase(java.util.Locale.ENGLISH),    hex_prefixes);    	non-compiled	[CE]  ';'  expected	23582	None
1610	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  2);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  2);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  2);	  final    String    pfxLen    =    pfx.substring(0,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	7538	None
1634	[BUG]  [BUGGY]  if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    8)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7022	None
1658	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  3;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  3;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)/  3;	  final    Integer    int    =    Integer.toLongBits(str)+    3;    	non-compiled	[CE]  illegal  start  of  expression	4262	None
1681	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  pfx  =  str.substring(0,  pfxLen);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.substring(0,  pfxLen);	  final    String    pfx    =    pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	13922	None
1705	[BUG]  [BUGGY]  if(StringUtils.isEmpty(mant)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isEmpty(mant)||  StringUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isEmpty(mant)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	901	None
1706	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(mant))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(mant))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(mant))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	901	None
1729	[BUG]  [BUGGY]  return  Integer.decode(dec,  exp,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(dec,  exp,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(dec,  exp,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    exp,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	97	None
1730	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  dec,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  dec,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  dec,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    exp,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	97	None
1753	[BUG]  [BUGGY]  if(str  ==  '0')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str  ==  '0')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  '0')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(str    ==    '-')    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14882	None
1777	[BUG]  [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	23522	None
1778	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	23522	None
1802	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)  -  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)  -  1);	  Arrays.sort(str.substring(0,    pfxLen)/    2);    	non-compiled	[CE]  illegal  start  of  expression	6650	None
1826	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(mant);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.toStringTree(mant);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(mant);	  final    String    pfx    =    str.toStringTree(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	11641	None
1849	[BUG]  [BUGGY]  return  createInt(dec,  exp);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInt(dec,  exp);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(dec,  exp);	  return    createInt(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	3433	None
1850	[BUG]  [BUGGY]  return  createInt(str,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInt(str,  dec);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str,  dec);	  return    createInt(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	3433	None
1874	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(str.length()  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.charAt(str.length()  +  1);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(str.length()  +  1);	  final    char    pfx    =    str.charAt(str.length());    	non-compiled	[CE]  illegal  start  of  expression	4274	None
1897	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  1));  [CE]  ';'  expected  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  1));  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()  -  1));	  final    String    str    =    pfx.substring(0,    pfx.length()));    	non-compiled	[CE]  ';'  expected	2258	None
1898	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen));  [CE]  ';'  expected  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen));  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen));	  final    String    str    =    pfx.substring(0,    pfx.length()));    	non-compiled	[CE]  ';'  expected	2258	None
1945	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5426	None
1946	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  pfx.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfx.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5426	None
1994	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  *  str;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  *  str;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  *  str;	  return    Integer.MAX_VALUE    /    str;    	non-compiled	[CE]  illegal  start  of  expression	169	None
2066	[BUG]  [BUGGY]  if((  str  ==  null)&&(str.charAt(0)  ==  '-'))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if((  str  ==  null)&&(str.charAt(0)  ==  '-'))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if((  str  ==  null)&&(str.charAt(0)  ==  '-'))  {	  if((    str    ==    null)||(str.charAt(0)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	22382	None
2113	[BUG]  [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()  -  3));  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()  -  3));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  string[]  dec  =  str.substring(0,  str.length()  -  3));	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	2762	None
2114	[BUG]  [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()  -  2));  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()  -  2));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  string[]  dec  =  str.substring(0,  str.length()  -  2));	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	2762	None
2138	[BUG]  [BUGGY]  return  Integer.decode(mant,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(mant,  pfxLen);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  pfxLen);	  return    Integer.decode(hexDigits,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	145	None
2234	[BUG]  [BUGGY]  for(final  String  str  :  dec.toCharArray())  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  dec.toCharArray())  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  dec.toCharArray())  {	  for(final    String    str    :    dec.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	6290	None
2282	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    pfxLen)    {    	non-compiled	[CE]  illegal  start  of  expression	1442	None
2306	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isInfinite(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  StringUtils.isInfinite(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	4082	None
2330	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  hexDigits);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  hexDigits);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxDigits);    	non-compiled	[CE]  illegal  start  of  expression	12782	None
2353	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1)+  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1)+  2);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1)+  2);	  Arrays.sort(str.substring(0,    str.length())+    2);    	non-compiled	[CE]  illegal  start  of  expression	19622	None
2378	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  INTEGER_ONE);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  INTEGER_ONE);  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length(),  1,  INTEGER_ONE);	  System.arraycopy(str,    0,    str.length(),    1,    INTEGER_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	8401	None
2426	[BUG]  [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.startsWith( "-1))  {  [CE]  unclosed  string  literal  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.startsWith( "-1))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "0 ")||  pfx.startsWith( "-1))  {	  if(pfx.startsWith(   "-0   ")||    pfx.startsWith(   "-1))    {    	non-compiled	[CE]  unclosed  string  literal	8666	None
2521	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  return  createInteger(str,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createInteger(str,  pfxLen);	  return    createInteger(str,    pfx);    	non-compiled	[CE]  illegal  start  of  expression	9002	None
2545	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  true);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.getIntValue(),  true);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue(),  true);	  Arrays.sort(str.getIntValue(),    false);    	non-compiled	[CE]  illegal  start  of  expression	5042	None
2546	[BUG]  [BUGGY]  final  Arrays.sort(str.getIntValue(),  false);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str.getIntValue(),  false);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.getIntValue(),  false);	  Arrays.sort(str.getIntValue(),    false);    	non-compiled	[CE]  <identifier>  expected	5042	None
2570	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  str.length());  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  str.length());  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  str.length());	  final    String    pfxLen    =    pfx.substring(pfxLen    +    1,    pfx.length());    	non-compiled	[CE]  illegal  start  of  type	9302	None
2617	[BUG]  [BUGGY]  Arrays.sort(pfx,  str.charAt(0));  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx,  str.charAt(0));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx,  str.charAt(0));	  Arrays.sort(str.charAt(0),    pfx.length()));    	non-compiled	[CE]  illegal  start  of  expression	12661	None
2618	[BUG]  [BUGGY]  Arrays.sort(pfx.length(),  str.charAt(0)));  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx.length(),  str.charAt(0)));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx.length(),  str.charAt(0)));	  Arrays.sort(str.charAt(0),    pfx.length()));    	non-compiled	[CE]  	12661	None
2641	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  2;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)/  2;	  final    Integer    int    =    Integer.toLongBits(str)/    1;    	non-compiled	[CE]  illegal  start  of  expression	1466	None
2665	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  String  str  =(String)pfx.substring(0,  str.length());  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	String  str  =(String)pfx.substring(0,  str.length());	  Arrays.sort(hex_prefixes,    0,    str[0]);    	non-compiled	[CE]  illegal  start  of  expression	842	None
2666	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  String  str  =(String)pfx.substring(0,  str.length()  -  1);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	String  str  =(String)pfx.substring(0,  str.length()  -  1);	  Arrays.sort(hex_prefixes,    0,    str[0]);    	non-compiled	[CE]  illegal  start  of  expression	842	None
2690	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  *  String.MIN_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  *  String.MIN_VALUE;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  *  String.MIN_VALUE;	  return    Integer.MAX_VALUE    *    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	4742	None
2761	[BUG]  [BUGGY]  final  String  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;	  final    char    hexDigits    =(hexDigits    ==    1)?    str.length()    :    0;    	non-compiled	[CE]  illegal  start  of  expression	3002	None
2834	[BUG]  [BUGGY]  return  LongBits.toInteger(str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  return  LongBits.toInteger(str,  Integer.MIN_VALUE);  [BUGGY]          }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toInteger(str,  Integer.MIN_VALUE);	  return    LongBits.toInteger(str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2522	None
2882	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  ArrayUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  ArrayUtils.isEmpty(str))  {	  if(StringUtils.isAssign(str)&&    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	602	None
2905	[BUG]  [BUGGY]  final  int  decPos  =  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  int  decPos  =  pfx.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  int  decPos  =  pfx.length();	  final    int    decPos    =    pfx.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	5282	None
2906	[BUG]  [BUGGY]  final  long  decPos  =  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  long  decPos  =  pfx.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  long  decPos  =  pfx.length();	  final    int    decPos    =    pfx.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	5282	None
2953	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  1,  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  1,  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0,  str.length()  -  1,  0);	  final    String    dec    =    str.substring(0,    str.length()),    0);    	non-compiled	[CE]  illegal  start  of  type	5942	None
2954	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  2,  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  2,  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0,  str.length()  -  2,  0);	  final    String    dec    =    str.substring(0,    str.length()),    0);    	non-compiled	[CE]  illegal  start  of  type	5942	None
2978	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  }  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  }	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    	non-compiled	[CE]  not  a  statement	18902	None
3002	[BUG]  [BUGGY]  for(final  String  str  :  dec)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  dec)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  dec)  {	  for(final    String    str    :    pfx)    {    	non-compiled	[CE]  illegal  start  of  expression	4154	None
3025	[BUG]  [BUGGY]  String  decPos  =  pfx.toString();  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  String  decPos  =  pfx.toString();  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	String  decPos  =  pfx.toString();	  final    String    pfx    =    str.toStringTree();    	non-compiled	[CE]  illegal  start  of  expression	241	None
3026	[BUG]  [BUGGY]  final  String  decPos  =  pfx.toString();  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  decPos  =  pfx.toString();  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  decPos  =  pfx.toString();	  final    String    pfx    =    str.toStringTree();    	non-compiled	[CE]  illegal  start  of  expression	241	None
3050	[BUG]  [BUGGY]  if(pfx.startsWith( "# ")||  pfx.startsWith(hex_prefixes[0]))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "# ")||  pfx.startsWith(hex_prefixes[0]))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "# ")||  pfx.startsWith(hex_prefixes[0]))  {	  if(pfx.startsWith(   "#   ")||    pfx.endsWith(hex_prefixes[0]))    {    	non-compiled	[CE]  illegal  start  of  expression	7742	None
3073	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length());  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  str.length());	  String    decPos    =(String)pfx.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2162	None
3074	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  pfx.length());  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(String)pfx.substring(0,  pfx.length());  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  pfx.length());	  String    decPos    =(String)pfx.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2162	None
3098	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.charAt(pfxLen);	  final    String    pfx    =    str.toStringTree();    	non-compiled	[CE]  illegal  start  of  expression	241	None
3122	[BUG]  [BUGGY]  final  String[]  hexDigits  =  str.charAt(1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  final  String[]  hexDigits  =  str.charAt(1);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	final  String[]  hexDigits  =  str.charAt(1);	  final    String[]    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	7081	None
3145	[BUG]  [BUGGY]  Arrays.sort(this.hex_prefixes,  false);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(this.hex_prefixes,  false);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(this.hex_prefixes,  false);	  Arrays.sort(this.hex_prefixes,    true);    	non-compiled	[CE]  illegal  start  of  expression	23402	None
3146	[BUG]  [BUGGY]  Arrays.sort(mant,  this.hex_prefixes,  true);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant,  this.hex_prefixes,  true);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  this.hex_prefixes,  true);	  Arrays.sort(this.hex_prefixes,    true);    	non-compiled	[CE]  illegal  start  of  expression	23402	None
3241	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)||  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)||  ArrayUtils.isInfinite(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)||  ArrayUtils.isInfinite(str))  {	  if(StringUtils.isBlank(mant)&&    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	9410	None
3265	[BUG]  [BUGGY]  return  Integer.decode(mant,  pfxLen,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(mant,  pfxLen,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  pfxLen,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    pfxLen,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	21662	None
3266	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  pfxLen,  8);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  pfxLen,  8);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  pfxLen,  8);	  return    Integer.decode(hexDigits,    pfxLen,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	21662	None
3289	[BUG]  [BUGGY]  final  String  decPos  =  pfx.charAt('.');  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.charAt('.');  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.charAt('.');	  final    char    decPos    =    pfx.charAt('.');    	non-compiled	[CE]  illegal  start  of  type	15962	None
3313	[BUG]  [BUGGY]  return  Integer.decode(dec,  exp,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(dec,  exp,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(dec,  exp,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    exp,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2065	None
3314	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  dec,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  dec,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  dec,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    exp,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2065	None
3337	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.charAt(0);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(0);	  pfxLen    -=    str.charAt(0)+    1;    	non-compiled	[CE]  illegal  start  of  expression	12721	None
3362	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "- "  }  ;  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "- "  }  ;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "- "  }  ;	  final    String[]    hex_prefixes    =    curated       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	18482	None
3386	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  String    str    =    str.substring(0x,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9482	None
3410	[BUG]  [BUGGY]  return  Integer.decode(mant,  16);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(mant,  16);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  16);	  return    Integer.decode(hexDigits,    16);    	non-compiled	[CE]  illegal  start  of  expression	18062	None
3458	[BUG]  [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  <  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  <  0)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  <  0)  {  return  createInteger(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')    +    1;    if(decPos    <    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5378	None
3481	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  1,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  1,  pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()  -  1,  pfxLen);	  final    String    str    =    pfx.substring(0,    pfx.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	15662	None
3482	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  2,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  2,  pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()  -  2,  pfxLen);	  final    String    str    =    pfx.substring(0,    pfx.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	15662	None
3506	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(0.0f,  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(0.0f,  hex_prefixes);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(0.0f,  hex_prefixes);	  final    String    pfx    =    str.toLowerCase(0.0f);    	non-compiled	[CE]  illegal  start  of  expression	6662	None
3530	[BUG]  [BUGGY]  Arrays.sort(pfx,  str.charAt(0),  pfxLen)+  1);  [CE]  not  a  statement  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx,  str.charAt(0),  pfxLen)+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx,  str.charAt(0),  pfxLen)+  1);	  Arrays.sort(str.charAt(0),    pfxLen)+    1);    	non-compiled	[CE]  not  a  statement	3769	None
3553	[BUG]  [BUGGY]  String  decPos  =  str.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =  str.substring(0,  pfxLen);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  str.substring(0,  pfxLen);	  String    decPos    =    pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
3554	[BUG]  [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen  +  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  pfx.substring(0,  pfxLen  +  1);	  String    decPos    =    pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
3601	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  return  createLong(str,  pfxLen  +  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createLong(str,  pfxLen  +  1);	  return    createLong(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9001	None
3674	[BUG]  [BUGGY]  for(final  String  pfxLen  :  str,  pfxLen  =  0;  [CE]  ')'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfxLen  :  str,  pfxLen  =  0;  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  :  str,  pfxLen  =  0;	  for(final    String    pfx    :    str,    pfxLen    =    0;    	non-compiled	[CE]  ')'  expected	14282	None
3722	[BUG]  [BUGGY]  static  final  String  hex_prefixes  =  str.substring(0,  str.length()));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  static  final  String  hex_prefixes  =  str.substring(0,  str.length()));  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	static  final  String  hex_prefixes  =  str.substring(0,  str.length()));	  final    String    hex_prefixes    =    str.substring(0,    str.length()    -    4));    	non-compiled	[CE]  illegal  start  of  expression	1417	None
3745	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }	  String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '/')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5906	None
3746	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  pfx.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfx.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }	  String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '/')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5906	None
3769	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1),  1);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1),  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1),  1);	  String    decPos    =(String)pfx.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2162	None
3770	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1,  1);  [CE]  ')'  expected  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1,  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1,  1);	  String    decPos    =(String)pfx.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	2162	None
3793	[BUG]  [BUGGY]  final  Arrays.sort(str,  1);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str,  1);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str,  1);	  final    Arrays.sort(str,    0);    	non-compiled	[CE]  <identifier>  expected	12122	None
3794	[BUG]  [BUGGY]  final  Arrays.sort(str,  4);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str,  4);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str,  4);	  final    Arrays.sort(str,    0);    	non-compiled	[CE]  <identifier>  expected	12122	None
3842	[BUG]  [BUGGY]  if(pfxLen  ==  0  ||  pfx.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  if(pfxLen  ==  0  ||  pfx.length()  ==  0)  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	if(pfxLen  ==  0  ||  pfx.length()  ==  0)  {	  if(pfx    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4922	None
3890	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes.substring(pfxLen  +  1),  pfx);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(hex_prefixes.substring(pfxLen  +  1),  pfx);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(hex_prefixes.substring(pfxLen  +  1),  pfx);	  Arrays.sort(hex_prefixes.substring(pfxLen    +    1),    str);    	non-compiled	[CE]  illegal  start  of  expression	422	None
3938	[BUG]  [BUGGY]  if((  final  String  pfx  :  hex_prefixes)  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if((  final  String  pfx  :  hex_prefixes)  ==  null)  {  break;  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if((  final  String  pfx  :  hex_prefixes)  ==  null)  {  break;  }	  if((    final    String    pfx    :    hex_prefixes)!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13081	None
3961	[BUG]  [BUGGY]  final  Arrays.sort(str,  true);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str,  true);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str,  true);	  final    Arrays.sort(str,    false);    	non-compiled	[CE]  <identifier>  expected	9434	None
4034	[BUG]  [BUGGY]  String  str  =(String)str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =(String)str.substring(0,  str.length()  -  2);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)str.substring(0,  str.length()  -  2);	  String    str    =(String)str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	5401	None
4082	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)+  2L;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)+  2L;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)+  2L;	  final    Integer    int    =    Integer.toLongBits(str)+    1L;    	non-compiled	[CE]  illegal  start  of  expression	4261	None
4154	[BUG]  [BUGGY]  return  createInt(str,  hexDigits  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createInt(str,  hexDigits  +  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createInt(str,  hexDigits  +  1);	  return    createLong(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  type	12421	None
4202	[BUG]  [BUGGY]  return  Integer.toLongBits(str,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.toLongBits(str,  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongBits(str,  0);	  return    Integer.toLongBits(str);    	non-compiled	[CE]  illegal  start  of  expression	6314	None
4225	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)||  StringUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(mant)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	7658	None
4226	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(exp))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(exp))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(exp))  {	  if(StringUtils.isBlank(mant)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	7658	None
4249	[BUG]  [BUGGY]  final  String  pfxLen  =  str.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  final  String  pfxLen  =  str.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	final  String  pfxLen  =  str.length();	  String    pfxLen    =    string.length();    	non-compiled	[CE]  illegal  start  of  type	1298	None
4273	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.charAt(pfxLen  -  1);	  final    String    pfx    =    pfx.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6182	None
4274	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  char  pfx  =  str.charAt(pfxLen  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfx  =  str.charAt(pfxLen  -  1);	  final    String    pfx    =    pfx.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6182	None
4298	[BUG]  [BUGGY]  return  createBigDecimal(str.charAt(1));  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str.charAt(1));  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.charAt(1));	  return    createBigDecimal(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	4513	None
4322	[BUG]  [BUGGY]  for(int  i  =  0;  i  <=  str.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <=  str.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <=  str.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);	  for(int    i    =    0;    i    <    str.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	23282	None
4345	[BUG]  [BUGGY]  String  pfx  =(char)(pfx.charAt(0),  pfxLen  +  1);  [CE]  ')'  expected  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  pfx  =(char)(pfx.charAt(0),  pfxLen  +  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(char)(pfx.charAt(0),  pfxLen  +  1);	  String    pfx    =(char)(pfx.charAt(0),    pfxLen);    	non-compiled	[CE]  ')'  expected	20582	None
4346	[BUG]  [BUGGY]  String  pfx  =(String)(pfx.charAt(0),  pfxLen);  [CE]  ')'  expected  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  pfx  =(String)(pfx.charAt(0),  pfxLen);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(String)(pfx.charAt(0),  pfxLen);	  String    pfx    =(char)(pfx.charAt(0),    pfxLen);    	non-compiled	[CE]  ')'  expected	20582	None
4417	[BUG]  [BUGGY]  Arrays.sort(str.getIntegerValue(),  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getIntegerValue(),  null);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntegerValue(),  null);	  for(final    String    hex_prefixes    :    hx_prefixes)    {    	non-compiled	[CE]  illegal  start  of  type	1682	None
4418	[BUG]  [BUGGY]  Arrays.sort(str.getIntegerValue(),  str);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getIntegerValue(),  str);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntegerValue(),  str);	  for(final    String    hex_prefixes    :    hx_prefixes)    {    	non-compiled	[CE]  illegal  start  of  type	1682	None
4490	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isDigit(lastChar))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isDigit(lastChar))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)||  StringUtils.isDigit(lastChar))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	6170	None
4562	[BUG]  [BUGGY]  Arrays.sort(this.hex_prefixes,  str);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(this.hex_prefixes,  str);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(this.hex_prefixes,  str);	  Arrays.sort(this.hex_prefixes,    null);    	non-compiled	[CE]  illegal  start  of  expression	14642	None
4610	[BUG]  [BUGGY]  if(lastChar  ==  null  &&!Character.isUpperCase(lastChar))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(lastChar  ==  null  &&!Character.isUpperCase(lastChar))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(lastChar  ==  null  &&!Character.isUpperCase(lastChar))  {	  if(lastChar    ==    null    ||!Character.isUpperCase(lastChar))    {    	non-compiled	[CE]  illegal  start  of  expression	5353	None
4634	[BUG]  [BUGGY]  final  Arrays.sort(str.getImpl());  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str.getImpl());  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.getImpl());	  final    Arrays.sort(str.getArrays());    	non-compiled	[CE]  <identifier>  expected	13502	None
4681	[BUG]  [BUGGY]  return  createLong(str,  8);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  8);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  8);	  return    createLong(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	21482	None
4682	[BUG]  [BUGGY]  return  createLong(str,  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  1);	  return    createLong(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	21482	None
4729	[BUG]  [BUGGY]  return  createInteger(str,  mant  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createInteger(str,  mant  +  1);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createInteger(str,  mant  +  1);	  for(final    String    str    :    str.substring(1))    {    	non-compiled	[CE]  illegal  start  of  type	6122	None
4730	[BUG]  [BUGGY]  return  createInteger(str,  mant  +  2);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createInteger(str,  mant  +  2);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createInteger(str,  mant  +  2);	  for(final    String    str    :    str.substring(1))    {    	non-compiled	[CE]  illegal  start  of  type	6122	None
4778	[BUG]  [BUGGY]  if(pfx.startsWith(Hex)||  pfx.endsWith(Hex))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(Hex)||  pfx.endsWith(Hex))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(Hex)||  pfx.endsWith(Hex))  {	  if(pfx.startsWith(hex)&&    pfx.endsWith(hex))    {    	non-compiled	[CE]  illegal  start  of  expression	9098	None
4802	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1,  pfxLen));  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1,  pfxLen));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1,  pfxLen));	  Arrays.sort(str.substring(0,    str.length()    -    1,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	7705	None
4874	[BUG]  [BUGGY]  final  String  decPos  =  pfx.indexOf('.')-  1;  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.indexOf('.')-  1;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.indexOf('.')-  1;	  final    String    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	2017	None
4898	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  return  createBigDecimal(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  >  1)  {  return  createBigDecimal(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  return  createBigDecimal(str);  }	  if(hexDigits    >    1)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	2714	None
4922	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxLen  +  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxLen  +  1);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9146	None
4970	[BUG]  [BUGGY]  return  createLong(str,  exp  +  16);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  exp  +  16);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  exp  +  16);	  return    createLong(str,    exp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6266	None
5018	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  0));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  0));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length())+  1,  0));	  Arrays.sort(str.getChars(0,    str.length())+    1,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	9290	None
5065	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1);  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  pfx  =  str.charAt(pfxLen  -  1);	  final    String    pfx    =    str.charAt(pfxLen);    	non-compiled	[CE]  not  a  statement	11402	None
5066	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  +  1);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  +  1);  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  pfx  =  str.charAt(pfxLen  +  1);	  final    String    pfx    =    str.charAt(pfxLen);    	non-compiled	[CE]  not  a  statement	11402	None
5089	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(pfx.length());  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  +=  str.charAt(pfx.length());  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  str.charAt(pfx.length());	  pfxLen    +=    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	8330	None
5090	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(str.length());  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  +=  str.charAt(str.length());  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  str.charAt(str.length());	  pfxLen    +=    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	8330	None
5113	[BUG]  [BUGGY]  return  createLong(str,  pfx,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  pfx,  pfxLen);  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  pfx,  pfxLen);	  if(decPos    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7562	None
5114	[BUG]  [BUGGY]  return  createInt(str,  pfx,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createInt(str,  pfx,  pfxLen);  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createInt(str,  pfx,  pfxLen);	  if(decPos    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7562	None
5162	[BUG]  [BUGGY]  static  final  String  pfx  =  str.substring(0,  str.length()));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  static  final  String  pfx  =  str.substring(0,  str.length()));  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	static  final  String  pfx  =  str.substring(0,  str.length()));	  final    String    pfx    =    str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	19321	None
5234	[BUG]  [BUGGY]  if(pfx.startsWith(hex)&&  pfx.endsWith(hexLen))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex)&&  pfx.endsWith(hexLen))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex)&&  pfx.endsWith(hexLen))  {	  if(pfx.startsWith(hex)||    pfx.endsWith(hexLen))    {    	non-compiled	[CE]  illegal  start  of  expression	6482	None
5282	[BUG]  [BUGGY]  Arrays.sort(pfx.substring(pfxLen  +  1),  str.length);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx.substring(pfxLen  +  1),  str.length);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx.substring(pfxLen  +  1),  str.length);	  Arrays.sort(str.substring(pfxLen    +    1),    pfx.length);    	non-compiled	[CE]  illegal  start  of  expression	4057	None
5378	[BUG]  [BUGGY]  return  LongBits.toLongBits(str,  2);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  return  LongBits.toLongBits(str,  2);  [BUGGY]          }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str,  2);	  return    LongBits.toLongBits(str,    1);    	non-compiled	[CE]  illegal  start  of  expression	4705	None
5425	[BUG]  [BUGGY]  if(hexDigits  >  2)  {  return  createLong(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  >  2)  {  return  createLong(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  2)  {  return  createLong(str);  }	  if(hexDigits    ==    2)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	5102	None
5449	[BUG]  [BUGGY]  break  -=  1;  [CE]  ';'  expected  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  break  -=  1;  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  -=  1;	  break    +=    1;    	non-compiled	[CE]  ';'  expected	5089	None
5474	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex  =  str.substring(0,  str.length()));  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()));	  final    String    hex    =    str.substring(0,    str.length()    -    4);    	non-compiled	[CE]  ';'  expected	674	None
5522	[BUG]  [BUGGY]  return  createInteger(dec,  exp);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInteger(dec,  exp);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInteger(dec,  exp);	  return    createLong(dec,    exp);    	non-compiled	[CE]  illegal  start  of  expression	2905	None
5546	[BUG]  [BUGGY]  final  byte  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  byte  pfxLen  =  str.length();  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  byte  pfxLen  =  str.length();	  final    long    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	938	None
5569	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)||  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)||  ArrayUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)||  ArrayUtils.isEmpty(str))  {	  if(StringUtils.isBlank(mant)&&    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1274	None
5570	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  ArrayUtils.isEmpty(pfxLen))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)&&  ArrayUtils.isEmpty(pfxLen))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  ArrayUtils.isEmpty(pfxLen))  {	  if(StringUtils.isBlank(mant)&&    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1274	None
5690	[BUG]  [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.startsWith( "-1 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.startsWith( "-1 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "0 ")||  pfx.startsWith( "-1 "))  {	  if(pfx.startsWith(   "0   ")||    pfx.startsWith(   "-0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	22322	None
5762	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return  createInteger(str,  pfxLen  +  2);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInteger(str,  pfxLen  +  2);	  return    createInteger(str,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5449	None
5786	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  >  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  >  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }	  if(pfxLen    >    0)    {    if(str.endsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	302	None
5809	[BUG]  [BUGGY]  if(str.length()  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(str.length()  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  final    String[]    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	7081	None
5857	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)||  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)||  StringUtils.isDigit(str))  {	  if(StringUtils.isBlank(mant)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	4850	None
5858	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isDigit(lastChar))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isDigit(lastChar))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  StringUtils.isDigit(lastChar))  {	  if(StringUtils.isBlank(mant)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	4850	None
5930	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length()  +  1,  10);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  System.arraycopy(str,  0,  str.length()  +  1,  10);  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length()  +  1,  10);	  System.arraycopy(str,    0,    str.length()    -    1,    10);    	non-compiled	[CE]  illegal  start  of  expression	19562	None
5953	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen+  1);  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen+  1);	  Arrays.sort(str.getChars(0,    str.length()),    pfxLen+    1);    	non-compiled	[CE]  	6782	None
5954	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1),  pfxLen+  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1),  pfxLen+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1),  pfxLen+  1);	  Arrays.sort(str.getChars(0,    str.length()),    pfxLen+    1);    	non-compiled	[CE]  illegal  start  of  expression	6782	None
5978	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(String)pfx.substring(0,  pfxLen  +  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  pfxLen  +  1);	  String    decPos    =(String)pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2161	None
6001	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes);	  if(pfx.startsWith(   "#   ")||    pfx.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	3602	None
6002	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes,  0);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes,  0);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes,  0);	  if(pfx.startsWith(   "#   ")||    pfx.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	3602	None
6025	[BUG]  [BUGGY]  return  createLong(str,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfxLen);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfxLen);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	7178	None
6026	[BUG]  [BUGGY]  return  createInteger(str,  pfx);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createInteger(str,  pfx);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createInteger(str,  pfx);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	7178	None
6050	[BUG]  [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7681	None
6097	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0)),  0);  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.charAt(0)),  0);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.charAt(0)),  0);	  Arrays.sort(str.length()),    0);    	non-compiled	[CE]  ';'  expected	15602	None
6122	[BUG]  [BUGGY]  return  Integer.toLongByte(str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.toLongByte(str,  Integer.MIN_VALUE);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongByte(str,  Integer.MIN_VALUE);	  return    Integer.toLongByte(str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	13322	None
6146	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  *  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  pfxLen  -=  str.charAt(pfxLen  *  2);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen  *  2);	  pfxLen    -=    str.charAt(pfxLen    -    2);    	non-compiled	[CE]  illegal  start  of  expression	5714	None
6170	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  mant.length();  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  ')'  expected  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  str  =  mant.substring(0,  mant.length();  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  str  =  mant.substring(0,  mant.length();  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    mant.length();    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	6410	None
6218	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }	  pfxLen    -=    str.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	2785	None
6242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getName()!=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getName()!=  0)  {  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getName()!=  0)  {	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    if(e.getName()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1250	None
6289	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  pfxLen  +=  str.charAt(0);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	pfxLen  +=  str.charAt(0);	  pfxLen    +=    str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	18962	None
6290	[BUG]  [BUGGY]  pfxLen  +=  str.length());  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  pfxLen  +=  str.length());  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	pfxLen  +=  str.length());	  pfxLen    +=    str.charAt(0));    	non-compiled	[CE]  ';'  expected	18962	None
6337	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0),  pfxLen)+  1);  [CE]  not  a  statement  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  Arrays.sort(str.getChars(0),  pfxLen)+  1);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	Arrays.sort(str.getChars(0),  pfxLen)+  1);	  return    createInt(str,    pfxLen    -    1);    	non-compiled	[CE]  not  a  statement	2402	None
6338	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0),  str.length())+  1);  [CE]  not  a  statement  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  Arrays.sort(str.getChars(0),  str.length())+  1);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	Arrays.sort(str.getChars(0),  str.length())+  1);	  return    createInt(str,    pfxLen    -    1);    	non-compiled	[CE]  not  a  statement	2402	None
6362	[BUG]  [BUGGY]  return  createInteger(str,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInteger(str,  dec);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInteger(str,  dec);	  return    createLong(str,    dec);    	non-compiled	[CE]  illegal  start  of  expression	2906	None
6386	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length()  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length()  +  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen.length()  +  1);	  final    String    str    =    pfxLen.substring(0,    pfxLen.length());    	non-compiled	[CE]  illegal  start  of  type	4010	None
6409	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length())+  1,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  str.length())+  1,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length())+  1,  pfxLen);	  Arrays.sort(str.substring(0,    str.length()    -    1),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	7706	None
6434	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str	  if(str.charAt(0)    ==    '-')    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7082	None
6505	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	482	None
6506	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isEmpty(pfxLen))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isEmpty(pfxLen))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)||  StringUtils.isEmpty(pfxLen))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	482	None
6553	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  final  String  pfxLen  =  pfx.length();  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  String  pfxLen  =  pfx.length();	  final    String    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	9338	None
6577	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1)+  1;  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen  -  1)+  1;	  pfxLen    -=    str.charAt(pfxLen    -    1));    	non-compiled	[CE]  illegal  start  of  expression	5497	None
6602	[BUG]  [BUGGY]  return  LongBits.toLongBits(str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  return  LongBits.toLongBits(str,  Integer.MIN_VALUE);  [BUGGY]          }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str,  Integer.MIN_VALUE);	  return    LongBits.toLongBits(str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	782	None
6625	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length()  -  1)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length()  -  1)-  1;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.length()  -  1)-  1;	  final    String[]    hex_prefixes    =    str.get(str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	21062	None
6626	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length()  +  1)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length()  +  1)-  1;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.length()  +  1)-  1;	  final    String[]    hex_prefixes    =    str.get(str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	21062	None
6649	[BUG]  [BUGGY]  Arrays.sort(pfx,  str.getChars(0),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx,  str.getChars(0),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx,  str.getChars(0),  pfxLen);	  Arrays.sort(str.getChars(0),    str.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	13142	None
6650	[BUG]  [BUGGY]  Arrays.sort(pfxLen,  str.length(),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfxLen,  str.length(),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfxLen,  str.length(),  pfxLen);	  Arrays.sort(str.getChars(0),    str.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	13142	None
6722	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())    +    1;    	non-compiled	[CE]  illegal  start  of  expression	11942	None
6746	[BUG]  [BUGGY]  if(decPos  ==  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(decPos  ==  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  ==  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }	  if(decPos    <    10)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5977	None
6770	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length())+  1),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length())+  1),  0);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length())+  1),  0);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length()    -    1),    0);    	non-compiled	[CE]  <identifier>  expected	625	None
6817	[BUG]  [BUGGY]  if(decPos  >=  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  >=  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >=  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    <=    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None
6818	[BUG]  [BUGGY]  if(decPos  >=  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  >=  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >=  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    <=    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None
6866	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length())+  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length())+  1;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.length())+  1;	  final    String[]    hex_prefixes    =    str.get(str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7442	None
6913	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  8));  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  8));  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen  +  1,  8));	  Arrays.sort(str.substring(pfxLen    +    1,    hexDigits));    	non-compiled	[CE]  illegal  start  of  expression	553	None
6962	[BUG]  [BUGGY]  pfxLen  -=  str.length());  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.length());  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.length());	  pfxLen    -=    str.charAt(0));    	non-compiled	[CE]  ';'  expected	14221	None
6985	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits);  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits);	  if(hexDigits    >    1)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	9242	None
6986	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxDigits,  hex_prefixes);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxDigits,  hex_prefixes);  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxDigits,  hex_prefixes);	  if(hexDigits    >    1)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	9242	None
7034	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefix)&&  pfx.endsWith(hex_prefix))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex_prefix)&&  pfx.endsWith(hex_prefix))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefix)&&  pfx.endsWith(hex_prefix))  {	  if(pfx.startsWith(hex_prefix)||    pfx.endsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	5281	None
7058	[BUG]  [BUGGY]  return  createBlank(str,  false);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBlank(str,  false);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(str,  false);	  return    createBlank(str,    null);    	non-compiled	[CE]  illegal  start  of  type	8186	None
7082	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH,  hex_prefixes)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH,  hex_prefixes)-  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH,  hex_prefixes)-  1;	  final    String    pfx    =    str.toLowerCase(java.util.Locale.ENGLISH,    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6962	None
7106	[BUG]  [BUGGY]  final  Arrays.sort(str.charAt(0),  str.length());  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str.charAt(0),  str.length());  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.charAt(0),  str.length());	  final    Arrays.sort(str.charAt(0));    	non-compiled	[CE]  <identifier>  expected	1033	None
7154	[BUG]  [BUGGY]  if(hexDigits  ==  BigDecimal.MIN_VALUE  ||  hexDigits  >  BigDecimal.MAX_VALUE)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  BigDecimal.MIN_VALUE  ||  hexDigits  >  BigDecimal.MAX_VALUE)  {  return  createInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  BigDecimal.MIN_VALUE  ||  hexDigits  >  BigDecimal.MAX_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    BigDecimal.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	2738	None
7178	[BUG]  [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  2);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  2);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  2);	  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+    1);    	non-compiled	[CE]  illegal  start  of  expression	2089	None
7250	[BUG]  [BUGGY]  Arrays.sort(hexDigits,  8);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(hexDigits,  8);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(hexDigits,  8);	  Arrays.sort(hexDigits,    null);    	non-compiled	[CE]  illegal  start  of  expression	8690	None
7322	[BUG]  [BUGGY]  char  decPos  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  char  decPos  =  str.length();  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	char  decPos  =  str.length();	  String    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	5857	None
7418	[BUG]  [BUGGY]  if(pfxLen  >=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(pfxLen  >=  0)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >=  0)  {	  if(pfxLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1705	None
7441	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfx.substring(0,  str.length()  -  1);	  String    str    =    pfx.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2138	None
7442	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  2);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfx.substring(0,  str.length()  -  2);	  String    str    =    pfx.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2138	None
7465	[BUG]  [BUGGY]  return  Integer.decode(mant,  dec,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(mant,  dec,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  dec,  Integer.MIN_VALUE);	  return    Integer.decode(dec,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	3553	None
7490	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  '0')+  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  str  =  createInteger(str,  '0')+  2;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  '0')+  2;	  final    Integer    str    =    createInteger(str,    '0')+    1;    	non-compiled	[CE]  illegal  start  of  expression	2186	None
7514	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen);	  final    String    str    =    pfx.substring(0,    pfxLen.length()));    	non-compiled	[CE]  illegal  start  of  type	3302	None
7537	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  pfxLen  +  2);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  pfxLen  +  2);	  return    createLong(str,    hexDigits    +    2);    	non-compiled	[CE]  illegal  start  of  expression	19202	None
7585	[BUG]  [BUGGY]  return  createBigDecimal(str);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createBigDecimal(str);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createBigDecimal(str);	  return    createBigInteger(str);    	non-compiled	[CE]  illegal  start  of  type	3169	None
7610	[BUG]  [BUGGY]  Arrays.sort(str.substring(hexDigits  +  1,  pfxLen)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(hexDigits  +  1,  pfxLen)+  1);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(hexDigits  +  1,  pfxLen)+  1);	  Arrays.sort(str.substring(hexDigits    +    1,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	13862	None
7633	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0x,  str.length()  -  1));  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String  dec  =  str.substring(0x,  str.length()  -  1));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0x,  str.length()  -  1));	  final    String    dec    =    str.substring(0x,    str.length()));    	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	650	None
7682	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen).length());  [CE]  ';'  expected  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen).length());  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen).length());	  final    String    str    =    pfx.substring(0,    pfxLen.length());    	non-compiled	[CE]  ';'  expected	4009	None
7730	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	}	  if(hexDigits    >    32)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8138	None
7754	[BUG]  [BUGGY]  pfxLen  -=(str  ==  null)?  str.length()  :  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  pfxLen  -=(str  ==  null)?  str.length()  :  pfx.length();  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=(str  ==  null)?  str.length()  :  pfx.length();	  pfxLen    -=(pfx    ==    null)?    str.length()    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	3722	None
7802	[BUG]  [BUGGY]  return  createInteger(str,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createInteger(str,  dec);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createInteger(str,  dec);	  return    createLong(str,    dec);    	non-compiled	[CE]  illegal  start  of  expression	1993	None
7826	[BUG]  [BUGGY]  String  pfxLen  =(char)pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  pfxLen  =(char)pfx.length();  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =(char)pfx.length();	  String    pfxLen    =(String)pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	9361	None
7849	[BUG]  [BUGGY]  for(final  String  str  :  str.substring(0,  str.length()  -  1))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  str.substring(0,  str.length()  -  1))  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  str.substring(0,  str.length()  -  1))  {	  for(final    String    str    :    str.substring(1))    {    	non-compiled	[CE]  illegal  start  of  expression	6122	None
7850	[BUG]  [BUGGY]  for(final  String  str  :  str.substring(0,  str.length()))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  str.substring(0,  str.length()))  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  str.substring(0,  str.length()))  {	  for(final    String    str    :    str.substring(1))    {    	non-compiled	[CE]  illegal  start  of  expression	6122	None
7898	[BUG]  [BUGGY]  String  str  =  mant.substring(1,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  str  =  mant.substring(1,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  str  =  mant.substring(1,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(1,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4802	None
7945	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  -  str;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  -  str;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  -  str;	  return    Integer.MAX_VALUE    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	23642	None
7946	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  1L;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  /  1L;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  1L;	  return    Integer.MAX_VALUE    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	23642	None
7970	[BUG]  [BUGGY]  if(pfx.endsWith( "0 ")||  pfx.startsWith( "9 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith( "0 ")||  pfx.startsWith( "9 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "0 ")||  pfx.startsWith( "9 "))  {	  if(pfx.endsWith(   "0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	5546	None
8089	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  str.indexOf('E')+  1;  if(decPos  >=  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.length()  ==  0)  {  str.indexOf('E')+  1;  if(decPos  >=  0)  {  return  createLong(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.length()  ==  0)  {  str.indexOf('E')+  1;  if(decPos  >=  0)  {  return  createLong(str);  }	  if(str.indexOf('.')    >=    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6842	None
8090	[BUG]  [BUGGY]  if(str.indexOf('.')  >=  str.indexOf('E')  +  1;  if(decPos  >  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.indexOf('.')  >=  str.indexOf('E')  +  1;  if(decPos  >  0)  {  return  createLong(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.indexOf('.')  >=  str.indexOf('E')  +  1;  if(decPos  >  0)  {  return  createLong(str);  }	  if(str.indexOf('.')    >=    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6842	None
8114	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen)-  1;  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen)-  1;  }  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen)-  1;  }	  pfxLen    -=    str.charAt(pfxLen)-    1;    	non-compiled	[CE]  illegal  start  of  expression	1537	None
8137	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen),  exp);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(pfxLen),  exp);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen),  exp);	  Arrays.sort(str.substring(pfxLen),    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	6794	None
8138	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  hexDigits);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen),  hexDigits);	  Arrays.sort(str.substring(pfxLen),    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	6794	None
8161	[BUG]  [BUGGY]  final  int  pfxLen  =(str  ==  null)?  str.length()  :  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  int  pfxLen  =(str  ==  null)?  str.length()  :  1;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =(str  ==  null)?  str.length()  :  1;	  final    int    pfxLen    =(hex_prefixes    ==    null)?    str.length()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	3242	None
8185	[BUG]  [BUGGY]  String  str  =(String)pfxLen.substring(0,  pfxLen.length()  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =(String)pfxLen.substring(0,  pfxLen.length()  +  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfxLen.substring(0,  pfxLen.length()  +  1);	  String    str    =(String)pfxLen.substring(0,    pfxLen.length());    	non-compiled	[CE]  illegal  start  of  expression	2666	None
8186	[BUG]  [BUGGY]  String  str  =(String)pfxLen.substring(0,  pfxLen.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =(String)pfxLen.substring(0,  pfxLen.length()  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfxLen.substring(0,  pfxLen.length()  -  1);	  String    str    =(String)pfxLen.substring(0,    pfxLen.length());    	non-compiled	[CE]  illegal  start  of  expression	2666	None
8210	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  if(hex_prefixes  ==  null)  {  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  }  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	if(hex_prefixes  ==  null)  {  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  }	  int    pfxLen    =(hex_prefixes    ==    null)?    0    :    hex_prefixes.length();    	non-compiled	[CE]  illegal  start  of  expression	15722	None
8234	[BUG]  [BUGGY]  return  createInt(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return  createInt(str,  pfxLen  +  1);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInt(str,  pfxLen  +  1);	  return    createInt(str,    pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2402	None
8281	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen  +  1));  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen  +  1));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfxLen  +  1));	  Arrays.sort(str.charAt(0),    pfxLen));    	non-compiled	[CE]  	3025	None
8282	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfxLen);	  Arrays.sort(str.charAt(0),    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	3025	None
8305	[BUG]  [BUGGY]  pfxLen  +=  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  +=  pfx.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  pfx.length();	  pfxLen    +=    str.length()    *    2;    	non-compiled	[CE]  illegal  start  of  type	2102	None
8330	[BUG]  [BUGGY]  }  else  if(str.charAt(0)!=  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  }  else  if(str.charAt(0)!=  '-')  {  return  null;  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}  else  if(str.charAt(0)!=  '-')  {  return  null;  }	  }    else    if(str.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	16502	None
8354	[BUG]  [BUGGY]  pfxLen  =(str  ==  null)?  1  :  str.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  pfxLen  =(str  ==  null)?  1  :  str.length();  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(str  ==  null)?  1  :  str.length();	  pfxLen    =(str    ==    null)?    0    :    str.length();    	non-compiled	[CE]  illegal  start  of  type	7322	None
8402	[BUG]  [BUGGY]  if(!StringUtils.isWhitespace(str)&&  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(!StringUtils.isWhitespace(str)&&  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(!StringUtils.isWhitespace(str)&&  StringUtils.isDigit(str))  {	  if(StringUtils.isWhitespace(str)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3289	None
8449	[BUG]  [BUGGY]  if(pfxLen  >  10)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  >  10)  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  >  10)  {	  return    createBigDecimal(pfx,    str);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
8450	[BUG]  [BUGGY]  if(pfxLen  <  16)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  <  16)  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  <  16)  {	  return    createBigDecimal(pfx,    str);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
8474	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getName()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getName()  ==  0)  {  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getName()  ==  0)  {	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    1);    if(e.getNumerics()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7154	None
8498	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1)/  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1)/  2;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen  -  1)/  2;	  pfxLen    -=    str.charAt(pfxLen    -    1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4394	None
8545	[BUG]  [BUGGY]  Arrays.sort(str,  hex_prefixes,  true);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(str,  hex_prefixes,  true);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  hex_prefixes,  true);	  Arrays.sort(str,    hex_prefixes,    false);    	non-compiled	[CE]  illegal  start  of  expression	3650	None
8570	[BUG]  [BUGGY]  if(last  String  pfxLen  :  hex_prefixes)  {  break;  }  [CE]  ')'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if(last  String  pfxLen  :  hex_prefixes)  {  break;  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(last  String  pfxLen  :  hex_prefixes)  {  break;  }	  if(final    String    pfxLen    :    hex_prefixes)    {    break;    }    	non-compiled	[CE]  ')'  expected	9218	None
8593	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  return  createBigInteger(str);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	return  createBigInteger(str);	  return    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	11101	None
8594	[BUG]  [BUGGY]  return  createBigDecimal(str);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  return  createBigDecimal(str);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	return  createBigDecimal(str);	  return    createInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	11101	None
8690	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfxPrefix);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfxPrefix);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfxPrefix);	  final    String    pfx    =    pfx.substring(pfxLen    +    1,    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	12062	None
8713	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(pfxLen  ==  0)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	  if(pfxLen    ==    0)    {    int    pfxLen    =    str.length();    if(pfxLen    <    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	122	None
8737	[BUG]  [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE);	  return    createLong(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9001	None
8738	[BUG]  [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE,  dec);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE,  dec);	  return    createLong(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9001	None
8762	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  pfx  =  str.substring(pfxLen  +  2);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.substring(pfxLen  +  2);	  final    String    pfx    =    str.substring(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4129	None
8786	[BUG]  [BUGGY]  if(decPos  >  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  >  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(decPos    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4321	None
8833	[BUG]  [BUGGY]  final  String  decPos  =  pfx.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.charAt(0);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.charAt(0);	  String    decPos    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	5342	None
8834	[BUG]  [BUGGY]  char  decPos  =  pfx.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  char  decPos  =  pfx.charAt(0);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	char  decPos  =  pfx.charAt(0);	  String    decPos    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	5342	None
8857	[BUG]  [BUGGY]  return  Integer.toLongByte(str,  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.toLongByte(str,  1);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongByte(str,  1);	  return    Integer.toLongByte(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	7754	None
8858	[BUG]  [BUGGY]  return  Integer.toLongByte(str,  16);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.toLongByte(str,  16);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongByte(str,  16);	  return    Integer.toLongByte(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	7754	None
8906	[BUG]  [BUGGY]  if(pfx.startsWith(HEX_VALUE_NUMBER_INT)&&  pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(HEX_VALUE_NUMBER_INT)&&  pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(HEX_VALUE_NUMBER_INT)&&  pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))  {	  if(pfx.startsWith(HEX_VALUE_NUMBER_INT)||    pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))    {    	non-compiled	[CE]  illegal  start  of  expression	15362	None
8929	[BUG]  [BUGGY]  str.getChars(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  str.getChars(0,  str.length());  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	str.getChars(0,  str.length());	  str.getChars(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1946	None
8953	[BUG]  [BUGGY]  String  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;	  char    pfxLen    =(pfx    ==    null)?    str.length()    :    pfx;    	non-compiled	[CE]  illegal  start  of  expression	4370	None
8954	[BUG]  [BUGGY]  String  pfxLen  =(pfx  ==  null)?  str.length()  :  pfxLen;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  pfxLen  =(pfx  ==  null)?  str.length()  :  pfxLen;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =(pfx  ==  null)?  str.length()  :  pfxLen;	  char    pfxLen    =(pfx    ==    null)?    str.length()    :    pfx;    	non-compiled	[CE]  illegal  start  of  expression	4370	None
8978	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createInteger(str,  pfxLen  +  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createInteger(str,  pfxLen  +  1);	  return    createInteger(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	7177	None
9002	[BUG]  [BUGGY]  Arrays.sort(str,  0,  hex_prefixes.length[0]);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(str,  0,  hex_prefixes.length[0]);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  0,  hex_prefixes.length[0]);	  Arrays.sort(hex_prefixes,    0,    str.length[0]);    	non-compiled	[CE]  illegal  start  of  expression	11882	None
9050	[BUG]  [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  *  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  *  2;  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  hex_prefixes.length  *  2;	  final    int    pfxLen    =    hex_prefixes.length    +    2;    	non-compiled	[CE]  illegal  start  of  expression	7489	None
9074	[BUG]  [BUGGY]  final  String  decPos  =  pfx.indexOf('.',  '/')+  1;  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.indexOf('.',  '/')+  1;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.indexOf('.',  '/')+  1;	  String    decPos    =    pfx.indexOf('.',    '/')+    1;    	non-compiled	[CE]  illegal  start  of  type	23702	None
9121	[BUG]  [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( "-- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( "-- "))  {  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfx.startsWith( "-- ")||  pfx.endsWith( "-- "))  {	  pfxLen    +=    pfx.charAt(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	962	None
9122	[BUG]  [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( ".-- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( ".-- "))  {  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfx.startsWith( "-- ")||  pfx.endsWith( ".-- "))  {	  pfxLen    +=    pfx.charAt(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	962	None
9170	[BUG]  [BUGGY]  return  createInt(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  return  createInt(str,  pfxLen  +  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createInt(str,  pfxLen  +  1);	  return    createLong(str,    pfx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7561	None
9193	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  ==  1)  {  return  createBigInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  ==  1)  {  return  createBigInteger(str);  }	  if(str    ==    null    ||    str.length()    ==    pfxLen)    {    	non-compiled	[CE]  illegal  start  of  expression	1442	None
9194	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  ==  1)  {  return  createInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  ==  1)  {  return  createInteger(str);  }	  if(str    ==    null    ||    str.length()    ==    pfxLen)    {    	non-compiled	[CE]  illegal  start  of  expression	1442	None
9218	[BUG]  [BUGGY]  return  createBigDecimal(null,  str);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(null,  str);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(null,  str);	  return    createBigDecimal(str,    numeric);    	non-compiled	[CE]  illegal  start  of  type	1622	None
9265	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  str.length()  -  8);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  str.length()  -  8);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  str.length()  -  8);	  return    Integer.decode(hexDigits,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	17702	None
9266	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  1,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  1,  str.length());  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  1,  str.length());	  return    Integer.decode(hexDigits,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	17702	None
9361	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	String  decPos  =  pfx.charAt(pfxLen  -  1);	  final    String    pfx    =    str.toStringTree(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	242	None
9362	[BUG]  [BUGGY]  final  String  decPos  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  decPos  =  pfx.charAt(pfxLen  -  1);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  decPos  =  pfx.charAt(pfxLen  -  1);	  final    String    pfx    =    str.toStringTree(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	242	None
9409	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()  -  1,  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()  -  1,  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String[]  dec  =  str.substring(0,  str.length()  -  1,  0);	  final    String[]    dec    =    str.substring(0,    str.length()),    0);    	non-compiled	[CE]  illegal  start  of  type	2462	None
9410	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()  -  2,  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()  -  2,  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String[]  dec  =  str.substring(0,  str.length()  -  2,  0);	  final    String[]    dec    =    str.substring(0,    str.length()),    0);    	non-compiled	[CE]  illegal  start  of  type	2462	None
9458	[BUG]  [BUGGY]  if(pfx.length()  ==  0)  {  pfxLen  +=  str.length();  }  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.length()  ==  0)  {  pfxLen  +=  str.length();  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.length()  ==  0)  {  pfxLen  +=  str.length();  }	  pfxLen    +=    str.length();    	non-compiled	[CE]  illegal  start  of  type	8329	None
9506	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  16);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  pfxLen  +  16);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  pfxLen  +  16);	  return    createLong(str,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6265	None
9530	[BUG]  [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith( "/ "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "# ")||  pfx.endsWith( "/ "))  {	  if(pfx.startsWith(   "#   ")||    pfx.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	3602	None
9554	[BUG]  [BUGGY]  return  createInt(str,  pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return  createInt(str,  pfxLen  +  2);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInt(str,  pfxLen  +  2);	  return    createLong(str,    pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	506	None
9578	[BUG]  [BUGGY]  return  createLong(str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createLong(str.length();  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str.length();	  return    createLong(str.length()    -    8);    	non-compiled	[CE]  illegal  start  of  expression	1633	None
9601	[BUG]  [BUGGY]  break  &=  str.charAt(0);  [CE]  ';'  expected  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  break  &=  str.charAt(0);  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  &=  str.charAt(0);	  break    &=    pfx.charAt(0);    	non-compiled	[CE]  ';'  expected	1742	None
9626	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  +  1)/  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.charAt(pfxLen  +  1)/  2;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen  +  1)/  2;	  pfxLen    -=    str.charAt(pfxLen    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4921	None
9698	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str.charAt(0)))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str.charAt(0)))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  StringUtils.isDefined(str.charAt(0)))  {	  if(str    ==    null    ||    StringUtils.isDefined(str))    {    	non-compiled	[CE]  illegal  start  of  expression	23102	None
9722	[BUG]  [BUGGY]  char  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  char  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	char  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();	  int    pfxLen    =(hex_prefixes    ==    null)?    0    :    hex_prefixes.length();    	non-compiled	[CE]  illegal  start  of  type	14942	None
9746	[BUG]  [BUGGY]  pfxLen  =(pfx!=  null)?  str.length()  :  pfx.lastChar;  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  pfxLen  =(pfx!=  null)?  str.length()  :  pfx.lastChar;  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(pfx!=  null)?  str.length()  :  pfx.lastChar;	  pfxLen    =(pfx    ==    null)?    str.length()    :    pfx.lastChar;    	non-compiled	[CE]  illegal  start  of  type	7982	None
9770	[BUG]  [BUGGY]  final  Integer  int  =  str  ==  null?  Integer.toInteger(str).intValue()  :  Integer.toInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =  str  ==  null?  Integer.toInteger(str).intValue()  :  Integer.toInteger(str);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  str  ==  null?  Integer.toInteger(str).intValue()  :  Integer.toInteger(str);	  final    Integer    int    =    Integer.toInteger(str).intValue();    	non-compiled	[CE]  illegal  start  of  expression	5762	None
9817	[BUG]  [BUGGY]  final  String  decPos  =  pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.substring(0,  pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.substring(0,  pfxLen);	  final    String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	1225	None
9818	[BUG]  [BUGGY]  final  String  decPos  =  pfx.toLowerCase();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.toLowerCase();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.toLowerCase();	  final    String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	1225	None
9961	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  ArrayUtils.isEmpty(mant))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isEmpty(str)||  ArrayUtils.isEmpty(mant))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isEmpty(str)||  ArrayUtils.isEmpty(mant))  {	  if(StringUtils.isEmpty(str)||    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3841	None
9962	[BUG]  [BUGGY]  if(StringUtils.isEmpty(mant)||  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isEmpty(mant)||  ArrayUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isEmpty(mant)||  ArrayUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3841	None
9985	[BUG]  [BUGGY]  Arrays.sort(pfxX.substring(pfxLen  +  1),  str);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfxX.substring(pfxLen  +  1),  str);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfxX.substring(pfxLen  +  1),  str);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxX);    	non-compiled	[CE]  illegal  start  of  expression	4058	None
9986	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxX,  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxX,  hex_prefixes);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfxX,  hex_prefixes);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxX);    	non-compiled	[CE]  illegal  start  of  expression	4058	None
10009	[BUG]  [BUGGY]  return  createLong(str,  lastChar  +  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  lastChar  +  pfxLen);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  lastChar  +  pfxLen);	  return    createLong(str,    mant    +    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9266	None
10010	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  mant);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  pfxLen  +  mant);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  pfxLen  +  mant);	  return    createLong(str,    mant    +    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9266	None
10033	[BUG]  [BUGGY]  final  Arrays.sort(str.length()));  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str.length()));  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.length()));	  Arrays.sort(str.length()));    	non-compiled	[CE]  <identifier>  expected	16562	None
10034	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0)));  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.charAt(0)));  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.charAt(0)));	  Arrays.sort(str.length()));    	non-compiled	[CE]  ';'  expected	16562	None
10105	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {	  if(str.indexOf('.')    >=    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6842	None
10153	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.charAt(0),  str.length()  -  1);	  Arrays.sort(str.charAt(0),    str.length());    	non-compiled	[CE]  illegal  start  of  type	2642	None
10154	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  2);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  2);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.charAt(0),  str.length()  -  2);	  Arrays.sort(str.charAt(0),    str.length());    	non-compiled	[CE]  illegal  start  of  type	2642	None
10177	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.getIntValue(),  1);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue(),  1);	  Arrays.sort(str.getIntValue(),    0);    	non-compiled	[CE]  illegal  start  of  expression	4201	None
10178	[BUG]  [BUGGY]  final  Arrays.sort(str.getIntValue(),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str.getIntValue(),  0);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.getIntValue(),  0);	  Arrays.sort(str.getIntValue(),    0);    	non-compiled	[CE]  <identifier>  expected	4201	None
10225	[BUG]  [BUGGY]  for(final  String  pfxLen  :  str.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfxLen  :  str.length)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  :  str.length)  {	  for(final    String    pfxLen    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	4946	None
10226	[BUG]  [BUGGY]  for(final  String  pfxLen  =  str.length())  {  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfxLen  =  str.length())  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  =  str.length())  {	  for(final    String    pfxLen    :    pfx.length)    {    	non-compiled	[CE]  	4946	None
10250	[BUG]  [BUGGY]  return  Integer.decode(str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.decode(str,  Integer.MIN_VALUE);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.decode(str,  Integer.MIN_VALUE);	  return    Integer.decode(str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	17762	None
10274	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  pfxLen  +  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  pfxLen  +  1);	  return    createLong(str,    lastChar    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4022	None
10297	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str;  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return(str  ==  null)?  null  :  str;  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return(str  ==  null)?  null  :  str;	  break    -=    pfxLen.length();    	non-compiled	[CE]  illegal  start  of  expression	6002	None
10298	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase();  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase();  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return(str  ==  null)?  null  :  str.toLowerCase();	  break    -=    pfxLen.length();    	non-compiled	[CE]  illegal  start  of  expression	6002	None
10322	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  char  pfx  =  str.charAt(0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  char  pfx  =  str.charAt(0);	  final    String    pfx    =    str.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	7970	None
10369	[BUG]  [BUGGY]  return  createLong(str,  pfx  +  1,  8);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfx  +  1,  8);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfx  +  1,  8);	  return    createLong(str,    hexDigits    +    1,    8);    	non-compiled	[CE]  illegal  start  of  type	12422	None
10370	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  1,  8);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfxLen  +  1,  8);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfxLen  +  1,  8);	  return    createLong(str,    hexDigits    +    1,    8);    	non-compiled	[CE]  illegal  start  of  type	12422	None
10394	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  8);  if(e.getNumerics()  ==  0)  {  return  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  8);  if(e.getNumerics()  ==  0)  {  return  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  8);  if(e.getNumerics()  ==  0)  {  return	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    8);    if(e.getNumerics()    ==    0)    {    return    create    	non-compiled	[CE]  illegal  start  of  expression	217	None
10417	[BUG]  [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "- "))  {  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfx.endsWith( "-1 ")||  pfx.startsWith( "- "))  {	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	722	None
10418	[BUG]  [BUGGY]  if(pfx.endsWith( "- ")||  pfx.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(pfx.endsWith( "- ")||  pfx.startsWith( "- "))  {  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfx.endsWith( "- ")||  pfx.startsWith( "- "))  {	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	722	None
10466	[BUG]  [BUGGY]  if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    8)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	13742	None
10562	[BUG]  [BUGGY]  if(pfx.startsWith( "0x ")||  pfx.endsWith( "-0x "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "0x ")||  pfx.endsWith( "-0x "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "0x ")||  pfx.endsWith( "-0x "))  {	  if(pfx.startsWith(   "0x   ")||    pfx.endsWith(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	1802	None
10586	[BUG]  [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.endsWith( "- "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "0 ")||  pfx.endsWith( "- "))  {	  if(pfx.startsWith(   "-1   ")||    pfx.endsWith(   "-1))    {    	non-compiled	[CE]  illegal  start  of  expression	5882	None
10657	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(str.length()  -  1)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.charAt(str.length()  -  1)-  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(str.length()  -  1)-  1;	  final    String    pfx    =    str.charAt(str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	7802	None
10658	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(hex_prefixes.length())-  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.charAt(hex_prefixes.length())-  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(hex_prefixes.length())-  1;	  final    String    pfx    =    str.charAt(str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	7802	None
10730	[BUG]  [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen  +  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.substring(0,  pfxLen  +  1);	  String    decPos    =    pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	1226	None
10778	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }	  if(str.length()    ==    0)    {    if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	21302	None
10873	[BUG]  [BUGGY]  return  Integer.decode(mant,  pfxLen,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(mant,  pfxLen,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  pfxLen,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    pfxLen,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	6542	None
10897	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1));  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1));	  Arrays.sort(str.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	20522	None
10898	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.substring(0,  str.length()));  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.substring(0,  str.length()));	  Arrays.sort(str.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	20522	None
10946	[BUG]  [BUGGY]  return  createBigDecimal(str,  false);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str,  false);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  false);	  return    createBigDecimal(str,    null);    	non-compiled	[CE]  illegal  start  of  type	4562	None
10970	[BUG]  [BUGGY]  int  pfxLen  =(pfx!=  null)?  str.length()  -  pfxLen  -  1;  [CE]  :  expected  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  int  pfxLen  =(pfx!=  null)?  str.length()  -  pfxLen  -  1;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx!=  null)?  str.length()  -  pfxLen  -  1;	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    pfxLen    -    1;    	non-compiled	[CE]  :  expected	9421	None
10994	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  hex_prefix);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  hex_prefix);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen),  hex_prefix);	  Arrays.sort(str.substring(pfxLen),    hex_prefix);    	non-compiled	[CE]  illegal  start  of  expression	7993	None
11018	[BUG]  [BUGGY]  return  Integer.decode(dec,  mant,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(dec,  mant,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(dec,  mant,  Integer.MIN_VALUE);	  return    Integer.decode(mant,    str,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2066	None
11041	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen),  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen),  hex_prefixes);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(0,  pfxLen),  hex_prefixes);	  Arrays.sort(str.substring(0,    hexDigits),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	11342	None
11042	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  pfxLen);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(0,  hexDigits),  pfxLen);	  Arrays.sort(str.substring(0,    hexDigits),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	11342	None
11066	[BUG]  [BUGGY]  String  decPos  =  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =  str.charAt(0);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  str.charAt(0);	  String    decPos    =    pfx.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	3506	None
11089	[BUG]  [BUGGY]  for(final  String  d  :  str.toString())  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(final  String  d  :  str.toString())  {  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(final  String  d  :  str.toString())  {	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5522	None
11090	[BUG]  [BUGGY]  for(final  String  str  :  d.toString())  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(final  String  str  :  d.toString())  {  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(final  String  str  :  d.toString())  {	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5522	None
11114	[BUG]  [BUGGY]  for(final  String  dec  :  str.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  dec  :  str.length)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  dec  :  str.length)  {	  for(final    String    pfx    :    str.length)    {    	non-compiled	[CE]  illegal  start  of  expression	4945	None
11138	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  ==  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }	  if(pfxLen    >    0)    {    pfxLen    -=    pfx.charAt(pfxLen    -    1));    }    	non-compiled	[CE]  ';'  expected	2786	None
11162	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  *  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  *  2;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  *  2;	  return    Integer.MAX_VALUE    /    2;    	non-compiled	[CE]  illegal  start  of  expression	530	None
11186	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  2);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfxLen  +  2);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfxLen  +  2);	  return    createLong(str,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	1658	None
11209	[BUG]  [BUGGY]  break  -=  pfx.length();  [CE]  ';'  expected  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  break  -=  pfx.length();  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  -=  pfx.length();	  break    -=    pfxLen.length();    	non-compiled	[CE]  ';'  expected	6002	None
11210	[BUG]  [BUGGY]  break  -=  str.length();  [CE]  ';'  expected  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  break  -=  str.length();  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  -=  str.length();	  break    -=    pfxLen.length();    	non-compiled	[CE]  ';'  expected	6002	None
11233	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1),  0));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1),  0));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1),  0));	  Arrays.sort(str.getChars(0,    str.length()),    0));    	non-compiled	[CE]  illegal  start  of  expression	17342	None
11234	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  0));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  0));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1,  0));	  Arrays.sort(str.getChars(0,    str.length()),    0));    	non-compiled	[CE]  illegal  start  of  expression	17342	None
11258	[BUG]  [BUGGY]  if(dec  ==  null  &&  str.indexOf('.')>  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(dec  ==  null  &&  str.indexOf('.')>  0)  {  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  str.indexOf('.')>  0)  {	  if(dec    ==    null    &&    str.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8762	None
11281	[BUG]  [BUGGY]  if(pfx.endsWith( "/.000 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith( "/.000 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "/.000 "))  {	  if(pfx.endsWith(   "/.0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	3146	None
11282	[BUG]  [BUGGY]  if(pfx.endsWith( "/. ")||  pfx.startsWith( "/. "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith( "/. ")||  pfx.startsWith( "/. "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "/. ")||  pfx.startsWith( "/. "))  {	  if(pfx.endsWith(   "/.0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	3146	None
11305	[BUG]  [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }	  final    int    pfxLen    =(hex_prefixes    ==    null)?    2    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	6242	None
11306	[BUG]  [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE  ||  hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE  ||  hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	if(hexDigits  ==  BigInteger.MIN_VALUE  ||  hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  final    int    pfxLen    =(hex_prefixes    ==    null)?    2    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	6242	None
11330	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(1,  str.length()));  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex_prefixes  =  str.substring(1,  str.length()));  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(1,  str.length()));	  final    String    hex_prefixes    =    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ';'  expected	1418	None
11378	[BUG]  [BUGGY]  if(Character.isWhitespace(str)&&  Character.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(Character.isWhitespace(str)&&  Character.isBlank(str))  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(Character.isWhitespace(str)&&  Character.isBlank(str))  {	  if(StringUtils.isBlank(str)&&    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	9122	None
11402	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length())+  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length())+  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length())+  1;	  final    String    hex_prefixes    =    str.substring(0,    str.length()    -    1)-    1;    	non-compiled	[CE]  illegal  start  of  expression	4825	None
11425	[BUG]  [BUGGY]  return  createInt(str,  exp  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInt(str,  exp  +  1);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str,  exp  +  1);	  return    createInt(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3434	None
11426	[BUG]  [BUGGY]  return  createInt(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInt(str,  pfxLen  +  1);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str,  pfxLen  +  1);	  return    createInt(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3434	None
11474	[BUG]  [BUGGY]  if(hexDigits  >  2)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  >  2)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  2)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    2)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3362	None
11521	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1);	  if(pfx.startsWith(hex)||    pfx.endsWith(hexLen))    {    	non-compiled	[CE]  illegal  start  of  type	6482	None
11522	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  4);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  4);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes  +  4);	  if(pfx.startsWith(hex)||    pfx.endsWith(hexLen))    {    	non-compiled	[CE]  illegal  start  of  type	6482	None
11546	[BUG]  [BUGGY]  pfxLen  =(pfx!=  null)?  pfx.length()  :  pfx.intValue();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  =(pfx!=  null)?  pfx.length()  :  pfx.intValue();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =(pfx!=  null)?  pfx.length()  :  pfx.intValue();	  pfxLen    =(pfx    ==    null)?    pfx.length()    :    pfx.intValue();    	non-compiled	[CE]  illegal  start  of  type	4382	None
11594	[BUG]  [BUGGY]  final  String  decPos  =  pfx.indexOf('.')/  1;  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.indexOf('.')/  1;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.indexOf('.')/  1;	  final    String    decPos    =    pfx.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	4178	None
11642	[BUG]  [BUGGY]  if(pfxLen  >  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  >  1)  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  >  1)  {	  return    createBigDecimal(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	1921	None
11689	[BUG]  [BUGGY]  return  createNumber(str,  true);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createNumber(str,  true);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createNumber(str,  true);	  return    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	2281	None
11690	[BUG]  [BUGGY]  return  createNumber(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createNumber(str,  null);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createNumber(str,  null);	  return    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	2281	None
11738	[BUG]  [BUGGY]  }  else  if(str.length()  ==  1  ||  str.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  }  else  if(str.length()  ==  1  ||  str.charAt(0)  ==  '/')  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.length()  ==  1  ||  str.charAt(0)  ==  '/')  {	  }    else    if(str.length()    ==    0    ||    str.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	5822	None
11762	[BUG]  [BUGGY]  final  char  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  char  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length);	  final    String    pfxLen    =    pfx.charAt(pfxLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	18002	None
11786	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(32);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(32);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(32);	  final    String    pfx    =    str.toLowerCase(64);    	non-compiled	[CE]  illegal  start  of  expression	6661	None
11810	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <=  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(str  ==  null  ||  str.length()  <=  pfxLen)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  str.length()  <=  pfxLen)  {	  if(str    ==    null    ||    str.length()    <    pfxLen)    {    	non-compiled	[CE]  illegal  start  of  expression	22381	None
11858	[BUG]  [BUGGY]  final  String  hex  =(String)str.charAt(1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex  =(String)str.charAt(1);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =(String)str.charAt(1);	  final    String    hex    =(String)str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	745	None
11905	[BUG]  [BUGGY]  for(final  String  str  :  dec)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  dec)  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  dec)  {	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	2762	None
11906	[BUG]  [BUGGY]  for(final  String  str  :  exp)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  exp)  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  exp)  {	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	2762	None
11930	[BUG]  [BUGGY]  Arrays.sort(mant,  false);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant,  false);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  false);	  Arrays.sort(hexDigits,    false);    	non-compiled	[CE]  illegal  start  of  expression	5162	None
11953	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isInfinite(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)&&  StringUtils.isInfinite(str))  {	  if(StringUtils.isWhitespace(str)||    StringUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2821	None
11977	[BUG]  [BUGGY]  Arrays.sort(dec,  null);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  null);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  null);	  Arrays.sort(mant,    null);    	non-compiled	[CE]  illegal  start  of  expression	8689	None
11978	[BUG]  [BUGGY]  Arrays.sort(dec,  mant,  null);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  mant,  null);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  mant,  null);	  Arrays.sort(mant,    null);    	non-compiled	[CE]  illegal  start  of  expression	8689	None
12002	[BUG]  [BUGGY]  final  int  pfxLen  =(str  ==  null)?  -1  :  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  int  pfxLen  =(str  ==  null)?  -1  :  str.length();  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =(str  ==  null)?  -1  :  str.length();	  final    int    pfxLen    =(str.length()    ==    0)?    -1    :    str.length();    	non-compiled	[CE]  illegal  start  of  expression	14042	None
12025	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isWhitespace(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	8942	None
12049	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.charAt(0));  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.charAt(0));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.charAt(0));	  Arrays.sort(str.charAt(0),    str.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	12662	None
12146	[BUG]  [BUGGY]  if(pfx.equals( "# ")||  pfx.equals( "* "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.equals( "# ")||  pfx.equals( "* "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.equals( "# ")||  pfx.equals( "* "))  {	  if(pfx.equals(   "#   ")||    pfx.equals(   "#   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6698	None
12170	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	3793	None
12218	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen)/  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.charAt(pfxLen)/  2;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen)/  2;	  pfxLen    -=    str.charAt(pfxLen)+    2;    	non-compiled	[CE]  illegal  start  of  expression	698	None
12242	[BUG]  [BUGGY]  final  long  pfxLen  =  hex_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  long  pfxLen  =  hex_prefixes.length();  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  long  pfxLen  =  hex_prefixes.length();	  final    int    pfxLen    =    hex_prefixes.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6302	None
12266	[BUG]  [BUGGY]  return  createBigDecimal(dec,  str);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(dec,  str);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(dec,  str);	  return    createBigDecimal(pfx,    str);    	non-compiled	[CE]  illegal  start  of  type	1922	None
12338	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  pfx  =  str.substring(pfxLen  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.substring(pfxLen  -  1);	  final    String    pfx    =    str.substring(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	4777	None
12385	[BUG]  [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length();  [CE]  :  expected  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length();  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx  ==  null)?  str.length();	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    1;    	non-compiled	[CE]  :  expected	9422	None
12386	[BUG]  [BUGGY]  int  pfxLen  =(str  ==  null)?  str.length();  [CE]  :  expected  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  int  pfxLen  =(str  ==  null)?  str.length();  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(str  ==  null)?  str.length();	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    1;    	non-compiled	[CE]  :  expected	9422	None
12409	[BUG]  [BUGGY]  String  str  =  str.substring(0x,  str.length()  -  1);  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  str.substring(0x,  str.length()  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0x,  str.length()  -  1);	  String    str    =    str.substring(0x,    str.length());    	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	9482	None
12410	[BUG]  [BUGGY]  String  str  =  str.substring(0x,  str.length()  -  4);  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  str.substring(0x,  str.length()  -  4);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0x,  str.length()  -  4);	  String    str    =    str.substring(0x,    str.length());    	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	9482	None
12434	[BUG]  [BUGGY]  if(str  ==  null  ||  pfx.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(str  ==  null  ||  pfx.length()  ==  0)  {  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(str  ==  null  ||  pfx.length()  ==  0)  {	  if(pfx    ==    null    ||    pfx.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9026	None
12457	[BUG]  [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  >=  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  >=  0)  {  return  createLong(str);  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  >=  0)  {  return  createLong(str);  }	  if(decPos    >    10)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3673	None
12458	[BUG]  [BUGGY]  if(str.charAt(decPos)  ==  '.')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  >=  decPos)  {  return  create  [CE]  ';'  expected  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(str.charAt(decPos)  ==  '.')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  >=  decPos)  {  return  create  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(str.charAt(decPos)  ==  '.')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  >=  decPos)  {  return  create	  if(decPos    >    10)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  ';'  expected	3673	None
12505	[BUG]  [BUGGY]  final  String  decPos  =  pfx.getDeclaringClass().getName();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.getDeclaringClass().getName();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.getDeclaringClass().getName();	  final    String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	6145	None
12506	[BUG]  [BUGGY]  final  String  decPos  =  pfx.getDeclarations();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.getDeclarations();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.getDeclarations();	  final    String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	6145	None
12530	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(p  [CE]  ';'  expected  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(p  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(p	  if(pfxLen    ==    0)    {    pfxLen    +=    pfx.charAt(pfxLen));    if(pfxLen    >=    pfxLen)    {    pfxLen    +=    pfx.charAt(pf    	non-compiled	[CE]  ';'  expected	1609	None
12578	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    pfxLen);    if(str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	12302	None
12601	[BUG]  [BUGGY]  final  String  str  =  hex_prefixes.charAt(1);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  final  String  str  =  hex_prefixes.charAt(1);  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  str  =  hex_prefixes.charAt(1);	  final    String    str    =    hexDigits.charAt(1);    	non-compiled	[CE]  not  a  statement	22262	None
12602	[BUG]  [BUGGY]  final  String  str  =  hexDigits.charAt(0);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  final  String  str  =  hexDigits.charAt(0);  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  str  =  hexDigits.charAt(0);	  final    String    str    =    hexDigits.charAt(1);    	non-compiled	[CE]  not  a  statement	22262	None
12625	[BUG]  [BUGGY]  for(final  String  hx_prefixes  :  str)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  hx_prefixes  :  str)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  hx_prefixes  :  str)  {	  for(final    String    hx_prefixes    :    hx_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	20881	None
12698	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(str    ==    null    ||    StringUtils.isISOControl(str))    {    	non-compiled	[CE]  illegal  start  of  expression	6722	None
12721	[BUG]  [BUGGY]  return  createBigDecimal(str,  nfx);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str,  nfx);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  nfx);	  return    createBigInteger(str,    nfx);    	non-compiled	[CE]  illegal  start  of  type	15422	None
12722	[BUG]  [BUGGY]  return  createBigInteger(str,  exp);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigInteger(str,  exp);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigInteger(str,  exp);	  return    createBigInteger(str,    nfx);    	non-compiled	[CE]  illegal  start  of  type	15422	None
12746	[BUG]  [BUGGY]  for(final  String  pfxLen  :  str)  {  pfxLen;  [CE]  not  a  statement  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  for(final  String  pfxLen  :  str)  {  pfxLen;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfxLen  :  str)  {  pfxLen;	  for(final    String    pfx    :    str)    {    pfxLen;    }    	non-compiled	[CE]  not  a  statement	3889	None
12769	[BUG]  [BUGGY]  return  createNumber(str,  true);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createNumber(str,  true);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createNumber(str,  true);	  return    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	16382	None
12770	[BUG]  [BUGGY]  return  createNumber(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createNumber(str,  null);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createNumber(str,  null);	  return    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	16382	None
12793	[BUG]  [BUGGY]  Arrays.sort(pfx.charAt(0),  str.length())+  1);  [CE]  not  a  statement  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx.charAt(0),  str.length())+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx.charAt(0),  str.length())+  1);	  Arrays.sort(str.charAt(0),    pfx.length())+    1);    	non-compiled	[CE]  not  a  statement	8701	None
12794	[BUG]  [BUGGY]  Arrays.sort(pfx,  str.charAt(0),  pfx.length())+  1);  [CE]  not  a  statement  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx,  str.charAt(0),  pfx.length())+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx,  str.charAt(0),  pfx.length())+  1);	  Arrays.sort(str.charAt(0),    pfx.length())+    1);    	non-compiled	[CE]  not  a  statement	8701	None
12866	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.charAt(1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(1);	  final    String    pfxLen    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	12841	None
12913	[BUG]  [BUGGY]  Arrays.sort(str,  0,  hex_prefixes,  0,  str.length);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(str,  0,  hex_prefixes,  0,  str.length);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  0,  hex_prefixes,  0,  str.length);	  Arrays.sort(this.str,    0,    hex_prefixes,    0,    str.length);    	non-compiled	[CE]  illegal  start  of  expression	16922	None
12914	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str,  0,  str.length);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(hex_prefixes,  0,  str,  0,  str.length);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str,  0,  str.length);	  Arrays.sort(this.str,    0,    hex_prefixes,    0,    str.length);    	non-compiled	[CE]  illegal  start  of  expression	16922	None
12937	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfx_prefixes,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfx_prefixes,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  pfx_prefixes,  pfxLen);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    hex_prefixes,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9241	None
13033	[BUG]  [BUGGY]  return  createBlank(str,  dec);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBlank(str,  dec);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(str,  dec);	  return    createBlank(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	2234	None
13034	[BUG]  [BUGGY]  return  createBlank(dec,  exp);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBlank(dec,  exp);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(dec,  exp);	  return    createBlank(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	2234	None
13058	[BUG]  [BUGGY]  String  decPos  =  pfx.toLowerCase(hex_prefixes);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.toLowerCase(hex_prefixes);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.toLowerCase(hex_prefixes);	  String    decPos    =    pfx.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	6146	None
13081	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(pfx)&&  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(pfx)&&  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(pfx)&&  StringUtils.isDigit(str))  {	  if(StringUtils.isWhitespace(pfx)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3290	None
13082	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(pfxLen)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(pfxLen)||  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(pfxLen)||  StringUtils.isDigit(str))  {	  if(StringUtils.isWhitespace(pfx)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3290	None
13153	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  str.MIN_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  /  str.MIN_VALUE;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  str.MIN_VALUE;	  return    Integer.MAX_VALUE    /    String.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	170	None
13177	[BUG]  [BUGGY]  if(StringUtils.isInteger(str)&&  Character.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(StringUtils.isInteger(str)&&  Character.isDigit(str))  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(StringUtils.isInteger(str)&&  Character.isDigit(str))  {	  if(StringUtils.isInteger(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1381	None
13249	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  decPos));  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  decPos));  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen  +  1,  decPos));	  Arrays.sort(str.substring(pfxLen    +    1,    expPos));    	non-compiled	[CE]  illegal  start  of  expression	554	None
13250	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen  +  1,  expPos));  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen  +  1,  expPos));  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen  +  1,  expPos));	  Arrays.sort(str.substring(pfxLen    +    1,    expPos));    	non-compiled	[CE]  illegal  start  of  expression	554	None
13273	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  INT_ZERO);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  INT_ZERO);  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length(),  1,  INT_ZERO);	  System.arraycopy(str,    0,    str.length()    -    1,    INT_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	14702	None
13346	[BUG]  [BUGGY]  final  Integer  int  =  Integer.valueOf(str)/  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =  Integer.valueOf(str)/  2;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.valueOf(str)/  2;	  final    Integer    int    =    Integer.valueOf(str)+    2;    	non-compiled	[CE]  illegal  start  of  expression	194	None
13394	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  2);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  str  =  createInteger(str,  2);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  2);	  final    Integer    str    =    createInteger(str,    1);    	non-compiled	[CE]  illegal  start  of  expression	2857	None
13418	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  dec  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getIntValue(),  dec  +  1);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntValue(),  dec  +  1);	  Arrays.sort(str.getIntValue(),    dec);    	non-compiled	[CE]  illegal  start  of  type	9074	None
13442	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes)/  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes)/  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes)/  1;	  final    String    pfx    =    str.toLowerCase(hex_prefixes)-    1;    	non-compiled	[CE]  illegal  start  of  expression	6194	None
2	[BUG]  [BUGGY]  return  createBigDecimal(str.charAt(0),  false);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str.charAt(0),  false);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.charAt(0),  false);	  return    createBigDecimal(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	4513	None
121	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0);  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0);	  if(hexDigits    >    1)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	9242	None
122	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits,  pfxLen);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits,  pfxLen);  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits,  pfxLen);	  if(hexDigits    >    1)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	9242	None
241	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5522	None
242	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5522	None
302	[BUG]  [BUGGY]  for(final  String  str  :  null),  pfxLen  =  0;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  null),  pfxLen  =  0;  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  null),  pfxLen  =  0;	  for(final    String    pfxLen    :    str.length),    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	3122	None
362	[BUG]  [BUGGY]  if(pfx.startsWith( "-1 ")||  pfx.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "-1 ")||  pfx.startsWith( "- "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-1 ")||  pfx.startsWith( "- "))  {	  if(pfx.startsWith(   "-   ")||    pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8210	None
422	[BUG]  [BUGGY]  if(str.length()  ==  2)  {  if(!Character.isDigit(str.charAt(0)))  {  return  Integer.decode(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  if(str.length()  ==  2)  {  if(!Character.isDigit(str.charAt(0)))  {  return  Integer.decode(str);  }  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  2)  {  if(!Character.isDigit(str.charAt(0)))  {  return  Integer.decode(str);  }	  if(str.length()    ==    1)    {    if(!Character.isDigit(str.charAt(1)))    {    return    Integer.decode(str);    }    	non-compiled	[CE]  illegal  start  of  expression	20342	None
542	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length())),  pfxLen);  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  str.length())),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length())),  pfxLen);	  Arrays.sort(str.substring(0,    str.length()    -    1),    pfxLen);    	non-compiled	[CE]  	7706	None
602	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }  [BUGGY]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }	  if(str    ==    null)    {    int    decPos    =    str.length();    if(dec!=    0)    {    return    new    Integer(dec);    }    	non-compiled	[CE]  illegal  start  of  expression	4346	None
781	[BUG]  [BUGGY]  return  createBigDecimal(str.charAt(0),  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str.charAt(0),  null);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.charAt(0),  null);	  return    createBigDecimal(str.toString(),    null);    	non-compiled	[CE]  illegal  start  of  type	5462	None
782	[BUG]  [BUGGY]  return  createBigDecimal(str.toString(),  false);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str.toString(),  false);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.toString(),  false);	  return    createBigDecimal(str.toString(),    null);    	non-compiled	[CE]  illegal  start  of  type	5462	None
901	[BUG]  [BUGGY]  return  NumberUtils.EMPTY;  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return  NumberUtils.EMPTY;  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  NumberUtils.EMPTY;	  break    -=    pfxLen.length();    	non-compiled	[CE]  illegal  start  of  expression	6002	None
902	[BUG]  [BUGGY]  return  NumberUtils.numberNumber(str);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return  NumberUtils.numberNumber(str);  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  NumberUtils.numberNumber(str);	  break    -=    pfxLen.length();    	non-compiled	[CE]  illegal  start  of  expression	6002	None
962	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  return  createLong(str,  pfxLen  -  2);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createLong(str,  pfxLen  -  2);	  return    createLong(str,    pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	506	None
1081	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  -  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(pfxLen  -  1);	  final    String    pfxLen    =    pfx.charAt(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	4730	None
1142	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getIntValue(),  0);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntValue(),  0);	  Arrays.sort(str.getIntValue(),    null);    	non-compiled	[CE]  illegal  start  of  type	9073	None
1202	[BUG]  [BUGGY]  final  String  pfx  =  str.toString();  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.toString();  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toString();	  final    String    pfx    =    str.toStringTree();    	non-compiled	[CE]  illegal  start  of  expression	241	None
1381	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  int  pfxLen  =  str.length();  if(pfxLen  <  0)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(pfxLen  >  0)  {  int  pfxLen  =  str.length();  if(pfxLen  <  0)  {  break;  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  int  pfxLen  =  str.length();  if(pfxLen  <  0)  {  break;  }	  if(pfxLen    ==    0)    {    int    pfxLen    =    str.length();    if(pfxLen    <    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	122	None
1382	[BUG]  [BUGGY]  if(pfxLen  <  0)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(pfxLen  <  0)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  <  0)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	  if(pfxLen    ==    0)    {    int    pfxLen    =    str.length();    if(pfxLen    <    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	122	None
1442	[BUG]  [BUGGY]  if(hexDigits  >  2)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  >  2)  {  return  createInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  2)  {  return  createInteger(str);  }	  if(hexDigits    >    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	9049	None
1562	[BUG]  [BUGGY]  final  char  hex  =(char)str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  char  hex  =(char)str.charAt(0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  char  hex  =(char)str.charAt(0);	  final    String    hex    =(char)str.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	7262	None
1621	[BUG]  [BUGGY]  [Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  [Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	[Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=	  if(pfxLen    ==    0)    {    pfxLen    +=    pfx.charAt(pfxLen));    if(pfxLen    >=    pfxLen)    {    pfxLen    +=    pfx.charAt(pfxL    	non-compiled	[CE]  illegal  start  of  expression	1610	None
1622	[BUG]  [BUGGY]  [Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen);  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  [Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen);  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	[Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen);  if(pfxLen  >=  pfxLen)  {  pfxLen  +=	  if(pfxLen    ==    0)    {    pfxLen    +=    pfx.charAt(pfxLen));    if(pfxLen    >=    pfxLen)    {    pfxLen    +=    pfx.charAt(pfxL    	non-compiled	[CE]  illegal  start  of  expression	1610	None
1742	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()),  0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()),  0);	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	5785	None
1801	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "# ",   "-# "  }  ;  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "# ",   "-# "  }  ;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    curated       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	18482	None
1862	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.charAt(0)  ==  '-')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }	  if(str.length()    ==    0)    {    if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	21302	None
2042	[BUG]  [BUGGY]  for(final  String  pfx  :  str.charAt(0),  pfxLen  =  0;  [CE]  ')'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfx  :  str.charAt(0),  pfxLen  =  0;  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  str.charAt(0),  pfxLen  =  0;	  for(final    String    pfx    :    str.length),    pfxLen    =    0;    	non-compiled	[CE]  ')'  expected	3121	None
2102	[BUG]  [BUGGY]  final  char  pfx  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  char  pfx  =  pfx.charAt(pfxLen  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfx  =  pfx.charAt(pfxLen  -  1);	  final    String    pfx    =    pfx.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6182	None
2162	[BUG]  [BUGGY]  return  createLong(str,  hexDigits  +  1,  16);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  hexDigits  +  1,  16);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  hexDigits  +  1,  16);	  return    createLong(str,    hexDigits    +    1,    8);    	non-compiled	[CE]  illegal  start  of  type	12422	None
2341	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen).length();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen).length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen).length();	  final    String    str    =    pfx.substring(0,    pfxLen.length()));    	non-compiled	[CE]  illegal  start  of  type	3302	None
2401	[BUG]  [BUGGY]  if(pfxLen  <  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(pfxLen  <  1)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  1)  {	  if(pfxLen    >    6)    {    	non-compiled	[CE]  illegal  start  of  expression	1706	None
2402	[BUG]  [BUGGY]  if(pfxLen  <  4)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(pfxLen  <  4)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  4)  {	  if(pfxLen    >    6)    {    	non-compiled	[CE]  illegal  start  of  expression	1706	None
2462	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfx_length).length;  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfx_length).length;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfx_length).length;	  final    String    pfx    =    pfx.substring(pfxLen    +    1,    pfx_length);    	non-compiled	[CE]  illegal  start  of  type	22022	None
2521	[BUG]  [BUGGY]  Arrays.sort(str.getAsString());  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getAsString());  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getAsString());	  Arrays.sort(str.toArray());    	non-compiled	[CE]  illegal  start  of  type	14102	None
2522	[BUG]  [BUGGY]  Arrays.sort(str.toArray()  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.toArray()  +  1);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.toArray()  +  1);	  Arrays.sort(str.toArray());    	non-compiled	[CE]  illegal  start  of  type	14102	None
2761	[BUG]  [BUGGY]  if((  pfxLen  +  1)  ==  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if((  pfxLen  +  1)  ==  pfxLen)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if((  pfxLen  +  1)  ==  pfxLen)  {	  if(pfxLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1705	None
2762	[BUG]  [BUGGY]  if((  pfxLen  +  1)  ==  (pfxLen  +  1))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if((  pfxLen  +  1)  ==  (pfxLen  +  1))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if((  pfxLen  +  1)  ==  (pfxLen  +  1))  {	  if(pfxLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1705	None
2821	[BUG]  [BUGGY]  if(pfxLen  <  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  <  1)  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  <  1)  {	  return    createBigDecimal(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	1921	None
2822	[BUG]  [BUGGY]  if(pfxLen  <  (pfxLen  -  1))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  <  (pfxLen  -  1))  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  <  (pfxLen  -  1))  {	  return    createBigDecimal(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	1921	None
2941	[BUG]  [BUGGY]  final  String  decPos  =  pfx.indexOf('.',  '/');  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.indexOf('.',  '/');  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.indexOf('.',  '/');	  final    String    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	2017	None
2942	[BUG]  [BUGGY]  final  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.');  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.');  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.');	  final    String    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	2017	None
3002	[BUG]  [BUGGY]  if(hexDigits  <  >  48)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  <  >  48)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  <  >  48)  {  //  too  many  for  Long  return  createLong(str);  }	  if(hexDigits    <    >    32)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	21122	None
3061	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  >  1)  {  //  too  many  for  Long  return  createLong(str);  }	  String    str    =    str.substring(0x,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9482	None
3062	[BUG]  [BUGGY]  if(hexDigits  >  2)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  >  2)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  >  2)  {  //  too  many  for  Long  return  createLong(str);  }	  String    str    =    str.substring(0x,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	9482	None
3122	[BUG]  [BUGGY]  final  String  str  =  hexDigits.substring(0,  hexDigits.length()  -  1);  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  final  String  str  =  hexDigits.substring(0,  hexDigits.length()  -  1);  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  str  =  hexDigits.substring(0,  hexDigits.length()  -  1);	  final    String    str    =    hexDigits.charAt(1);    	non-compiled	[CE]  not  a  statement	22262	None
3182	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  pfxLen  :  str.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  pfxLen  =(pfx  ==  null)?  pfxLen  :  str.length();  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(pfx  ==  null)?  pfxLen  :  str.length();	  pfxLen    =    string.length();    	non-compiled	[CE]  illegal  start  of  type	2702	None
3241	[BUG]  [BUGGY]  for(final  String  str  :  nfe)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  nfe)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  nfe)  {	  for(final    String    str    :    pfx)    {    	non-compiled	[CE]  illegal  start  of  expression	4154	None
3302	[BUG]  [BUGGY]  }  else  if(str.length()  ==  0  &&  str.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  }  else  if(str.length()  ==  0  &&  str.charAt(0)  ==  '/')  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.length()  ==  0  &&  str.charAt(0)  ==  '/')  {	  }    else    if(str.length()    ==    0    ||    str.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	5822	None
3362	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  1,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  1,  pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  1,  pfxLen);	  final    String    pfxLen    =    pfx.substring(0,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	7538	None
3421	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  return  createLong(str,  pfxLen  -  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createLong(str,  pfxLen  -  1);	  return    createLong(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9001	None
3541	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes[0]);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes[0]);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes[0]);	  if(pfx.startsWith(   "#   ")||    pfx.endsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	3602	None
3602	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(hexDigits  ==  0)  {  return  createBigInteger(str);  }  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hexDigits  ==  0)  {  return  createBigInteger(str);  }	  if(hexDigits    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7849	None
3781	[BUG]  [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  1  :  pfx;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  1  :  pfx;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx  ==  null)?  str.length()  -  1  :  pfx;	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9422	None
3782	[BUG]  [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  1  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  1  :  0;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx  ==  null)?  str.length()  -  1  :  0;	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9422	None
4261	[BUG]  [BUGGY]  Arrays.sort(str.length()  -  1,  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.length()  -  1,  0);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.length()  -  1,  0);	  Arrays.sort(str.length()),    0);    	non-compiled	[CE]  illegal  start  of  type	15602	None
4382	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()),  pfxLen+  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  str.length()),  pfxLen+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()),  pfxLen+  1);	  Arrays.sort(str.substring(0,    str.length()    -    1)+    1);    	non-compiled	[CE]  illegal  start  of  expression	3265	None
4441	[BUG]  [BUGGY]  if((  pfxLen  +  1)  ==  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if((  pfxLen  +  1)  ==  pfxLen)  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if((  pfxLen  +  1)  ==  pfxLen)  {	  return    createBigDecimal(pfx,    str);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
4442	[BUG]  [BUGGY]  if((  pfxLen  +  1)  ==  (pfxLen  -  1))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if((  pfxLen  +  1)  ==  (pfxLen  -  1))  {  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if((  pfxLen  +  1)  ==  (pfxLen  -  1))  {	  return    createBigDecimal(pfx,    str);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
4502	[BUG]  [BUGGY]  final  Arrays.sort(str.getArrays()  +  1);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  Arrays.sort(str.getArrays()  +  1);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.getArrays()  +  1);	  final    Arrays.sort(str.getArrays());    	non-compiled	[CE]  <identifier>  expected	13502	None
4622	[BUG]  [BUGGY]  Arrays.sort(str.length()  -  1,  str.length());  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.length()  -  1,  str.length());  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.length()  -  1,  str.length());	  Arrays.sort(str.charAt(0),    str.length());    	non-compiled	[CE]  illegal  start  of  type	2642	None
4862	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length())).  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length())).  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length())).	  final    String    hex_prefixes    =    str.substring(0,    str.length()    -    4));    	non-compiled	[CE]  ';'  expected	1417	None
4922	[BUG]  [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(decPos    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4321	None
4982	[BUG]  [BUGGY]  String  decPos  =(String)str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(String)str.substring(0,  str.length());  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)str.substring(0,  str.length());	  String    decPos    =(String)pfx.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2162	None
5102	[BUG]  [BUGGY]  }  else  if(str.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  }  else  if(str.charAt(0)  ==  '-')  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.charAt(0)  ==  '-')  {	  }    else    if(str.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	2954	None
5221	[BUG]  [BUGGY]  if(pfx.startsWith( "#  # ")||  pfx.endsWith(hex_prefixes[0]))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "#  # ")||  pfx.endsWith(hex_prefixes[0]))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "#  # ")||  pfx.endsWith(hex_prefixes[0]))  {	  if(pfx.startsWith(   "#   ")||    pfx.endsWith(hex_prefixes[0]))    {    	non-compiled	[CE]  illegal  start  of  expression	7742	None
5282	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  ArrayUtils.isEmpty(mant))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(str)&&  ArrayUtils.isEmpty(mant))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)&&  ArrayUtils.isEmpty(mant))  {	  if(StringUtils.isBlank(mant)&&    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1274	None
5461	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    hex_prefixes,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9241	None
5462	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  0,  pfxLen);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    hex_prefixes,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	9241	None
5521	[BUG]  [BUGGY]  Arrays.sort(str.substring(10),  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(10),  hexDigits);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(10),  hexDigits);	  Arrays.sort(str.substring(pfxLen),    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	6794	None
5522	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  hexDigits);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(0,  hexDigits),  hexDigits);	  Arrays.sort(str.substring(pfxLen),    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	6794	None
5642	[BUG]  [BUGGY]  final  char  hexDigits  =(hexDigits  ==  4)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  char  hexDigits  =(hexDigits  ==  4)?  str.length()  :  0;  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =(hexDigits  ==  4)?  str.length()  :  0;	  final    char    hexDigits    =(hexDigits    ==    1)?    str.length()    :    0;    	non-compiled	[CE]  illegal  start  of  expression	3002	None
5702	[BUG]  [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()  -  1));  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()  -  1));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  string[]  dec  =  str.substring(0,  str.length()  -  1));	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	2762	None
5822	[BUG]  [BUGGY]  return  createBlank(str,  true);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBlank(str,  true);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(str,  true);	  return    createBlank(str,    null);    	non-compiled	[CE]  illegal  start  of  type	8186	None
6301	[BUG]  [BUGGY]  String  pfx  =(char)(pfx.charAt(0),  pfxLen  -  1);  [CE]  ')'  expected  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  pfx  =(char)(pfx.charAt(0),  pfxLen  -  1);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(char)(pfx.charAt(0),  pfxLen  -  1);	  String    pfx    =(char)(pfx.charAt(0),    pfxLen);    	non-compiled	[CE]  ')'  expected	20582	None
6302	[BUG]  [BUGGY]  String  pfx  =(char)(str.charAt(0),  pfxLen);  [CE]  ')'  expected  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  pfx  =(char)(str.charAt(0),  pfxLen);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(char)(str.charAt(0),  pfxLen);	  String    pfx    =(char)(pfx.charAt(0),    pfxLen);    	non-compiled	[CE]  ')'  expected	20582	None
6361	[BUG]  [BUGGY]  return  createLong(str,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  0,  pfxLen);  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  0,  pfxLen);	  if(decPos    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7562	None
6362	[BUG]  [BUGGY]  return  createLong(str,  pfx,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  pfx,  pfxLen  +  1);  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  pfx,  pfxLen  +  1);	  if(decPos    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7562	None
6422	[BUG]  [BUGGY]  for(final  String  pfx  :  null)  {  break;  }  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  for(final  String  pfx  :  null)  {  break;  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfx  :  null)  {  break;  }	  for(final    String    pfx    :    numeric)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	18182	None
6482	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  2):  pfx.indexOf('.');  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  2):  pfx.indexOf('.');  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  2):  pfx.indexOf('.');	  String    decPos    =    pfx.charAt(pfxLen    -    1)    ==    '.'?    pfx.charAt(pfxLen    -    1):    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	21181	None
6842	[BUG]  [BUGGY]  pfxLen  -=  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.length();  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.length();	  pfxLen    -=    str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	14221	None
6902	[BUG]  [BUGGY]  Arrays.sort(str,  null);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str,  null);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str,  null);	  Arrays.sort(hexDigits,    null);    	non-compiled	[CE]  illegal  start  of  expression	8690	None
7082	[BUG]  [BUGGY]  for(final  String  pfx  :  str.charAt(0))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfx  :  str.charAt(0))  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  str.charAt(0))  {	  for(final    String    pfx    :    str.length)    {    	non-compiled	[CE]  illegal  start  of  expression	4945	None
7142	[BUG]  [BUGGY]  final  int  pfxLen  =(str.length()  ==  0)?  1  :  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  int  pfxLen  =(str.length()  ==  0)?  1  :  str.length();  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =(str.length()  ==  0)?  1  :  str.length();	  final    int    pfxLen    =(str.length()    ==    0)?    -1    :    str.length();    	non-compiled	[CE]  illegal  start  of  expression	14042	None
7382	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()),  pfxLen);  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.length()),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.length()),  pfxLen);	  Arrays.sort(str.charAt(0),    str.length()    -    1));    	non-compiled	[CE]  	3026	None
7502	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.charAt(1),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.charAt(1),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.charAt(1),  pfxLen);	  Arrays.sort(str.charAt(0),    str.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	12662	None
7561	[BUG]  [BUGGY]  if(decPos  <  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(decPos  <  0)  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  0)  {	  if(decPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  expression	3781	None
7562	[BUG]  [BUGGY]  if(decPos  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(decPos  ==  0)  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  ==  0)  {	  if(decPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  expression	3781	None
7802	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  16);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  16);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  16);	  String    decPos    =(String)pfx.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2162	None
7861	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =(String)pfx.substring(0,  str.length());  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfx.substring(0,  str.length());	  String    str    =(String)str.substring(0,    pfxLen.length());    	non-compiled	[CE]  illegal  start  of  expression	1022	None
8042	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length[0]  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length[0]  +  1);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str.length[0]  +  1);	  Arrays.sort(hex_prefixes,    0,    str.length[0]);    	non-compiled	[CE]  illegal  start  of  expression	11882	None
8222	[BUG]  [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "-1))  {  [CE]  unclosed  string  literal  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "-1))  {  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfx.endsWith( "-1 ")||  pfx.startsWith( "-1))  {	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  unclosed  string  literal	722	None
8342	[BUG]  [BUGGY]  return  createLong(pfx,  str,  pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(pfx,  str,  pfxLen  +  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(pfx,  str,  pfxLen  +  1);	  return    createLong(str,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	1658	None
8402	[BUG]  [BUGGY]  if(str.charAt(0)  ==  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(str.charAt(0)  ==  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(str.charAt(0)  ==  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }	  if(str.charAt(0)    ==    pfxLen)    {    if(str.startsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7946	None
8582	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(str.length()  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str.length()  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  final    String[]    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	7081	None
8822	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  2);  if(e.getNumerics()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  2);  if(e.getNumerics()  ==  0)  {  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  2);  if(e.getNumerics()  ==  0)  {	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    1);    if(e.getNumerics()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7154	None
8942	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(pfxLen  +  1,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  String  pfx  =  str.substring(pfxLen  +  1,  pfxLen);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.substring(pfxLen  +  1,  pfxLen);	  final    String    pfx    =    str.substring(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4129	None
9002	[BUG]  [BUGGY]  if(pfx.endsWith( ".0 ")||  pfx.endsWith( ".0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith( ".0 ")||  pfx.endsWith( ".0 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( ".0 ")||  pfx.endsWith( ".0 "))  {	  if(pfx.endsWith(   "/.0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	3146	None
9122	[BUG]  [BUGGY]  String  decPos  =(pfx  ==  null)?  pfx.toString()  :  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(pfx  ==  null)?  pfx.toString()  :  str.length();  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(pfx  ==  null)?  pfx.toString()  :  str.length();	  String    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	5857	None
9182	[BUG]  [BUGGY]  final  char  pfxLen  =  pfx.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  char  pfxLen  =  pfx.charAt(0);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  pfxLen  =  pfx.charAt(0);	  final    String    pfxLen    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	12841	None
9241	[BUG]  [BUGGY]  return  createLong(str,  pfx,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfx,  pfxLen);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfx,  pfxLen);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	7178	None
9242	[BUG]  [BUGGY]  return  createLong(str,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfx.length);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfx.length);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	7178	None
9362	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(HexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.toStringTree(HexDigits);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(HexDigits);	  final    String    pfx    =    str.toStringTree(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	242	None
9422	[BUG]  [BUGGY]  if(pfxLen  <  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if(pfxLen  <  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  <  0)  {  pfxLen  -=  str.charAt(pfxLen  -  1));  }	  if(pfxLen    >    0)    {    pfxLen    -=    pfx.charAt(pfxLen    -    1));    }    	non-compiled	[CE]  ';'  expected	2786	None
9542	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  '0')+  12;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  str  =  createInteger(str,  '0')+  12;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  '0')+  12;	  final    Integer    str    =    createInteger(str,    '0')+    1;    	non-compiled	[CE]  illegal  start  of  expression	2186	None
9601	[BUG]  [BUGGY]  if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7681	None
9602	[BUG]  [BUGGY]  if(hexDigits  ==  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(hexDigits  ==  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  3)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7681	None
9662	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfx_length);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfx_length);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfx_length);	  Arrays.sort(str.substring(pfxLen    +    1),    pfx.length);    	non-compiled	[CE]  illegal  start  of  expression	4057	None
9721	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  char  pfx  =  str.charAt(str.length()  -  1);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  char  pfx  =  str.charAt(str.length()  -  1);	  final    char    pfx    =    str.charAt(str.length());    	non-compiled	[CE]  illegal  start  of  expression	4274	None
9781	[BUG]  [BUGGY]  return  createBigInteger(str,  nfx,  dec);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigInteger(str,  nfx,  dec);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigInteger(str,  nfx,  dec);	  return    createBigInteger(str,    nfx);    	non-compiled	[CE]  illegal  start  of  type	15422	None
9782	[BUG]  [BUGGY]  return  createBigInteger(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigInteger(str,  null);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigInteger(str,  null);	  return    createBigInteger(str,    nfx);    	non-compiled	[CE]  illegal  start  of  type	15422	None
9962	[BUG]  [BUGGY]  }  else  if(str.length()  ==  0  ||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  }  else  if(str.length()  ==  0  ||  StringUtils.isEmpty(str))  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.length()  ==  0  ||  StringUtils.isEmpty(str))  {	  }    else    if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2953	None
10022	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length()  1,  INT_ZERO);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  System.arraycopy(str,  0,  str.length()  1,  INT_ZERO);  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length()  1,  INT_ZERO);	  System.arraycopy(str,    0,    str.length()    -    1,    INT_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	14702	None
10082	[BUG]  [BUGGY]  return  createInteger(str,  exp);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInteger(str,  exp);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInteger(str,  exp);	  return    createLong(dec,    exp);    	non-compiled	[CE]  illegal  start  of  expression	2905	None
10262	[BUG]  [BUGGY]  String  decPos  =  pfx.toString();  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =  pfx.toString();  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  pfx.toString();	  String    decPos    =    pfx.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	3506	None
10322	[BUG]  [BUGGY]  if(str.indexOf('E')>  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.indexOf('E')>  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.indexOf('E')>  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(str.indexOf('.')    >=    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6842	None
10442	[BUG]  [BUGGY]  [Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pf  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  [Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pf  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	[Delete]  else  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pf	  if(pfxLen    ==    0)    {    pfxLen    +=    pfx.charAt(pfxLen));    if(pfxLen    >=    pfxLen)    {    pfxLen    +=    pfx.charAt(pf    	non-compiled	[CE]  illegal  start  of  expression	1609	None
10502	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen  +  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfxLen  +  1);	  Arrays.sort(str.charAt(0),    pfxLen)+    1);    	non-compiled	[CE]  illegal  start  of  expression	3769	None
10622	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length())/  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(0,  str.length())/  2);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length())/  2);	  Arrays.sort(str.substring(0,    pfxLen)/    2);    	non-compiled	[CE]  illegal  start  of  expression	6650	None
10921	[BUG]  [BUGGY]  return  createLong(str,  pfx  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createLong(str,  pfx  +  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfx  +  1);	  return    createLong(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  type	12421	None
11102	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()  -  1),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()  -  1),  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String[]  dec  =  str.substring(0,  str.length()  -  1),  0);	  final    String[]    dec    =    str.substring(0,    str.length()),    0);    	non-compiled	[CE]  <identifier>  expected	2462	None
11282	[BUG]  [BUGGY]  return  createBigDecimal(str.charAt(0),  dec);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str.charAt(0),  dec);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.charAt(0),  dec);	  return    createBigDecimal(str.toString(),    dec);    	non-compiled	[CE]  illegal  start  of  type	337	None
11342	[BUG]  [BUGGY]  final  char  hexDigits  =(char)mant.length();  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  final  char  hexDigits  =(char)mant.length();  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =(char)mant.length();	  final    int    hexDigits    =(int)mant.length();    	non-compiled	[CE]  illegal  start  of  expression	3457	None
11462	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  Integer.MAX_VALUE));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  Integer.MAX_VALUE));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length())+  1,  Integer.MAX_VALUE));	  Arrays.sort(str.getChars(0,    str.length())+    1,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	9290	None
11522	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isEmpty(exp))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isEmpty(exp))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  StringUtils.isEmpty(exp))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	482	None
11582	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  4);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  4);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()  -  4);	  final    String    str    =    pfx.substring(0,    pfx.length());    	non-compiled	[CE]  illegal  start  of  type	2257	None
11702	[BUG]  [BUGGY]  String  pfxLen  =(pfx  ==  null)?  pfxLen  :  string.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  String  pfxLen  =(pfx  ==  null)?  pfxLen  :  string.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	String  pfxLen  =(pfx  ==  null)?  pfxLen  :  string.length();	  String    pfxLen    =    string.length();    	non-compiled	[CE]  illegal  start  of  type	1298	None
11942	[BUG]  [BUGGY]  String  pfx  =(String)pfx.substring(0,  pfxLen  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  pfx  =(String)pfx.substring(0,  pfxLen  -  2);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(String)pfx.substring(0,  pfxLen  -  2);	  String    pfx    =(String)pfx.substring(0,    pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	914	None
12001	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(64,  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(64,  hex_prefixes);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(64,  hex_prefixes);	  final    String    pfx    =    str.toLowerCase(64);    	non-compiled	[CE]  illegal  start  of  expression	6661	None
12062	[BUG]  [BUGGY]  long  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  long  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	long  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;	  int    pfxLen    =(pfx!=    null)?    str.length()    :    pfx;    	non-compiled	[CE]  illegal  start  of  expression	11702	None
12302	[BUG]  [BUGGY]  Arrays.sort(str.substring(hexDigits  +  1,  expPos));  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(hexDigits  +  1,  expPos));  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(hexDigits  +  1,  expPos));	  Arrays.sort(str.substring(pfxLen    +    1,    expPos));    	non-compiled	[CE]  illegal  start  of  expression	554	None
12421	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(hexDigits),  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(dec,  str.substring(hexDigits),  hex_prefixes);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(hexDigits),  hex_prefixes);	  Arrays.sort(dec,    str.substring(pfxLen),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6793	None
12542	[BUG]  [BUGGY]  if(mant  ==  null  ||  str.length()  <  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(mant  ==  null  ||  str.length()  <  pfxLen)  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null  ||  str.length()  <  pfxLen)  {	  if(str    ==    null    ||    str.length()    <    pfxLen)    {    	non-compiled	[CE]  illegal  start  of  expression	22381	None
12842	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  10  +  str;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  /  10  +  str;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  10  +  str;	  return    Integer.MAX_VALUE    /    str;    	non-compiled	[CE]  illegal  start  of  expression	169	None
12902	[BUG]  [BUGGY]  if(str  ==  null)  {  if(!Character.isWhitespace(str)&&  Character.isDigit(str))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if(str  ==  null)  {  if(!Character.isWhitespace(str)&&  Character.isDigit(str))  {  return  createInteger(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  if(!Character.isWhitespace(str)&&  Character.isDigit(str))  {  return  createInteger(str);  }	  if(str    ==    null)    {    if(!Character.isWhitespace(str)&&    Character.isLetterOrDigit(str))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	22202	None
12962	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1,  0);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1,  0);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1,  0);	  if(pfx.startsWith(hex)||    pfx.endsWith(hexLen))    {    	non-compiled	[CE]  illegal  start  of  type	6482	None
13081	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  0);  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length(),  1,  0);	  System.arraycopy(str,    0,    str.length(),    1,    INTEGER_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	8401	None
13142	[BUG]  [BUGGY]  for(final  String  pfx  :  numeric,  pfxLen  =  0;  [CE]  ')'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfx  :  numeric,  pfxLen  =  0;  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  numeric,  pfxLen  =  0;	  for(final    String    pfx    :    str,    pfxLen    =    0;    	non-compiled	[CE]  ')'  expected	14282	None
13202	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()),  0;  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()),  0;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()),  0;	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    1)-    1;    	non-compiled	[CE]  <identifier>  expected	7369	None
13562	[BUG]  [BUGGY]  final  String  pfxLen  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  final  String  pfxLen  =  str.length()  +  1;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  String  pfxLen  =  str.length()  +  1;	  final    String    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	9338	None
13622	[BUG]  [BUGGY]  return  createBigInteger(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createBigInteger(str,  Integer.MAX_VALUE);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createBigInteger(str,  Integer.MAX_VALUE);	  return    createBigInteger(str);    	non-compiled	[CE]  illegal  start  of  type	3169	None
13681	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str[0]  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(hex_prefixes,  0,  str[0]  +  1);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str[0]  +  1);	  Arrays.sort(hex_prefixes,    0,    str[0]);    	non-compiled	[CE]  illegal  start  of  expression	842	None
13682	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str[0],  0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(hex_prefixes,  0,  str[0],  0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str[0],  0);	  Arrays.sort(hex_prefixes,    0,    str[0]);    	non-compiled	[CE]  illegal  start  of  expression	842	None
13742	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes)/  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes)/  2;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes)/  2;	  final    String    pfx    =    str.toLowerCase(hex_prefixes)-    1;    	non-compiled	[CE]  illegal  start  of  expression	6194	None
13921	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    32)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8138	None
13922	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  too  many  for  Long  return  createBigInteger(str);  }  [CE]  ';'  expected  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    32)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	8138	None
13982	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length,  0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str.length,  0);	  Arrays.sort(this.str,    0,    hex_prefixes,    0,    str.length);    	non-compiled	[CE]  illegal  start  of  expression	16922	None
14041	[BUG]  [BUGGY]  Arrays.sort(str.substring(10),  hex_prefix);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(10),  hex_prefix);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(10),  hex_prefix);	  Arrays.sort(str.substring(pfxLen),    hex_prefix);    	non-compiled	[CE]  illegal  start  of  expression	7993	None
14042	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  hex_prefix);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  hex_prefix);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(0,  hexDigits),  hex_prefix);	  Arrays.sort(str.substring(pfxLen),    hex_prefix);    	non-compiled	[CE]  illegal  start  of  expression	7993	None
14222	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  StringUtils.isDefined(str)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(str    ==    null    ||    StringUtils.isDefined(str))    {    	non-compiled	[CE]  illegal  start  of  expression	23102	None
14282	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  0)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    ==    1)    {    if(hexDigits    >    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	15302	None
14342	[BUG]  [BUGGY]  int  pfxLen  =(prefixes  ==  null)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  int  pfxLen  =(prefixes  ==  null)?  str.length()  :  0;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =(prefixes  ==  null)?  str.length()  :  0;	  int    pfxLen    =(hex_prefixes    ==    null)?    str.length()    -    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	23462	None
14402	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(0,  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  final  String  pfx  =  str.toStringTree(0,  hexDigits);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(0,  hexDigits);	  final    String    pfx    =    str.toStringTree(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	11641	None
14642	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  +  1);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  +  1);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length()    -    1)+    1);    	non-compiled	[CE]  illegal  start  of  expression	2810	None
14702	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  *  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  *  1;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  *  1;	  return    Integer.MAX_VALUE    /    1;    	non-compiled	[CE]  illegal  start  of  expression	529	None
14762	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isBlank(exp))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isBlank(exp))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  StringUtils.isBlank(exp))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	19022	None
14882	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  return  createBigInteger(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  <  1)  {  return  createBigInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  return  createBigInteger(str);  }	  if(hexDigits    >    1)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	2714	None
15002	[BUG]  [BUGGY]  if(pfx.startsWith(hex)||  pfx.endsWith(hexDigits))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex)||  pfx.endsWith(hexDigits))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex)||  pfx.endsWith(hexDigits))  {	  if(pfx.startsWith(hex)||    pfx.endsWith(hexLen))    {    	non-compiled	[CE]  illegal  start  of  expression	6482	None
15062	[BUG]  [BUGGY]  return  createInteger(str,  0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createInteger(str,  0);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createInteger(str,  0);	  return    createInteger(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	15421	None
15122	[BUG]  [BUGGY]  Arrays.sort(mant,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant,  dec);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  dec);	  Arrays.sort(mant,    null);    	non-compiled	[CE]  illegal  start  of  expression	8689	None
15301	[BUG]  [BUGGY]  return  createLong(str,  32);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  32);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  32);	  return    createLong(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	21482	None
15302	[BUG]  [BUGGY]  return  createLong(str,  40);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  return  createLong(str,  40);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  40);	  return    createLong(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	21482	None
15362	[BUG]  [BUGGY]  if(mant  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(mant  ==  null  ||  str.length()  ==  0)  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(mant  ==  null  ||  str.length()  ==  0)  {	  if(str.indexOf('.')    >=    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6842	None
15422	[BUG]  [BUGGY]  return  Integer.decode(str,  exp,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(str,  exp,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(str,  exp,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    exp,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	97	None
15542	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()),  '#');  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()),  '#');  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length()),  '#');	  final    String    pfx    =    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	289	None
15602	[BUG]  [BUGGY]  pfxLen  =(pfx!=  null)?  str.length()  :  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  pfxLen  =(pfx!=  null)?  str.length()  :  pfx.length();  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(pfx!=  null)?  str.length()  :  pfx.length();	  pfxLen    =(str    ==    null)?    str.length()    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	794	None
15662	[BUG]  [BUGGY]  return  Integer.decode(str,  mant,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(str,  mant,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(str,  mant,  Integer.MAX_VALUE);	  return    Integer.decode(mant,    str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	98	None
15781	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(hexDigits  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hexDigits  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	23522	None
15782	[BUG]  [BUGGY]  if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	23522	None
15902	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()),  0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()),  0);	  final    String    hex_prefixes    =    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	1418	None
16141	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(0);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(0);  }  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(0);  }	  if(pfxLen    >    0)    {    pfxLen    -=    str.charAt(pfxLen));    }    	non-compiled	[CE]  illegal  start  of  expression	5930	None
16142	[BUG]  [BUGGY]  if(pfxLen  <  0)  {  pfxLen  -=  str.charAt(pfxLen));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(pfxLen  <  0)  {  pfxLen  -=  str.charAt(pfxLen));  }  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfxLen  <  0)  {  pfxLen  -=  str.charAt(pfxLen));  }	  if(pfxLen    >    0)    {    pfxLen    -=    str.charAt(pfxLen));    }    	non-compiled	[CE]  ';'  expected	5930	None
16202	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  pfxLen);	  final    String    pfxLen    =    pfx.substring(pfxLen    +    4);    	non-compiled	[CE]  illegal  start  of  type	4538	None
16442	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  if(str.endsWith( "-0 "))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(pfxLen  >  0)  {  if(str.endsWith( "-0 "))  {  return  createInteger(str);  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  >  0)  {  if(str.endsWith( "-0 "))  {  return  createInteger(str);  }	  if(pfxLen    >    0)    {    if(str.endsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	302	None
16501	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  str.length()  -  1);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  str.length()  -  1);	  return    Integer.decode(hexDigits,    0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	17702	None
16802	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(pfx)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(pfx)&&  StringUtils.isBlank(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(pfx)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isWhitespace(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1825	None
16862	[BUG]  [BUGGY]  pfxLen  =  pfx.length()  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  pfxLen  =  pfx.length()  -  1;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  pfx.length()  -  1;	  pfxLen    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	4993	None
16982	[BUG]  [BUGGY]  return  createNumber(str,  false,  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createNumber(str,  false,  null);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createNumber(str,  false,  null);	  return    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	2281	None
17102	[BUG]  [BUGGY]  }  else  if(str.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  }  else  if(str.length()  ==  0)  {  return  null;  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}  else  if(str.length()  ==  0)  {  return  null;  }	  }    else    if(str    ==    null    ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3818	None
17222	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen),  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen),  pfxLen  +  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen),  pfxLen  +  1);	  Arrays.sort(str.getChars(0,    str.length()    -    1,    pfxLen)+    1);    	non-compiled	[CE]  illegal  start  of  expression	8474	None
17342	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()),  0;  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()),  0;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()),  0;	  final    String    hex_prefixes    =    str.substring(0,    str.length()    -    1)-    1;    	non-compiled	[CE]  <identifier>  expected	4825	None
17401	[BUG]  [BUGGY]  if(dec  ==  null  &&  pfx.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(dec  ==  null  &&  pfx.length()  ==  0)  {  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  pfx.length()  ==  0)  {	  if(pfx    ==    null    ||    pfx.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9026	None
17461	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length())+  1);  [CE]  not  a  statement  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  Arrays.sort(str.charAt(0),  str.length())+  1);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	Arrays.sort(str.charAt(0),  str.length())+  1);	  return    createInt(str,    pfxLen    -    1);    	non-compiled	[CE]  not  a  statement	2402	None
17462	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0),  str.charAt(pfxLen)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  Arrays.sort(str.getChars(0),  str.charAt(pfxLen)+  1);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	Arrays.sort(str.getChars(0),  str.charAt(pfxLen)+  1);	  return    createInt(str,    pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2402	None
17582	[BUG]  [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  1  :  hex_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  1  :  hex_prefixes.length();  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =(hex_prefixes  ==  null)?  1  :  hex_prefixes.length();	  int    pfxLen    =(hex_prefixes    ==    null)?    0    :    hex_prefixes.length();    	non-compiled	[CE]  illegal  start  of  expression	15722	None
17762	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(pfx.length()));  [CE]  ';'  expected  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  +=  str.charAt(pfx.length()));  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  str.charAt(pfx.length()));	  pfxLen    +=    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	8330	None
17821	[BUG]  [BUGGY]  for(final  String  str  :  str.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  str.length)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  str.length)  {	  for(final    String    str    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	17282	None
17822	[BUG]  [BUGGY]  for(final  String  str  :  nfe.values())  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  nfe.values())  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  nfe.values())  {	  for(final    String    str    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	17282	None
17881	[BUG]  [BUGGY]  if((  lastChar  ==  null)&&!Character.isUpperCase(lastChar))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if((  lastChar  ==  null)&&!Character.isUpperCase(lastChar))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if((  lastChar  ==  null)&&!Character.isUpperCase(lastChar))  {	  if(str    ==    null    ||!Character.isUpperCase(lastChar))    {    	non-compiled	[CE]  illegal  start  of  expression	5354	None
17942	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length())),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length())),  0);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length())),  0);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length()    -    1),    0);    	non-compiled	[CE]  <identifier>  expected	625	None
18062	[BUG]  [BUGGY]  if(hexDigits  ==  BigDecimal.NUMBER_INT)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  BigDecimal.NUMBER_INT)  {  return  createInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  BigDecimal.NUMBER_INT)  {  return  createInteger(str);  }	  if(hexDigits    ==    BigDecimal.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	2738	None
18181	[BUG]  [BUGGY]  String  pfxLen  =  pfx.length()  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  pfxLen  =  pfx.length()  -  1;  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =  pfx.length()  -  1;	  String    pfxLen    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	9337	None
18242	[BUG]  [BUGGY]  str.getChars(0,  str.length()),  pfxLen);  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  str.getChars(0,  str.length()),  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	str.getChars(0,  str.length()),  pfxLen);	  str.getChars(0,    str.length()    -    1);    	non-compiled	[CE]  	1946	None
18301	[BUG]  [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	if(hexDigits  ==  BigInteger.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  final    int    pfxLen    =(hex_prefixes    ==    null)?    2    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	6242	None
18302	[BUG]  [BUGGY]  if(hexDigits  ==  Integer.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  if(hexDigits  ==  Integer.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	if(hexDigits  ==  Integer.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  final    int    pfxLen    =(hex_prefixes    ==    null)?    2    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	6242	None
18362	[BUG]  [BUGGY]  char  pfxLen  =  hex_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  char  pfxLen  =  hex_prefixes.length();  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	char  pfxLen  =  hex_prefixes.length();	  int    pfxLen    =    HEX_prefixes.length();    	non-compiled	[CE]  illegal  start  of  expression	19262	None
18482	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxPrefixLen  +  1,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxPrefixLen  +  1,  pfx.length);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(0,  pfxPrefixLen  +  1,  pfx.length);	  final    String    pfxLen    =    pfx.substring(pfxPrefixLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	6506	None
18602	[BUG]  [BUGGY]  pfxLen  -=  str.length();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  -=  str.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  -=  str.length();	  pfxLen    +=    str.length();    	non-compiled	[CE]  illegal  start  of  type	8329	None
18662	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);	  if(str.charAt(0)    ==    '-')    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7082	None
18842	[BUG]  [BUGGY]  pfxLen  -=  str.length()  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  pfxLen  -=  str.length()  +  1;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.length()  +  1;	  pfxLen    -=    str.charAt(0)+    1;    	non-compiled	[CE]  illegal  start  of  expression	12721	None
19202	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx.length;  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx.length;  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(pfx  ==  null)?  str.length()  :  pfx.length;	  pfxLen    =(pfx    ==    null)?    str.length()    :    pfx.lastChar;    	non-compiled	[CE]  illegal  start  of  type	7982	None
19261	[BUG]  [BUGGY]  String  decPos  =  pfx.toLowerCase(pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.toLowerCase(pfxLen);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.toLowerCase(pfxLen);	  String    decPos    =    pfx.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	6146	None
19262	[BUG]  [BUGGY]  String  decPos  =  pfx.toLowerCase(null);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.toLowerCase(null);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.toLowerCase(null);	  String    decPos    =    pfx.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	6146	None
19441	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  8);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  8);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  8);	  return    Integer.decode(hexDigits,    0,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	17701	None
19442	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  hexDigits,  8);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  hexDigits,  8);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  hexDigits,  8);	  return    Integer.decode(hexDigits,    0,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	17701	None
19502	[BUG]  [BUGGY]  return  createBigDecimal(str,  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createBigDecimal(str,  hexDigits);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createBigDecimal(str,  hexDigits);	  return    createBigDecimal(str);    	non-compiled	[CE]  illegal  start  of  expression	7058	None
19742	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  pfxLen  -=  str.charAt(0);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	pfxLen  -=  str.charAt(0);	  pfxLen    +=    str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	18962	None
19802	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length())).  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length())).  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length())).	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    16));    	non-compiled	[CE]  ';'  expected	9962	None
19861	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  hexDigits.length();  if(decPos  <  0)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  hexDigits.length();  if(decPos  <  0)  {  return  createDecimal(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  hexDigits.length();  if(decPos  <  0)  {  return  createDecimal(str);  }	  }    	non-compiled	[CE]  illegal  start  of  expression	7418	None
19862	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  hexDigits.length();  if(decPos  <  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  hexDigits.length();  if(decPos  <  0)  {  return  createLong(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  hexDigits.length();  if(decPos  <  0)  {  return  createLong(str);  }	  }    	non-compiled	[CE]  illegal  start  of  expression	7418	None
19922	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(pfx)&&  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(pfx)&&  ArrayUtils.isInfinite(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(pfx)&&  ArrayUtils.isInfinite(str))  {	  if(StringUtils.isWhitespace(str)&&    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	5257	None
19982	[BUG]  [BUGGY]  return  createNumber(str,  false,  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createNumber(str,  false,  null);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createNumber(str,  false,  null);	  return    createNumber(str,    false);    	non-compiled	[CE]  illegal  start  of  type	16382	None
20042	[BUG]  [BUGGY]  if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  <  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  <  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  <  decPos)  {  return  createInteger(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')    +    1;    if(decPos    <    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5378	None
20161	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.length()  -  pfxLen);	  Arrays.sort(str.getChars(0),    str.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	13142	None
20162	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.length()  -  1);	  Arrays.sort(str.getChars(0),    str.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	13142	None
20221	[BUG]  [BUGGY]  for(final  String  str  :  isBlank())  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  isBlank())  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  isBlank())  {	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	2762	None
20222	[BUG]  [BUGGY]  for(final  String  str  :  getNumerator())  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  getNumerator())  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  getNumerator())  {	  final    string[]    dec    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	2762	None
20581	[BUG]  [BUGGY]  if(str.endsWith( "0 "))  {  return  null;  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(str.endsWith( "0 "))  {  return  null;  }  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(str.endsWith( "0 "))  {  return  null;  }	  if(str.startsWith(   "0   "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8522	None
20702	[BUG]  [BUGGY]  if(mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }	  String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '/')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5906	None
20762	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i].getLength());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i].getLength());  [BUGGY]          if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i].getLength());	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    	non-compiled	[CE]  illegal  start  of  expression	18902	None
21122	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefix)||  pfx.endsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex_prefix)||  pfx.endsWith(hex_prefixes))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefix)||  pfx.endsWith(hex_prefixes))  {	  if(pfx.startsWith(hex_prefixes)||    pfx.endsWith(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None
21182	[BUG]  [BUGGY]  if(dec  ==  null  &&  str.charAt(pfxLen)  ==  '-')  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(dec  ==  null  &&  str.charAt(pfxLen)  ==  '-')  {  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  str.charAt(pfxLen)  ==  '-')  {	  if(dec    ==    null    &&    str.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8762	None
21302	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  mant.substring(0,  str.length());  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  mant.substring(0,  str.length());	  String    str    =    pfx.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2138	None
21662	[BUG]  [BUGGY]  if(pfx.endsWith(hex_prefix)||  pfx.charAt(pfx.length()  -  1)  ==  '0')  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith(hex_prefix)||  pfx.charAt(pfx.length()  -  1)  ==  '0')  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith(hex_prefix)||  pfx.charAt(pfx.length()  -  1)  ==  '0')  {	  if(pfx.endsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	3313	None
21722	[BUG]  [BUGGY]  final  Integer  int  =(int)Integer.toInteger(str).intValue();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =(int)Integer.toInteger(str).intValue();  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =(int)Integer.toInteger(str).intValue();	  final    Integer    int    =    Integer.toInteger(str).intValue();    	non-compiled	[CE]  illegal  start  of  expression	5762	None
21782	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes[0]);  [CE]  ']'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes[0]);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes[0]);	  final    String    pfx    =    str.toLowerCase(java.util.Locale.ENGLISH),    hex_prefixes);    	non-compiled	[CE]  ']'  expected	23582	None
21842	[BUG]  [BUGGY]  pfxLen  -=(pfx!=  null)?  str.length()  :  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  pfxLen  -=(pfx!=  null)?  str.length()  :  pfx.length();  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=(pfx!=  null)?  str.length()  :  pfx.length();	  pfxLen    -=(pfx    ==    null)?    str.length()    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	3722	None
21961	[BUG]  [BUGGY]  if(pfxLen  <  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  if(pfxLen  <  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  <  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }	  if(pfxLen    >    0)    {    pfxLen    +=    str.charAt(pfxLen    -    1));    }    	non-compiled	[CE]  ';'  expected	1753	None
22142	[BUG]  [BUGGY]  for(final  String  pfxlen  :  str.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  pfxlen  :  str.length)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxlen  :  str.length)  {	  for(final    String    pfxLen    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	4946	None
22322	[BUG]  [BUGGY]  if(hexDigits  ==  BigInteger.MAX_VALUE)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  ==  BigInteger.MAX_VALUE)  {  return  createInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  BigInteger.MAX_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    BigInteger.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	2737	None
22442	[BUG]  [BUGGY]  for(final  String  str  :  d.trim())  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  for(final  String  str  :  d.trim())  {  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(final  String  str  :  d.trim())  {	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5522	None
22501	[BUG]  [BUGGY]  Arrays.sort(mant,  str.substring(pfxLen),  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant,  str.substring(pfxLen),  hexDigits);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  str.substring(pfxLen),  hexDigits);	  Arrays.sort(str.substring(pfxLen),    mant);    	non-compiled	[CE]  illegal  start  of  expression	9842	None
22502	[BUG]  [BUGGY]  Arrays.sort(mant,  str.substring(pfxLen),  mant);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(mant,  str.substring(pfxLen),  mant);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  str.substring(pfxLen),  mant);	  Arrays.sort(str.substring(pfxLen),    mant);    	non-compiled	[CE]  illegal  start  of  expression	9842	None
22682	[BUG]  [BUGGY]  final  char  decPos  =  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  char  decPos  =  pfx.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  decPos  =  pfx.length();	  final    int    decPos    =    pfx.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	5282	None
22801	[BUG]  [BUGGY]  break  +=  8;  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  break  +=  8;  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	break  +=  8;	  if(str    ==    null    ||!StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  ';'  expected	2	None
22922	[BUG]  [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith( "# "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith( "# "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "# ")||  pfx.endsWith( "# "))  {	  if(pfx.startsWith(hex_prefix)||    pfx.endsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	5281	None
23042	[BUG]  [BUGGY]  if(pfx.startsWith( "-0 ")||  pfx.startsWith( "-0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "-0 ")||  pfx.startsWith( "-0 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-0 ")||  pfx.startsWith( "-0 "))  {	  if(pfx.startsWith(   "0   ")||    pfx.startsWith(   "-0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	22322	None
23342	[BUG]  [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]          return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(decPos    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5593	None
23402	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  pfx.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  pfx.charAt(0);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =(pfx  ==  null)?  pfx.length()  :  pfx.charAt(0);	  pfxLen    =(pfx    ==    null)?    pfx.length()    :    pfx.intValue();    	non-compiled	[CE]  illegal  start  of  type	4382	None
23822	[BUG]  [BUGGY]  if(pfx.startsWith( "-1 ")||  pfx.endsWith( ".0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith( "-1 ")||  pfx.endsWith( ".0 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-1 ")||  pfx.endsWith( ".0 "))  {	  if(pfx.startsWith(   "-1   ")||    pfx.endsWith(   "-1))    {    	non-compiled	[CE]  illegal  start  of  expression	5882	None
23942	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  String.valueOf(str);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  /  String.valueOf(str);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  String.valueOf(str);	  return    Integer.MAX_VALUE    /    String.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	170	None
24002	[BUG]  [BUGGY]  Arrays.sort(str,  false,  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str,  false,  hexDigits);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str,  false,  hexDigits);	  Arrays.sort(str,    false);    	non-compiled	[CE]  illegal  start  of  expression	11521	None
24122	[BUG]  [BUGGY]  if(str  ==  '.')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str  ==  '.')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  '.')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(str    ==    '-')    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14882	None
24182	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isSupported(str.charAt(0)))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isSupported(str.charAt(0)))  {  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isSupported(str.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	19382	None
24301	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfx.length()  -  1));  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  pfx.length()  -  1));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfx.length()  -  1));	  Arrays.sort(str.charAt(0),    pfx.length()));    	non-compiled	[CE]  	12661	None
24302	[BUG]  [BUGGY]  Arrays.sort(pfx.charAt(0),  str.length()));  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(pfx.charAt(0),  str.length()));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(pfx.charAt(0),  str.length()));	  Arrays.sort(str.charAt(0),    pfx.length()));    	non-compiled	[CE]  	12661	None
24362	[BUG]  [BUGGY]  if(hexDigits  ==  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  ==  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  ==  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    >    32)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	21121	None
24482	[BUG]  [BUGGY]  final  char  pfxLen  =  hex_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  char  pfxLen  =  hex_prefixes.length();  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  char  pfxLen  =  hex_prefixes.length();	  final    int    pfxLen    =    hex_prefixes.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6302	None
24602	[BUG]  [BUGGY]  if((  lastChar  ==  null)||(lastChar  ==  null  ||  str.length()  ==  0))  {  return  createNumber(d);  }  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if((  lastChar  ==  null)||(lastChar  ==  null  ||  str.length()  ==  0))  {  return  createNumber(d);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if((  lastChar  ==  null)||(lastChar  ==  null  ||  str.length()  ==  0))  {  return  createNumber(d);  }	  if((    lastChar    ==    null)||(lastChar    ==    null    ||    lastChar.length()    ==    0))    {    return    createNumber(d);    }    	non-compiled	[CE]  illegal  start  of  type	19922	None
24662	[BUG]  [BUGGY]  return  Integer.toLongBits(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.toLongBits(str,  Integer.MAX_VALUE);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongBits(str,  Integer.MAX_VALUE);	  return    Integer.toLongBits(str);    	non-compiled	[CE]  illegal  start  of  expression	6314	None
24781	[BUG]  [BUGGY]  final  String  decPos  =  pfx.toString();  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.toString();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.toString();	  final    String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	6145	None
24782	[BUG]  [BUGGY]  final  String  decPos  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  decPos  =  pfx.charAt(pfxLen  -  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.charAt(pfxLen  -  1);	  final    String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	6145	None
24842	[BUG]  [BUGGY]  break  &=  str.indexOf(';',  pfxLen);  [CE]  ';'  expected  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  break  &=  str.indexOf(';',  pfxLen);  [BUGGY]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  &=  str.indexOf(';',  pfxLen);	  break    &=    str.length();    	non-compiled	[CE]  ';'  expected	3074	None
24902	[BUG]  [BUGGY]  if(pfx  ==  null  ||  pfx.length()  <  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  if(pfx  ==  null  ||  pfx.length()  <  0)  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	if(pfx  ==  null  ||  pfx.length()  <  0)  {	  if(pfx    ==    null    ||    pfx.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3241	None
25022	[BUG]  [BUGGY]  if((  str  ==  null)||(str.length()  ==  0))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if((  str  ==  null)||(str.length()  ==  0))  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if((  str  ==  null)||(str.length()  ==  0))  {	  if(str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	11581	None
25262	[BUG]  [BUGGY]  return  createLong(str,  mant  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return  createLong(str,  mant  +  1);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createLong(str,  mant  +  1);	  for(final    String    str    :    str.substring(1))    {    	non-compiled	[CE]  illegal  start  of  type	6122	None
25381	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  str.length);	  String    decPos    =(String)pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2161	None
25382	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length()  -  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length()  -  pfxLen);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  str.length()  -  pfxLen);	  String    decPos    =(String)pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2161	None
25442	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()),  0;  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex  =  str.substring(0,  str.length()),  0;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()),  0;	  final    String    hex    =    str.substring(0,    str.length()    -    1)-    1;    	non-compiled	[CE]  <identifier>  expected	6746	None
25682	[BUG]  [BUGGY]  for(final  String  str  :  str.substring(0,  str.length()),  0)  {  [CE]  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  str.substring(0,  str.length()),  0)  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  str.substring(0,  str.length()),  0)  {	  for(final    String    str    :    str.substring(1))    {    	non-compiled	[CE]  	6122	None
25742	[BUG]  [BUGGY]  return  createLong(str,  exp  +  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }          [BUGGY]  return  createLong(str,  exp  +  hexDigits);  [BUGGY]          if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  exp  +  hexDigits);	  return    createLong(str,    exp    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6266	None
25801	[BUG]  [BUGGY]  return  createBigDecimal(str,  numeric,  dec);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str,  numeric,  dec);  [BUGGY]          throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  numeric,  dec);	  return    createBigDecimal(str,    numeric);    	non-compiled	[CE]  illegal  start  of  type	1622	None
25982	[BUG]  [BUGGY]  String  pfxLen  =(char)(str.charAt(0));  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  pfxLen  =(char)(str.charAt(0));  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =(char)(str.charAt(0));	  String    pfxLen    =(char)str.length();    	non-compiled	[CE]  illegal  start  of  expression	9362	None
26042	[BUG]  [BUGGY]  String  pfxLen  =  str.length()  +  hex_prefixes.length;  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  String  pfxLen  =  str.length()  +  hex_prefixes.length;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	String  pfxLen  =  str.length()  +  hex_prefixes.length;	  String    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	1297	None
26162	[BUG]  [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "-1))  {  [CE]  unclosed  string  literal  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "-1))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "-1 ")||  pfx.startsWith( "-1))  {	  if(pfx.endsWith(   "--   ")||    pfx.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	721	None
26402	[BUG]  [BUGGY]  if(pfx.endsWith(hex)||  pfx.charAt(pfx.length())  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith(hex)||  pfx.charAt(pfx.length())  ==  0)  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith(hex)||  pfx.charAt(pfx.length())  ==  0)  {	  if(pfx.endsWith(hex)||    pfx.startsWith(hex))    {    	non-compiled	[CE]  illegal  start  of  expression	23041	None
26462	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  }  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  }  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  }  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    pfxLen);    if(str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	12302	None
26522	[BUG]  [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {          [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen  -  1);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  pfx.substring(0,  pfxLen  -  1);	  String    decPos    =    pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
26582	[BUG]  [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  0;  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  0;	  final    int    pfxLen    =(hex_prefixes    ==    null)?    str.length()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	3242	None
26642	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length()  -  1,  1);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }            [BUGGY]  System.arraycopy(str,  0,  str.length()  -  1,  1);  [BUGGY]          return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length()  -  1,  1);	  System.arraycopy(str,    0,    str.length()    -    1,    10);    	non-compiled	[CE]  illegal  start  of  expression	19562	None
26761	[BUG]  [BUGGY]  return  Integer.parseInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.parseInteger(str);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.parseInteger(str);	  return    Integer.parseFloat(str);    	non-compiled	[CE]  illegal  start  of  expression	5474	None
26822	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()).toString();  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()).toString();  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()).toString();	  String[]    hex_prefixes    =    str.substring(0,    str.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	10862	None
27062	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length  -  1);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length  -  1);  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length  -  1);	  final    String    pfxLen    =    pfx.charAt(pfxLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	18002	None
27122	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  mant,  str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  mant,  str,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  mant,  str,  Integer.MIN_VALUE);	  return    Integer.decode(mant,    str,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2066	None
27242	[BUG]  [BUGGY]  if(Character.isInteger(str)||  Character.isWhitespace(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  if(Character.isInteger(str)||  Character.isWhitespace(str))  {  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(Character.isInteger(str)||  Character.isWhitespace(str))  {	  if(StringUtils.isInteger(str)&&    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	23342	None
27302	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  0);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  0);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  0);	  Arrays.sort(str.substring(pfxLen    +    1),    pfx_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	5809	None
27422	[BUG]  [BUGGY]  Arrays.sort(str,  hex_prefixes,  0,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  Arrays.sort(str,  hex_prefixes,  0,  0);  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  hex_prefixes,  0,  0);	  Arrays.sort(str,    hex_prefixes,    null);    	non-compiled	[CE]  illegal  start  of  expression	3649	None
27542	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1));	  Arrays.sort(str.getChars(0,    str.length()),    0));    	non-compiled	[CE]  illegal  start  of  expression	17342	None
27602	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isDigit(pfxLen))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isAssign(mant)&&  StringUtils.isDigit(pfxLen))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)&&  StringUtils.isDigit(pfxLen))  {	  if(StringUtils.isAssign(mant)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	6170	None
27782	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }	  if(hexDigits    >    32)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5222	None
27842	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0x,  str.length()  -  2));  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String  dec  =  str.substring(0x,  str.length()  -  2));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0x,  str.length()  -  2));	  final    String    dec    =    str.substring(0x,    str.length()));    	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	650	None
27902	[BUG]  [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  1,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  1,  str.length());  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  1,  str.length());	  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+    1);    	non-compiled	[CE]  illegal  start  of  expression	2089	None
27962	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(mant))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(mant))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(mant))  {	  if(StringUtils.isBlank(mant)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	7658	None
28022	[BUG]  [BUGGY]  return  createInteger(str,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  return  createInteger(str,  pfx.length);  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createInteger(str,  pfx.length);	  return    createInteger(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	7177	None
28261	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(hexDigits  ==  2)  {  return  createInteger(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  ==  2)  {  return  createInteger(str);  }	  if(str    ==    null    ||    str.length()    ==    pfxLen)    {    	non-compiled	[CE]  illegal  start  of  expression	1442	None
28321	[BUG]  [BUGGY]  return  createBigDecimal(str,  true);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  createBigDecimal(str,  true);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  true);	  return    createBigDecimal(str,    null);    	non-compiled	[CE]  illegal  start  of  type	4562	None
28441	[BUG]  [BUGGY]  for(final  String  str  :  dec.toString())  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  dec.toString())  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  dec.toString())  {	  for(final    String    str    :    dec.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	6290	None
28442	[BUG]  [BUGGY]  for(final  String  str  :  exp.charAt(0))  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  for(final  String  str  :  exp.charAt(0))  {  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  exp.charAt(0))  {	  for(final    String    str    :    dec.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	6290	None
28562	[BUG]  [BUGGY]  for(final  String  str  :  _inputProperties)  {  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  for(final  String  str  :  _inputProperties)  {  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  _inputProperties)  {	  for(final    String    str    :    _prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	18362	None
28742	[BUG]  [BUGGY]  if(mant.length()  >  0)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(mant.length()  >  0)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant.length()  >  0)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5426	None
28861	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue()  +  1,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.getIntValue()  +  1,  0);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue()  +  1,  0);	  Arrays.sort(str.getIntValue(),    0);    	non-compiled	[CE]  illegal  start  of  expression	4201	None
28862	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  100);  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  Arrays.sort(str.getIntValue(),  100);  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue(),  100);	  Arrays.sort(str.getIntValue(),    0);    	non-compiled	[CE]  illegal  start  of  expression	4201	None
28922	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes)||  pfx.startsWith(hex_blocks))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.startsWith(hex_prefixes)||  pfx.startsWith(hex_blocks))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes)||  pfx.startsWith(hex_blocks))  {	  if(pfx.startsWith(hex_prefixes)||    pfx.startsWith(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None
28982	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt('.',  '/')+  1;  [CE]  illegal  start  of  type  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.charAt('.',  '/')+  1;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt('.',  '/')+  1;	  String    decPos    =    pfx.indexOf('.',    '/')+    1;    	non-compiled	[CE]  illegal  start  of  type	23702	None
29042	[BUG]  [BUGGY]  if(str  ==  0)  {  int  str  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  if(str  ==  0)  {  int  str  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  0)  {  int  str  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(str    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1201	None
29101	[BUG]  [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]          }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();          [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen  +  2);  [BUGGY]          break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  pfx.charAt(pfxLen  +  2);	  pfxLen    -=    str.charAt(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	7274	None
29162	[BUG]  [BUGGY]  for(final  String  pfx  :  hex_prefixes)  {  pfxLen;  }  [CE]  not  a  statement  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  for(final  String  pfx  :  hex_prefixes)  {  pfxLen;  }  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfx  :  hex_prefixes)  {  pfxLen;  }	  for(final    String    pfx    :    str)    {    pfxLen;    }    	non-compiled	[CE]  not  a  statement	3889	None
29282	[BUG]  [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  /  2;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};          [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  /  2;  [BUGGY]          for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  hex_prefixes.length  /  2;	  final    int    pfxLen    =    hex_prefixes.length    +    2;    	non-compiled	[CE]  illegal  start  of  expression	7489	None
29402	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  0xF));  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  0xF));  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length()),  0xF));	  Arrays.sort(str.getChars(0,    str.length()),    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	1322	None
29462	[BUG]  [BUGGY]  if((  str  ==  null)||(str.charAt(0)  ==  '+'))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if((  str  ==  null)||(str.charAt(0)  ==  '+'))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if((  str  ==  null)||(str.charAt(0)  ==  '+'))  {	  if((    str    ==    null)||(str.charAt(0)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	22382	None
29581	[BUG]  [BUGGY]  char  decPos  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  char  decPos  =  pfx.charAt(pfxLen  -  1);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	char  decPos  =  pfx.charAt(pfxLen  -  1);	  final    String    pfx    =    str.toStringTree(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	242	None
29702	[BUG]  [BUGGY]  if(pfx.endsWith( "0 ")||  pfx.startsWith( "-0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.endsWith( "0 ")||  pfx.startsWith( "-0 "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "0 ")||  pfx.startsWith( "-0 "))  {	  if(pfx.endsWith(   ".0   ")||    pfx.startsWith(   ".0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	12482	None
29762	[BUG]  [BUGGY]  return  createInt(str,  hexDigits  +  1,  8);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  createInt(str,  hexDigits  +  1,  8);  [BUGGY]          }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str,  hexDigits  +  1,  8);	  return    createInt(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3434	None
29881	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(str    ==    null    ||    StringUtils.isISOControl(str))    {    	non-compiled	[CE]  illegal  start  of  expression	6722	None
29882	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]          return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(hexDigits  <  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(str    ==    null    ||    StringUtils.isISOControl(str))    {    	non-compiled	[CE]  illegal  start  of  expression	6722	None
30062	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.'),  pfxLen  +  1;  [CE]  ';'  expected  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.'),  pfxLen  +  1;  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.'),  pfxLen  +  1;	  String    decPos    =    pfx.charAt(pfxLen    -    1)    ==    '.'?    pfx.charAt(pfxLen    -    1):    pfx.indexOf('.')+    1;    	non-compiled	[CE]  ';'  expected	21182	None
30122	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(0));  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  pfxLen  -=  str.charAt(0));  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	pfxLen  -=  str.charAt(0));	  pfxLen    -=    str.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	2785	None
30242	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0,  str.length()  -  2);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	3793	None
30302	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()),  pfxLen+  1);  [CE]  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.charAt(0),  str.length()),  pfxLen+  1);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.length()),  pfxLen+  1);	  Arrays.sort(str.charAt(0),    str.length()    -    1)+    1);    	non-compiled	[CE]  	3770	None
31022	[BUG]  [BUGGY]  if(StringUtils.isBlank(pfx)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isBlank(pfx)||  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(pfx)||  StringUtils.isDigit(str))  {	  if(StringUtils.isBlank(mant)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	4850	None
31081	[BUG]  [BUGGY]  Arrays.sort(hexDigits,  str.substring(0,  hexDigits),  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(hexDigits,  str.substring(0,  hexDigits),  hex_prefixes);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(hexDigits,  str.substring(0,  hexDigits),  hex_prefixes);	  Arrays.sort(str.substring(0,    hexDigits),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	11342	None
31082	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  len);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  len);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(0,  hexDigits),  len);	  Arrays.sort(str.substring(0,    hexDigits),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	11342	None
31322	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length())).  [CE]  ';'  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  pfx  =  str.substring(0,  str.length())).  [BUGGY]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length())).	  final    String    pfx    =    str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  ';'  expected	19321	None
31502	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  12;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  12;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)/  12;	  final    Integer    int    =    Integer.toLongBits(str)/    1;    	non-compiled	[CE]  illegal  start  of  expression	1466	None
31682	[BUG]  [BUGGY]  if(pfx.equals( "# ")||  pfx.equals( "-# "))  {  [CE]  illegal  start  of  expression  [CONTEXT]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {          [BUGGY]  if(pfx.equals( "# ")||  pfx.equals( "-# "))  {  [BUGGY]          pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.equals( "# ")||  pfx.equals( "-# "))  {	  if(pfx.equals(   "#   ")||    pfx.equals(   "#   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6698	None
31802	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()),  +  1;  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  final  String  hex  =  str.substring(0,  str.length()),  +  1;  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()),  +  1;	  final    String    hex    =    str.substring(0,    str.length()    -    1)+    1;    	non-compiled	[CE]  <identifier>  expected	1178	None
31922	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  2),  0);  [CE]  <identifier>  expected  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  2),  0);  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0,  str.length()  -  2),  0);	  final    String    dec    =    str.substring(0,    str.length()),    0);    	non-compiled	[CE]  <identifier>  expected	5942	None
32102	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxX,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxX,  pfxLen);  [BUGGY]          if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfxX,  pfxLen);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxX);    	non-compiled	[CE]  illegal  start  of  expression	4058	None
32282	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }            [BUGGY]  if(hexDigits  >  0)  {  return  createLong(str);  }  [BUGGY]          int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hexDigits  >  0)  {  return  createLong(str);  }	  if(hexDigits    >    1)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4682	None
32582	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(len)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]            final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number          [BUGGY]  if(StringUtils.isWhitespace(len)||  StringUtils.isDigit(str))  {  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(len)||  StringUtils.isDigit(str))  {	  if(StringUtils.isWhitespace(pfx)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3290	None
32821	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  2  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  /  2  +  1;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  2  +  1;	  return    Integer.MAX_VALUE    /    2;    	non-compiled	[CE]  illegal  start  of  expression	530	None
32822	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  2  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Integer  createInteger(final  String  str)  {          [BUGGY]  return  Integer.MAX_VALUE  /  2  -  1;  [BUGGY]          if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  2  -  1;	  return    Integer.MAX_VALUE    /    2;    	non-compiled	[CE]  illegal  start  of  expression	530	None
32942	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(str  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(str  ==  null)  {  return  null;  }  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(str  ==  null)  {  return  null;  }	  if(dec    ==    null    ||    exp    ==    null)    {    if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16262	None
33002	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }          [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]          final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  str.substring(0,  str.length());	  String    str    =    pfx.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	4586	None
33121	[BUG]  [BUGGY]  Arrays.sort(str.getInteger()  +  1);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getInteger()  +  1);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getInteger()  +  1);	  for(final    String    hex_prefixes    :    hx_prefixes)    {    	non-compiled	[CE]  illegal  start  of  type	1682	None
33122	[BUG]  [BUGGY]  Arrays.sort(str.getInteger(),  null);  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  Arrays.sort(str.getInteger(),  null);  [BUGGY]          if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getInteger(),  null);	  for(final    String    hex_prefixes    :    hx_prefixes)    {    	non-compiled	[CE]  illegal  start  of  type	1682	None
33182	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;          [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]          return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    1)    {    if(hexDigits    >    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	15301	None
33242	[BUG]  [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  1  :  hex_prefixes.length();  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;          [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  1  :  hex_prefixes.length();  [BUGGY]          if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	int  pfxLen  =(hex_prefixes  ==  null)?  1  :  hex_prefixes.length();	  int    pfxLen    =(hex_prefixes    ==    null)?    0    :    hex_prefixes.length();    	non-compiled	[CE]  illegal  start  of  type	14942	None
33302	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase(getNumber());  [CE]  illegal  start  of  type  [CONTEXT]          public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {          [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase(getNumber());  [BUGGY]          if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(         "A  blank  string  is  not  a  valid  number         ");  }  final  String[]  hex_prefixes  =  {         "0x         ",           "0X         ",           "-0x         ",           "-0X         ",           "#         ",           "-#         "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return(str  ==  null)?  null  :  str.toLowerCase(getNumber());	  return(str    ==    null)?    null    :    str.toLowerCase(null);    	non-compiled	[CE]  illegal  start  of  type	19502	None
33481	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    pfxLen,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	6542	None
33482	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  1,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  1,  Integer.MIN_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  1,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    pfxLen,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	6542	None
33541	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]          }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }          [BUGGY]  return  Integer.decode(hexDigits,  0,  Integer.MAX_VALUE);  [BUGGY]          return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    pfxLen,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	21662	None
