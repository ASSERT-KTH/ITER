bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	5	None	replace
2	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	15	None	replace
3	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	15	None	replace
4	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	15	None	replace
5	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1x,  10.0,  10.0  }  ;  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1x,  10.0,  10.0  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1x,  10.0,  10.0  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	37	None	replace
6	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1x,  10.0,  10.0  }  ;  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1x,  10.0,  10.0  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1x,  10.0,  10.0  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	37	None	replace
7	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1x,  10.0,  10.0,  1  }  ;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1x,  10.0,  10.0,  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1x,  10.0,  10.0,  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	37	None	replace
8	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  0,  str.length()  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  0,  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  0,  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	16	None	replace
9	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  0,  str.length()  -  1  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  0,  str.length()  -  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  0,  str.length()  -  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	16	None	replace
10	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x ",   "# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	16	None	replace
11	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x       ",       "0x       ",       "0x       ",       "-#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	26	None	replace
12	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "0x ",   "-# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "0x ",   "-# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "0x ",   "-# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x       ",       "0x       ",       "0x       ",       "-#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	26	None	replace
13	[BUG]  [BUGGY]  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
14	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
15	[BUG]  [BUGGY]  if(str  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(str  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(str  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
16	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",       "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	3	None	replace
17	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  str.length(),  0,  1  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  str.length(),  0,  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  str.length(),  0,  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  ')'  expected	29	None	replace
18	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1  }  ;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  	29	None	replace
19	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  ')'  expected	29	None	replace
20	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  1x ",  1x,  1  }  ;  [CE]  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  1x ",  1x,  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  1x ",  1x,  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  	29	None	replace
21	[BUG]  [BUGGY]  final  char  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  char  hexDigits  =  str.length();  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  char  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
22	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   "    }    ;    	non-compiled	[CE]  ')'  expected	18	None	replace
23	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x ",   "-# "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",       "-0x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	34	None	replace
24	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x ",   "-0x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",       "-0x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	34	None	replace
25	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  10.0,   "-# "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  10.0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  10.0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	27	None	replace
26	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ",  10.0,   "-# "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ",  10.0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ",  10.0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	27	None	replace
27	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ",  10.0,  0,  10.0,   "-# "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ",  10.0,  0,  10.0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x ",  10.0,  0,  10.0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	27	None	replace
28	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",       "0x   "    }    ;    	non-compiled	[CE]  ')'  expected	13	None	replace
29	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	28	None	replace
30	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  	28	None	replace
31	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  	28	None	replace
32	[BUG]  [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	24	None	replace
33	[BUG]  [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	24	None	replace
34	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "-1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	7	None	replace
35	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1x   "  }  ;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1x   "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",  1x,  1x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  final    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	20	None	replace
37	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  +  16;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  int  hexDigits  =  str.length()  +  16;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  hexDigits  =  str.length()  +  16;	  final    int    hexDigits    =    str.length()    -    16;    	non-compiled	[CE]  ')'  expected	12	None	replace
38	[BUG]  [BUGGY]  static  final  int  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  static  final  int  hexDigits  =  str.length();  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	static  final  int  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    16;    	non-compiled	[CE]  ')'  expected	12	None	replace
39	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",   "1x "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",   "1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",   "1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",       "1x   "    }    ;    	non-compiled	[CE]  ')'  expected	14	None	replace
40	[BUG]  [BUGGY]  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	30	None	replace
41	[BUG]  [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	23	None	replace
42	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String[]  hex_prefixes  =  {   "0x  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String[]  hex_prefixes  =  {   "0x  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String[]  hex_prefixes  =  {   "0x	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  	23	None	replace
43	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
44	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
45	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [CE]  ')'  expected  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
46	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "1x ", "1x ", "1x "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "1x ", "1x ", "1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "1x ", "1x ", "1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	6	None	replace
47	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  str.length(),  0,  0,  null  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  str.length(),  0,  0,  null  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  str.length(),  0,  0,  null  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#   ",    str,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	19	None	replace
48	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "-# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "-# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "-# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#   ",    str,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	19	None	replace
49	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#   ",    str,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	19	None	replace
50	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "-# "  }  ;  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  str.length()  +  1,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#   ",    str,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	19	None	replace
51	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x ",   "# ",  str.length()  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x ",   "# ",  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x ",   "# ",  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	2	None	replace
52	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str.length()  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	2	None	replace
53	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x "  },  null,  null,  str.length()  }  ;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x "  },  null,  null,  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x "  },  null,  null,  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",    str.length()    }    ;    	non-compiled	[CE]  	2	None	replace
54	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x "  +  str,  0,  0,  0,  str.length()  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x "  +  str,  0,  0,  0,  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x "  +  str,  0,  0,  0,  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",    0,    0,    0,    0,    0,    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	17	None	replace
55	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  str.length()  +  1  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  str.length()  +  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  str.length()  +  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",    0,    0,    0,    0,    0,    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	17	None	replace
56	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  str.length()  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",    0,    0,    0,    0,    0,    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	17	None	replace
57	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  str.length()  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  0,  0,  0,  0,  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   "    }    ;    	non-compiled	[CE]  ')'  expected	8	None	replace
58	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ", "-# "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ", "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ", "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",    null,       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	36	None	replace
59	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ", "0x "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",    null,       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	36	None	replace
60	[BUG]  [BUGGY]  final  int  pfxLen  =  0;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  int  pfxLen  =  0;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =  0;	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  ')'  expected	33	None	replace
61	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  	33	None	replace
62	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  }  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  }	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  	33	None	replace
63	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  [Delete]  [CE]  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  [Delete]  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  0;  for(int  i  =  0  [Delete]	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  	33	None	replace
64	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  str,   "-# "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  str,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  str,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",   "0x   ",       "0x       ",       "0x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	1	None	replace
65	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  str,   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  str,   "# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  str,   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",   "0x   ",       "0x       ",       "0x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	1	None	replace
66	[BUG]  [BUGGY]  final  String  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String  hexDigits  =  str.length();  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
67	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  dec  =  str.substring(0,  str.length()  -  1);	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
68	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
69	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  nu  [CE]  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  nu  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  nu	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  	25	None	replace
70	[BUG]  [BUGGY]  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	23	None	replace
71	[BUG]  [BUGGY]  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	23	None	replace
72	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x ",  str,   "-# "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x ",  str,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x ",  str,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#   ",    str,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	19	None	replace
73	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "# ",   "1x ",  str  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "# ",   "1x ",  str  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "# ",   "1x ",  str  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",       "1x   "    }    ;    	non-compiled	[CE]  ')'  expected	14	None	replace
74	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	31	None	replace
75	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "# ",   "-1x ",  str  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "# ",   "-1x ",  str  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "# ",   "-1x ",  str  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",       "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	3	None	replace
76	[BUG]  [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;	  final    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	21	None	replace
77	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str.length()  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	2	None	replace
78	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ",  str.length()  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ",  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,   "# ",  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	2	None	replace
79	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "# ",   "0x ",  str  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "# ",   "0x ",  str  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "# ",   "0x ",  str  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",       "0x   "    }    ;    	non-compiled	[CE]  ')'  expected	13	None	replace
80	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "-1x, "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "-1x, "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "-1x, "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	7	None	replace
81	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "-1x ",   "-1x "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "-1x ",   "-1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "-1x ",   "-1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	7	None	replace
82	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "-1x ", "-1x ", "-1x ",  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	6	None	replace
83	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
84	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
85	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
86	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
87	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	24	None	replace
88	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x ",   "# "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x ",   "# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x ",   "# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  ')'  expected	29	None	replace
89	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  1,  str.length()  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  1,  str.length()  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",  0,  0,  1,  str.length()  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",    0,    0,    0,    0,    0,    str.length()    }    ;    	non-compiled	[CE]  ')'  expected	17	None	replace
90	[BUG]  [BUGGY]  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	22	None	replace
91	[BUG]  [BUGGY]  &&(hex_prefixes  ==  null  ||  hex_prefixes.length()  ==  0))  {  final  int  pfxLen  =  0;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  &&(hex_prefixes  ==  null  ||  hex_prefixes.length()  ==  0))  {  final  int  pfxLen  =  0;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	&&(hex_prefixes  ==  null  ||  hex_prefixes.length()  ==  0))  {  final  int  pfxLen  =  0;	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  ')'  expected	33	None	replace
92	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  ')'  expected	33	None	replace
93	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  ')'  expected	33	None	replace
94	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  dec.length()  -  1);  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  dec  =  str.substring(0,  dec.length()  -  1);  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  dec  =  str.substring(0,  dec.length()  -  1);	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
95	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [CE]  ')'  expected  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  if(dec!=  null)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
96	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  [CE]  ')'  expected  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(0,  dec.length()  -  1);	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    String    dec    =    str.substring(0,    dec.length()    -    1);    if(dec!=    null)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
97	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(1);  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(1);  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  Number[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  final  String  dec  =  str.substring(1);	  Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	24	None	replace
98	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(int  i  =  0;  i  <  str.length();  ++i)  {	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
99	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
100	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0;    i    <    str.length();    ++i)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
101	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x   ",   "# ",  1  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x   ",   "# ",  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x   ",   "# ",  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  ')'  expected	29	None	replace
102	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x   ",   "# ",  1  }  ;  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x   ",   "# ",  1  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "0x   ",   "0x   ",   "0x   ",   "# ",  1  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",    1    }    ;    	non-compiled	[CE]  ')'  expected	29	None	replace
103	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,  null  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,  null  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,  null  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	6	None	replace
104	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,  null,  null  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,  null,  null  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  null,  null,  null  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	6	None	replace
105	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   "  }  ;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  	6	None	replace
106	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x ",   "0x "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x ",   "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x ",   "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",       "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	3	None	replace
107	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;  [CE]  ')'  expected  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",   "# ", "0x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "#   ",       "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	3	None	replace
108	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0X   ",   "#   ",   "-#   "  }  ;	  String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	30	None	replace
109	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-0x   "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-0x   "  }  ;  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-0x   "  }  ;	  String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ')'  expected	30	None	replace
110	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "-1x ",   "-1x ",   "-1x "  }  ;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "-1x ",   "-1x ",   "-1x "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ",   "-1x ",   "-1x ",   "-1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  ')'  expected	15	None	replace
111	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   "  }  ;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  	7	None	replace
112	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0,0x80,  0,0x   "  }  ;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0,0x80,  0,0x   "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0,0x80,  0,0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  	7	None	replace
113	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x80,  0x   ",  0x   "  }  ;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x80,  0x   ",  0x   "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x80,  0x   ",  0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   "    }    ;    	non-compiled	[CE]  	7	None	replace
114	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  final  int  pfxLen  =  0;  for(	  if(hex_prefixes    ==    null)    {    Number[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    final    int    pfxLen    =    0;    for(int    i    =    0    	non-compiled	[CE]  ')'  expected	33	None	replace
115	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  int  pfxLen  =  0;  for(String  exp  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  int  pfxLen  =  0;  for(String  exp  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  int  pfxLen  =  0;  for(String  exp	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  	4	None	replace
116	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  10.0,   "-1x ",  10.0,   "-# "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  10.0,   "-1x ",  10.0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  10.0,   "-1x ",  10.0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	27	None	replace
117	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  1x   ",  0,  10.0,   "-# "  }  ;  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  1x   ",  0,  10.0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  1x   ",  0,  10.0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  	27	None	replace
118	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  10.0,   "-# "  }  ;  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  10.0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  10.0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	27	None	replace
119	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",    10.0,       "-#   "    }    ;    	non-compiled	[CE]  	27	None	replace
120	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  	28	None	replace
121	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  	28	None	replace
122	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   "  }  ;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ", "0x ", "0x ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   ",  0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-1x   ",       "#       ",       "-#   "    }    ;    	non-compiled	[CE]  	28	None	replace
123	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ", "0x ", "0x ",   "0x   ",   "-0x ",   "#   ",   "-# "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ", "0x ", "0x ",   "0x   ",   "-0x ",   "#   ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ", "0x ", "0x ",   "0x   ",   "-0x ",   "#   ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",       "-0x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	34	None	replace
124	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str,  0,   "-# "  }  ;  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str,  0,   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "0x ",   "# ",  str,  0,   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "0x   ",   "0x   ",       "#   ",    str,       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	19	None	replace
125	[BUG]  [BUGGY]  final  String[]  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hexDigits  =  str.length();  [BUGGY]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	11	None	replace
126	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",   "# ",   "-# "  }  ;  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }        [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",   "# ",   "-# "  }  ;  [BUGGY]      int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ", "0x ", "0x ", "0x ", "-1x ", "-1x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  ')'  expected	37	None	replace
