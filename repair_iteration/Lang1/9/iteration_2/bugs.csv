bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createNumber(str,  0);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  false);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  false);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createNumber(str,  false);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  true);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  true);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createNumber(str,  true);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [CE]  'catch'  without  'try'  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
8	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  getNumber(str,  0);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  getNumber(str.toLowerCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  getNumber(str,  1);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  NumberUtils.copyNumber(str);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.copyNumber(str);  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	NumberUtils.copyNumber(str);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	5	None	replace
13	[BUG]  [BUGGY]  Number  str  =  createNull();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNull();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createNull();	      Number    str    =    createString(str);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  Number  str  =  createShort(str);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createShort(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createShort(str);	      Number    str    =    createString(str);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Number  str  =  createString(str,  0);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createString(str,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createString(str,  0);	      Number    str    =    createString(str);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  if(str  ==  null  ||  str.equals( "null "))  {  [CE]  'catch'  without  'try'  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.equals( "null "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.equals( "null "))  {	  if(str    ==    null    ||    str.equals(   "   "))    {    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
17	[BUG]  [BUGGY]  if(str  ==  null  ||  str.equals( "0 "))  {  [CE]  'catch'  without  'try'  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.equals( "0 "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.equals( "0 "))  {	  if(str    ==    null    ||    str.equals(   "   "))    {    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
18	[BUG]  [BUGGY]  if(str  ==  null  ||  str.equals( "_ "))  {  [CE]  'catch'  without  'try'  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.equals( "_ "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.equals( "_ "))  {	  if(str    ==    null    ||    str.equals(   "   "))    {    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
19	[BUG]  [BUGGY]  String  str  =  this.str.trim();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  this.str.trim();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  this.str.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  String  str  =  this.str.substring(0,  this.str.length()  -  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  this.str.substring(0,  this.str.length()  -  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  this.str.substring(0,  this.str.length()  -  1);	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.trim();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =(str  ==  null)?  null  :  str.trim();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =(str  ==  null)?  null  :  str.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  String  str  =  null;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  null;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  null;	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  String  str  =  this.number.trim();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  this.number.trim();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  this.number.trim();	      String    str    =    str.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	5	None	replace
25	[BUG]  [BUGGY]  if(str  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.copyValue(str,  0);  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	NumberUtils.copyValue(str,  0);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  NumberUtils.copyPath(str);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.copyPath(str);  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	NumberUtils.copyPath(str);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  Number  str  =  createString(str,  hex_prefixes);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createString(str,  hex_prefixes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createString(str,  hex_prefixes);	      Number    str    =    createString(str);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  if(str  ==  null  ||  str.equals( "- "))  {  [CE]  'catch'  without  'try'  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.equals( "- "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.equals( "- "))  {	  if(str    ==    null    ||    str.equals(   "   "))    {    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
30	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hex_prefixes);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  hex_prefixes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createNumber(str,  hex_prefixes);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  getNumber(str.toUpperCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	int  decPos  =  str.lastIndexOf('.');	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  if(str  ==  null)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  Number  str  =  createString(str,  DECIMAL_NUMBER);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createString(str,  DECIMAL_NUMBER);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createString(str,  DECIMAL_NUMBER);	      Number    str    =    createString(str);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1));  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str.substring(1));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Number  str  =  createNumber(str.substring(1));	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
