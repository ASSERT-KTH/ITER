bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
1	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-0x   ",       "-0X   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  illegal  start  of  expression	289	None
25	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  if(hexDigits  ==  1)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  8)  {  if(hexDigits  ==  1)  {  return  createLong(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  8)  {  if(hexDigits  ==  1)  {  return  createLong(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	315	None
26	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  numDecimal  =  str.length();  if(numDecimal  >=  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  1)  {  int  numDecimal  =  str.length();  if(numDecimal  >=  0)  {  return  createInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  int  numDecimal  =  str.length();  if(numDecimal  >=  0)  {  return  createInteger(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	315	None
49	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String[]  dec  =  str.substring(0,  str.length());	      final    String[]    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	362	None
50	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()));  [CE]  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String[]  dec  =  str.substring(0,  str.length()));	      final    String[]    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	362	None
73	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  [Delete]  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	[Delete]	      if(str    ==    null)    {    if(str    ==    Integer.MIN_VALUE)    {    return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	722	None
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  create  [CE]  ';'  expected  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  create  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  create	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    if(e.getNumerics()    ==    0)    {    return    createLong(    	non-compiled	[CE]  ';'  expected	423	None
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    if(e.getNumerics()    ==    0)    {    return    createLong(    	non-compiled	[CE]  illegal  start  of  expression	423	None
122	[BUG]  [BUGGY]  int  pfxLen  =  hex_prefixes.length();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  int  pfxLen  =  hex_prefixes.length();  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	int  pfxLen  =  hex_prefixes.length();	  for(final    String    pfx    :    str)    {    	non-compiled	[CE]  illegal  start  of  type	241	None
145	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  [Delete]  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	[Delete]	      if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	363	None
146	[BUG]  [BUGGY]  return  null;  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  return  null;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  null;	      if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None
170	[BUG]  [BUGGY]  char  decPos  =  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {    [BUGGY]  char  decPos  =  pfx.length();  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	char  decPos  =  pfx.length();	      int    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	603	None
193	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  final  int  hexDigits  =  str.length();  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	577	None
194	[BUG]  [BUGGY]  final  long  hexDigits  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  final  long  hexDigits  =  str.length();  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  long  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	577	None
217	[BUG]  [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  }  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	        if(str    ==    null)    {    return    null;    }    if(str  ==  null)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None
218	[BUG]  [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  [Delete]  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	        if(str    ==    null)    {    return    null;    }    if(str  ==  null)  {  return  null;  [Delete]	  	non-compiled	[CE]  illegal  start  of  expression	3	None
219	[BUG]  [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  >>  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  >>  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	        if(str    ==    null)    {    return    null;    }    if(str  ==  null)  {  return  null;  >>	  	non-compiled	[CE]  illegal  start  of  expression	3	None
266	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxLen  +  1);	      final    String    str    =    pfx.substring(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	147	None
289	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase();  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  final  String  pfx  =  str.toLowerCase();  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase();	      while(str.startsWith(hex_prefixes))    {    final    String    pfx    =    str.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	386	None
314	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  return  createInteger(str);  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInteger(str);	      return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	1263	None
337	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  return  createBigInteger(str);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigInteger(str);	      return    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	1	None
361	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	      String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	122	None
362	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isDigit(str))  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isDigit(str))  {	      String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	122	None
386	[BUG]  [BUGGY]  Arrays.sort(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Arrays.sort(str,  null);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str,  null);	      Arrays.sort(str);    	non-compiled	[CE]  illegal  start  of  type	1022	None
409	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  [Delete]  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	[Delete]	      if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None
410	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	}	      if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None
433	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str    ==    null    ||    str.length()    ==    0)    {    if(str  ==  null  ||  str.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	194	None
434	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()!=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()!=  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str    ==    null    ||    str.length()    ==    0)    {    if(str  ==  null  ||  str.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	194	None
435	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str    ==    null    ||    str.length()    ==    0)    {    if(str!=  null  ||  str.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	194	None
481	[BUG]  [BUGGY]  for(final  String  d  :  str.values())  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  for(final  String  d  :  str.values())  {  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  d  :  str.values())  {	      for(final    String    d    :    str.values())    {    if(!(lastChar    ==    null    ||    lastChar.length()    ==    0))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None
505	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  System.arraycopy(str,  0,  str.length());  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length());	      if(str.length()    ==    0)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None
506	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length(),  1);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  System.arraycopy(str,  0,  str.length(),  1);  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length(),  1);	      if(str.length()    ==    0)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None
554	[BUG]  [BUGGY]  char  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  char  pfxLen  =  str.length();  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	char  pfxLen  =  str.length();	      int    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	217	None
578	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  return  createInteger(str);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createInteger(str);	      return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	1321	None
602	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {    [BUGGY]  return  createBigInteger(str);  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	return  createBigInteger(str);	      if(str.endsWith(pfx))    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	675	None
625	[BUG]  [BUGGY]  Arrays.sort(str,  0,  hex_prefixes.length);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  Arrays.sort(str,  0,  hex_prefixes.length);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  0,  hex_prefixes.length);	      Arrays.sort(hex_prefixes,    0,    str.length);    	non-compiled	[CE]  illegal  start  of  expression	903	None
673	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1));  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1));  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1));	      Arrays.sort(str.substring(pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	542	None
698	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isLetter(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  StringUtils.isLetter(str))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  StringUtils.isLetter(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1142	None
745	[BUG]  [BUGGY]  return  Integer.MIN_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  return  Integer.MIN_VALUE;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MIN_VALUE;	      if(str    ==    null)    {    if(str    ==    Integer.MIN_VALUE)    {    return    Integer.MIN_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	723	None
746	[BUG]  [BUGGY]  if(str  ==  null)  {  return  Integer.MIN_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  if(str  ==  null)  {  return  Integer.MIN_VALUE;  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  null)  {  return  Integer.MIN_VALUE;  }	      if(str    ==    null)    {    if(str    ==    Integer.MIN_VALUE)    {    return    Integer.MIN_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	723	None
770	[BUG]  [BUGGY]  int  pfxLen  =  hex_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  int  pfxLen  =  hex_prefixes.length();  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =  hex_prefixes.length();	      int    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	902	None
817	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  0)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	313	None
818	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  0)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	313	None
842	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  if(hexDigits  ==  32)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  8)  {  if(hexDigits  ==  32)  {  return  createLong(str);  }  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  8)  {  if(hexDigits  ==  32)  {  return  createLong(str);  }	      if(hexDigits    <    16)    {    if(hexDigits    ==    32)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	530	None
865	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()));  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.getChars(0,  str.length()));  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()));	      Arrays.sort(str.getChars(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	543	None
866	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length())+  1);	      Arrays.sort(str.getChars(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	543	None
938	[BUG]  [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length;  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length;	  int    pfxLen    =(hex_prefixes    ==    null)?    0    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	1442	None
986	[BUG]  [BUGGY]  pfxLen  =  pfx.length()  +  1;  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  pfxLen  =  pfx.length()  +  1;  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =  pfx.length()  +  1;	      pfxLen    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	1501	None
1010	[BUG]  [BUGGY]  char  decPos  =  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  char  decPos  =  pfx.length();  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	char  decPos  =  pfx.length();	      int    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	1502	None
1034	[BUG]  [BUGGY]  if(BlankUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(BlankUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(BlankUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	602	None
1058	[BUG]  [BUGGY]  String  pfx  =(String)pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  String  pfx  =(String)pfx.substring(0,  pfxLen);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(String)pfx.substring(0,  pfxLen);	      String    str    =(String)pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	123	None
1154	[BUG]  [BUGGY]  for(final  String  d  :  str.charAt(0))  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  for(final  String  d  :  str.charAt(0))  {  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  d  :  str.charAt(0))  {	      for(final    String    d    :    str.values())    {    if(!(lastChar    ==    null    ||    lastChar.length()    ==    0))    {    return    createNumber(d);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None
1177	[BUG]  [BUGGY]  }  else  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  not  a  statement  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  }  else  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	}  else  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  [Delete]    else    if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	314	None
1178	[BUG]  [BUGGY]  }  else  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  not  a  statement  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  }  else  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	}  else  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  [Delete]    else    if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	314	None
1201	[BUG]  [BUGGY]  if(decPos  <  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  <  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1683	None
1202	[BUG]  [BUGGY]  if(decPos  >  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  >  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1683	None
1225	[BUG]  [BUGGY]  char  decPos  =  pfx.indexOf('.');  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  char  decPos  =  pfx.indexOf('.');  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	char  decPos  =  pfx.indexOf('.');	      int    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	1503	None
1226	[BUG]  [BUGGY]  final  int  decPos  =  pfx.indexOf('.');  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  int  decPos  =  pfx.indexOf('.');  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  int  decPos  =  pfx.indexOf('.');	      int    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	1503	None
1250	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  if(hexDigits  >  16)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  8)  {  if(hexDigits  >  16)  {  return  createLong(str);  }  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  8)  {  if(hexDigits  >  16)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    if(hexDigits    >    16)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	529	None
1273	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(pfxLen)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  +=  str.charAt(pfxLen)+  1;  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  str.charAt(pfxLen)+  1;	      pfxLen    +=    str.charAt(pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	459	None
1274	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(pfxLen)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  +=  str.charAt(pfxLen)-  1;  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  str.charAt(pfxLen)-  1;	      pfxLen    +=    str.charAt(pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	459	None
1297	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  if(hex_prefixes  ==  null)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(hex_prefixes  ==  null)  {  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(hex_prefixes!=    null)    {    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	505	None
1322	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  final  Integer  int  =  Integer.toLongBits(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str);	      final    Integer    int    =    Integer.decode(str);    	non-compiled	[CE]  illegal  start  of  expression	721	None
1346	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  final  String  pfx  =  str.charAt(0);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	final  String  pfx  =  str.charAt(0);	      	non-compiled	[CE]  illegal  start  of  type	243	None
1369	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	483	None
1370	[BUG]  [BUGGY]  if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	483	None
1393	[BUG]  [BUGGY]  if(hex_prefixes!=  null)  {  for(final  String  pfxLen  :  hex_prefixes)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  if(hex_prefixes!=  null)  {  for(final  String  pfxLen  :  hex_prefixes)  {  break;  }  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(hex_prefixes!=  null)  {  for(final  String  pfxLen  :  hex_prefixes)  {  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	243	None
1394	[BUG]  [BUGGY]  for(final  String  pfx  :  hex_prefixes)  {  break;  }  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  for(final  String  pfx  :  hex_prefixes)  {  break;  }  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfx  :  hex_prefixes)  {  break;  }	      	non-compiled	[CE]  illegal  start  of  type	243	None
1417	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  pfxLen;  ++i)  {  return  Integer.MIN_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  pfxLen;  ++i)  {  return  Integer.MIN_VALUE;  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  pfxLen;  ++i)  {  return  Integer.MIN_VALUE;  }	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None
1418	[BUG]  [BUGGY]  if(str  ==  null)  {  return  createNumber(str);  }  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null)  {  return  createNumber(str);  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  return  createNumber(str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	195	None
1442	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  pfxLen.length()  -  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  String  str  =(String)pfx.substring(0,  pfxLen.length()  -  pfxLen);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfx.substring(0,  pfxLen.length()  -  pfxLen);	      String    str    =(String)pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	121	None
1465	[BUG]  [BUGGY]  if(pfx.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.endsWith( "- "))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "- "))  {	  if(pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	662	None
1466	[BUG]  [BUGGY]  if(pfx.startsWith( "- ")||  pfx.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.startsWith( "- ")||  pfx.endsWith( "- "))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "- ")||  pfx.endsWith( "- "))  {	  if(pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	662	None
1490	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	601	None
1513	[BUG]  [BUGGY]  if(pfx.endsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.endsWith(hex_prefixes))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith(hex_prefixes))  {	  if(pfx.startsWith(str))    {    	non-compiled	[CE]  illegal  start  of  expression	553	None
1514	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.startsWith(hex_prefixes))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes))  {	  if(pfx.startsWith(str))    {    	non-compiled	[CE]  illegal  start  of  expression	553	None
1537	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue());  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  Arrays.sort(str.getIntValue());  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue());	      Arrays.sort(str.getAlternatives());    	non-compiled	[CE]  illegal  start  of  expression	1741	None
1562	[BUG]  [BUGGY]  if(pfxLen  <  2)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(pfxLen  <  2)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(pfxLen  <  2)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }	      if(hexDigits    <    2)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1202	None
1585	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  final  String  dec  =  str.substring(0,  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0,  str.length());	      final    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	361	None
1586	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length()));  [CE]  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  final  String  dec  =  str.substring(0,  str.length()));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0,  str.length()));	      final    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	361	None
1610	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}	      if(str    ==    null)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	170	None
1658	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  return  createInteger(str);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createInteger(str);	      return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	699	None
1682	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    0,    pfxLen);    if(e.getNumerics()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	421	None
1706	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  1);  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length()  -  1);	      final    String    pfx    =    str.toString();    	non-compiled	[CE]  illegal  start  of  expression	1742	None
1729	[BUG]  [BUGGY]  return  createBigInteger(str.toString());  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  return  createBigInteger(str.toString());  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigInteger(str.toString());	      return    createInteger(str.toString());    	non-compiled	[CE]  illegal  start  of  type	1023	None
1753	[BUG]  [BUGGY]  pfxLen  =  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  pfxLen  =  pfx.length();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =  pfx.length();	  if(StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	602	None
1754	[BUG]  [BUGGY]  pfxLen  =  str.length();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  pfxLen  =  str.length();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =  str.length();	  if(StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	602	None
1777	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1));  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1));	      final    String[]    hex_prefixes    =    str.get(str.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	627	None
1801	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	482	None
1802	[BUG]  [BUGGY]  if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	482	None
1825	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  return  create  [CE]  ';'  expected  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  return  create  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  return  create	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    1);    if(e.getNumerics()    ==    0)    {    return    createLong(s    	non-compiled	[CE]  ';'  expected	422	None
1826	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  return  createL  [CE]  ';'  expected  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  return  createL  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  return  createL	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    1);    if(e.getNumerics()    ==    0)    {    return    createLong(s    	non-compiled	[CE]  ';'  expected	422	None
1849	[BUG]  [BUGGY]  if(mant  ==  null)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(mant  ==  null)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	      if(mant    ==    null)    {    String    str    =    mant.substring(0,    mant.length()    -    1);    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1322	None
1850	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  [Delete]  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	[Delete]	      if(mant    ==    null)    {    String    str    =    mant.substring(0,    mant.length()    -    1);    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1322	None
1874	[BUG]  [BUGGY]  return  createInteger(str  +  8);  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  return  createInteger(str  +  8);  [BUGGY]    }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInteger(str  +  8);	  return    createInteger(str    +    1);    	non-compiled	[CE]  illegal  start  of  expression	182	None
1898	[BUG]  [BUGGY]  return  LongBits.toLongBits(str);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  return  LongBits.toLongBits(str);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str);	  return    Integer.toLongBits(str);    	non-compiled	[CE]  illegal  start  of  expression	50	None
1922	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1);	      Arrays.sort(str.substring(0,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	541	None
1945	[BUG]  [BUGGY]      if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }  if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]      if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }  if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	        if(str.length()    ==    0)    {    return    Integer.parseInt(str);    }    if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None
1947	[BUG]  [BUGGY]      if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }  if(str.length()  ==  0)  {  return  Integer.parseInt(str);  >>  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]      if(str.length()  ==  0)  {  return  Integer.parseInt(str);  }  if(str.length()  ==  0)  {  return  Integer.parseInt(str);  >>  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	        if(str.length()    ==    0)    {    return    Integer.parseInt(str);    }    if(str.length()  ==  0)  {  return  Integer.parseInt(str);  >>	  	non-compiled	[CE]  illegal  start  of  expression	25	None
1969	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  [Delete]  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	[Delete]	      if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None
1970	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  }  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}	      if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	4	None
1994	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  str);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  final  Integer  str  =  createInteger(str,  str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  str);	      if(str    ==    null)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	170	None
2017	[BUG]  [BUGGY]  return  Integer.decode(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  return  Integer.decode(str,  Integer.MAX_VALUE);  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(str,  Integer.MAX_VALUE);	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	482	None
2018	[BUG]  [BUGGY]  return  Integer.decode(str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  return  Integer.decode(str,  Integer.MIN_VALUE);  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(str,  Integer.MIN_VALUE);	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	482	None
2041	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(StringUtils.isBlank(str)||  ArrayUtils.isInfinite(str))  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)||  ArrayUtils.isInfinite(str))  {	      String    str    =(String)pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	121	None
2042	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  ArrayUtils.isInfinite(str))  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  ArrayUtils.isInfinite(str))  {	      String    str    =(String)pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	121	None
2066	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	99	None
2090	[BUG]  [BUGGY]  return  createLong(str);  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  return  createLong(str);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createLong(str);	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	601	None
2113	[BUG]  [BUGGY]  if(decPos  <  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  <  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1682	None
2114	[BUG]  [BUGGY]  if(decPos  >  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  >  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1682	None
2138	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.length()!=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None
2161	[BUG]  [BUGGY]  final  Arrays.sort(str);  [CE]  <identifier>  expected  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  Arrays.sort(str);  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str);	      Arrays.sort(str);    	non-compiled	[CE]  <identifier>  expected	1743	None
2162	[BUG]  [BUGGY]  Arrays.sort(str,  null);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  Arrays.sort(str,  null);  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str,  null);	      Arrays.sort(str);    	non-compiled	[CE]  illegal  start  of  expression	1743	None
2186	[BUG]  [BUGGY]  Arrays.sort(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  Arrays.sort(str,  null);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Arrays.sort(str,  null);	      Arrays.sort(str);    	non-compiled	[CE]  illegal  start  of  type	61	None
2233	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	291	None
2234	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	291	None
2258	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  +=  str.charAt(pfxLen  +  1);  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  str.charAt(pfxLen  +  1);	      pfxLen    +=    str.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	458	None
2281	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.parseInt(str);  }  if(str  ==  null)  {  return  Integer.parseInt(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.parseInt(str);  }  if(str  ==  null)  {  return  Integer.parseInt(str);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.parseInt(str);    }    if(str  ==  null)  {  return  Integer.parseInt(str);  }	  	non-compiled	[CE]  illegal  start  of  expression	169	None
2282	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.parseInt(str);  }  if(str  ==  null)  {  return  Integer.parseInt(str);  >>  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.parseInt(str);  }  if(str  ==  null)  {  return  Integer.parseInt(str);  >>  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.parseInt(str);    }    if(str  ==  null)  {  return  Integer.parseInt(str);  >>	  	non-compiled	[CE]  illegal  start  of  expression	169	None
2283	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.parseInt(str);  }  if(str  ==  null)  {  return  Integer.parseInt(str);  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.parseInt(str);  }  if(str  ==  null)  {  return  Integer.parseInt(str);  [Delete]  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.parseInt(str);    }    if(str  ==  null)  {  return  Integer.parseInt(str);  [Delete]	  	non-compiled	[CE]  illegal  start  of  expression	169	None
2305	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  null);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  Arrays.sort(hex_prefixes,  null);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  null);	      Arrays.sort(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	901	None
2306	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  str);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  Arrays.sort(hex_prefixes,  str);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  str);	      Arrays.sort(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	901	None
2329	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length()  -  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length()  -  pfxLen);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen.length()  -  pfxLen);	      final    String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	146	None
2330	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()  -  pfxLen);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()  -  pfxLen);	      final    String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	146	None
2353	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {    [BUGGY]  [Delete]  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	[Delete]	      if(str.endsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	674	None
2354	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {    [BUGGY]  return  createInteger(str);  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	return  createInteger(str);	      if(str.endsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	674	None
2378	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  }  else  {  pfxLen  +=  pfx.charAt(pfxLen);  }  [CE]  ';'  expected  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  }  else  {  pfxLen  +=  pfx.charAt(pfxLen);  }  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  }  else  {  pfxLen  +=  pfx.charAt(pfxLen);  }	      pfxLen    +=    pfx.charAt(pfxLen));    	non-compiled	[CE]  ';'  expected	1262	None
2402	[BUG]  [BUGGY]  if(pfxLen  <  2)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(pfxLen  <  2)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(pfxLen  <  2)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }	      if(hexDigits    <    2)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createPos(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1201	None
2425	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  [Delete]  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	[Delete]	      if(pfxLen    >    0)    {    if(str.startsWith(pfx))    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	219	None
2426	[BUG]  [BUGGY]  return  createLong(str);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  return  createLong(str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createLong(str);	      if(pfxLen    >    0)    {    if(str.startsWith(pfx))    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	219	None
2474	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  too  many  for  An  int  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  >  8)  {  //  too  many  for  An  int  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  >  8)  {  //  too  many  for  An  int  return  createLong(str);  }	  if(hexDigits    >    8)    {    //    too    many    for    An    int    return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	782	None
2497	[BUG]  [BUGGY]  final  String  pfx  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  final  String  pfx  =  str.length();  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.length();	      while(str.startsWith(hex_prefixes))    {    final    String    pfx    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	387	None
2522	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {    [BUGGY]  }  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	}	      if(str.endsWith(pfx))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	673	None
2545	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  1);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  pfx.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	75	None
2546	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  for(int  i  =  0;  i  <  pfx.length();  ++i)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  >  0)  {  for(int  i  =  0;  i  <  pfx.length();  ++i)  {  return  createInteger(str);  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  for(int  i  =  0;  i  <  pfx.length();  ++i)  {  return  createInteger(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	75	None
2594	[BUG]  [BUGGY]  while(str.endsWith(hex_prefixes))  {  return  null;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  while(str.endsWith(hex_prefixes))  {  return  null;  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	while(str.endsWith(hex_prefixes))  {  return  null;	      while(str.startsWith(hex_prefixes))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	385	None
2617	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  [Delete]  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	[Delete]	      if(hexDigits    <    1)    {    if(hexDigits    ==    Integer.MIN_VALUE)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1681	None
2618	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	}	      if(hexDigits    <    1)    {    if(hexDigits    ==    Integer.MIN_VALUE)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1681	None
2641	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  if(pfxLen  >  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  >  0)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	267	None
2689	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  [Delete]  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	[Delete]	  if(pfxLen    ==    0)    {    break;    }    else    if(pfx.charAt(pfxLen    -    1)    ==    '0')    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1382	None
2690	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  }  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	}	  if(pfxLen    ==    0)    {    break;    }    else    if(pfx.charAt(pfxLen    -    1)    ==    '0')    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1382	None
2713	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  int  pfxLen  =  str.length();  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =  str.length();	      int    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	625	None
2738	[BUG]  [BUGGY]  if(pfx.endsWith( "# "))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.endsWith( "# "))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "# "))  {	  if(pfx.startsWith(   "#   "))    {    	non-compiled	[CE]  illegal  start  of  expression	661	None
2762	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  }    	non-compiled	[CE]  illegal  start  of  expression	98	None
2785	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    if(str  ==  null)  {  return  Integer.valueOf(str.length());  }	  	non-compiled	[CE]  illegal  start  of  expression	171	None
2786	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  {  return  Integer.valueOf(str.length());  >>  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  {  return  Integer.valueOf(str.length());  >>  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    if(str  ==  null)  {  return  Integer.valueOf(str.length());  >>	  	non-compiled	[CE]  illegal  start  of  expression	171	None
2787	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  {  return  Integer.valueOf(str.length());  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  {  return  Integer.valueOf(str.length());  [Delete]  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    if(str  ==  null)  {  return  Integer.valueOf(str.length());  [Delete]	  	non-compiled	[CE]  illegal  start  of  expression	171	None
2809	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  break;  }  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  break;  }	      if(hex_prefixes!=    null)    {    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	506	None
2834	[BUG]  [BUGGY]  final  char[]  hexDigits  =  str.toCharArray();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  final  char[]  hexDigits  =  str.toCharArray();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	final  char[]  hexDigits  =  str.toCharArray();	      final    String[]    hexDigits    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None
2882	[BUG]  [BUGGY]  if(pfxLen  <  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(pfxLen  <  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(pfxLen  <  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }	      if(hexDigits    <    1)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createPos(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1203	None
2930	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxLen);	      final    String    str    =    pfx.substring(pfxLen);    	non-compiled	[CE]  illegal  start  of  type	145	None
2953	[BUG]  [BUGGY]  final  int  pfxLen  =  hex_prefixes.length;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  final  int  pfxLen  =  hex_prefixes.length;  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  hex_prefixes.length;	  final    int    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	434	None
2954	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  final  int  pfxLen  =  str.length();  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  str.length();	  final    int    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	434	None
2978	[BUG]  [BUGGY]  String  str  =  pfxLen.substring(0,  str.length()  -  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  String  str  =  pfxLen.substring(0,  str.length()  -  pfxLen);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfxLen.substring(0,  str.length()  -  pfxLen);	      String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	122	None
3001	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	481	None
3002	[BUG]  [BUGGY]  if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  decPos)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	481	None
3025	[BUG]  [BUGGY]      if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]      if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	        if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None
3027	[BUG]  [BUGGY]      if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  >>  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]      if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  >>  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	        if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  >>	  	non-compiled	[CE]  illegal  start  of  expression	27	None
3050	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  return  createInteger(str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createInteger(str);	      if(pfxLen    >    0)    {    if(str.startsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	218	None
3073	[BUG]  [BUGGY]  break  +=  pfx.length();  [CE]  ';'  expected  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  break  +=  pfx.length();  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  +=  pfx.length();	  break    +=    pfxLen;    	non-compiled	[CE]  ';'  expected	266	None
3098	[BUG]  [BUGGY]  for(final  String  pfx  :  dec)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  for(final  String  pfx  :  dec)  {  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfx  :  dec)  {	  for(final    String    pfx    :    str)    {    	non-compiled	[CE]  illegal  start  of  expression	241	None
3121	[BUG]  [BUGGY]  if(mant  ==  null)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(mant  ==  null)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null)  {  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }	      if(mant    ==    null)    {    String    str    =    mant.substring(0,    mant.length()    -    1);    if(str.charAt(0)    ==    '/')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1323	None
3146	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.charAt(1));  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.charAt(1));  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.charAt(1));	      final    String[]    hex_prefixes    =    str.get(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	626	None
3170	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  [BUGGY]    return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  null  ||  str.length()!=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	410	None
3193	[BUG]  [BUGGY]  for(final  String  pfx  :  hex_prefixes,  pfxLen)  {  [CE]  ')'  expected  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  for(final  String  pfx  :  hex_prefixes,  pfxLen)  {  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  hex_prefixes,  pfxLen)  {	      final    String[]    hexDigits    =    str.toCharArray();    	non-compiled	[CE]  ')'  expected	2	None
3194	[BUG]  [BUGGY]  for(final  String  pfxLen  :  hex_prefixes)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  for(final  String  pfxLen  :  hex_prefixes)  {  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  :  hex_prefixes)  {	      final    String[]    hexDigits    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	2	None
3217	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  for(int  pfxLen  =  0;  pfxLen  <  pfx.length();  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  if(hex_prefixes  ==  null)  {  for(int  pfxLen  =  0;  pfxLen  <  pfx.length();  break;  }  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(hex_prefixes  ==  null)  {  for(int  pfxLen  =  0;  pfxLen  <  pfx.length();  break;  }	      if(hex_prefixes!=    null)    {    for(int    pfxLen    =    0;    pfxLen    <    pfx.length();    break;    }    	non-compiled	[CE]  illegal  start  of  expression	507	None
1	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  ==  1)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  ==  1)  {  return  createLong(str);  }  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  ==  1)  {  return  createLong(str);  }	      if(hexDigits    <    16)    {    if(hexDigits    ==    1)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	531	None
61	[BUG]  [BUGGY]  if(str.length()  ==  1)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str.charAt(0));  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  1)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str.charAt(0));  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  1)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str.charAt(0));  }	      if(str.length()    ==    0)    {    if(str.charAt(0)    ==    '-')    {    return    Integer.valueOf(str.charAt(0));    }    	non-compiled	[CE]  illegal  start  of  expression	841	None
62	[BUG]  [BUGGY]  if(str.length()  ==  2)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str.charAt(0));  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  2)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str.charAt(0));  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  2)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str.charAt(0));  }	      if(str.length()    ==    0)    {    if(str.charAt(0)    ==    '-')    {    return    Integer.valueOf(str.charAt(0));    }    	non-compiled	[CE]  illegal  start  of  expression	841	None
121	[BUG]  [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen));  [CE]  ';'  expected  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen));  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  pfx.charAt(pfxLen));	      pfxLen    +=    pfx.charAt(pfxLen));    	non-compiled	[CE]  ';'  expected	1262	None
122	[BUG]  [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen  -  1));  [CE]  ';'  expected  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen  -  1));  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  pfx.charAt(pfxLen  -  1));	      pfxLen    +=    pfx.charAt(pfxLen));    	non-compiled	[CE]  ';'  expected	1262	None
302	[BUG]  [BUGGY]  break  +=  8;  [CE]  ';'  expected  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  break  +=  8;  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  +=  8;	  break    +=    pfxLen;    	non-compiled	[CE]  ';'  expected	266	None
362	[BUG]  [BUGGY]  if(mant  ==  null)  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(mant  ==  null)  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null)  {	      if(mant    ==    null)    {    String    str    =    mant.substring(0,    mant.length()    -    1);    if(str.charAt(0)    ==    '/')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1323	None
421	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  0)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	313	None
422	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	313	None
482	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  if(str.endsWith(pfx))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  >  0)  {  if(str.endsWith(pfx))  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  if(str.endsWith(pfx))  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    if(str.startsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	218	None
541	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  {   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    <<       "0x   ",       "0X   ",       "-0x   ",       "-0X   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  illegal  start  of  expression	1622	None
602	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length()  -  1);  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	      if(mant    ==    null)    {    String    str    =    mant.substring(0,    mant.length()    -    1);    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1322	None
722	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length  +  1);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str.length  +  1);	      Arrays.sort(hex_prefixes,    0,    str.length);    	non-compiled	[CE]  illegal  start  of  expression	903	None
782	[BUG]  [BUGGY]  long  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  long  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length;  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	long  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length;	  int    pfxLen    =(hex_prefixes    ==    null)?    0    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	1442	None
842	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String  pfx  =  str.charAt(0);  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.charAt(0);	      final    String    pfx    =    str.toString();    	non-compiled	[CE]  illegal  start  of  expression	1742	None
1022	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  for(final  String  pfx  :  hex_prefixes)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  if(hex_prefixes  ==  null)  {  for(final  String  pfx  :  hex_prefixes)  {  break;  }  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(hex_prefixes  ==  null)  {  for(final  String  pfx  :  hex_prefixes)  {  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	243	None
1082	[BUG]  [BUGGY]  final  String  pfx  =  str.toString();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  final  String  pfx  =  str.toString();  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	final  String  pfx  =  str.toString();	      	non-compiled	[CE]  illegal  start  of  type	243	None
1142	[BUG]  [BUGGY]  pfxLen  -=  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  -=  str.length();  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.length();	      pfxLen    +=    str.length();    	non-compiled	[CE]  illegal  start  of  expression	457	None
1202	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  false);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  Arrays.sort(hex_prefixes,  false);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  false);	      Arrays.sort(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	901	None
1261	[BUG]  [BUGGY]  if(hexDigits  <  2)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(numDecimals  >  10)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  2)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(numDecimals  >  10)  {  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  2)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(numDecimals  >  10)  {  return  createLong(str);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	97	None
1262	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(numDecimals  >  10)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  1)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(numDecimals  >  10)  {  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(numDecimals  >  10)  {  return  createLong(str);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	97	None
1321	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()),  pfxLen);	      Arrays.sort(str.getChars(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	543	None
1322	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen));  [CE]  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen));  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()),  pfxLen));	      Arrays.sort(str.getChars(0,    str.length()    -    1));    	non-compiled	[CE]  	543	None
1502	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1683	None
1622	[BUG]  [BUGGY]  if(pfx.startsWith( "# ")||  pfx.startsWith( "-0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.startsWith( "# ")||  pfx.startsWith( "-0 "))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "# ")||  pfx.startsWith( "-0 "))  {	  if(pfx.startsWith(   "#   "))    {    	non-compiled	[CE]  illegal  start  of  expression	661	None
1742	[BUG]  [BUGGY]  Arrays.sort(str.length());  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  Arrays.sort(str.length());  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.length());	      Arrays.sort(str);    	non-compiled	[CE]  illegal  start  of  expression	1743	None
1802	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  Character.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)||  Character.isDigit(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	601	None
1862	[BUG]  [BUGGY]  final  Integer  int  =  Integer.valueOf(str);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  final  Integer  int  =  Integer.valueOf(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.valueOf(str);	      final    Integer    int    =    Integer.decode(str);    	non-compiled	[CE]  illegal  start  of  expression	721	None
1922	[BUG]  [BUGGY]  if(str  ==  null  ||  str.indexOf('.')  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  if(str  ==  null  ||  str.indexOf('.')  ==  0)  {  [BUGGY]    return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  null  ||  str.indexOf('.')  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	410	None
1982	[BUG]  [BUGGY]  for(final  String  d  :  str.charAt(0))  {  if(!(lastChar  ==  null  ||  lastChar.length()  ==  0))  {  return  createNumber(d);  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  for(final  String  d  :  str.charAt(0))  {  if(!(lastChar  ==  null  ||  lastChar.length()  ==  0))  {  return  createNumber(d);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  d  :  str.charAt(0))  {  if(!(lastChar  ==  null  ||  lastChar.length()  ==  0))  {  return  createNumber(d);  }	      for(final    String    d    :    str.values())    {    if(!(lastChar    ==    null    ||    lastChar.length()    ==    0))    {    return    createNumber(d);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None
2042	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen);	      final    String    str    =    pfx.substring(pfxLen);    	non-compiled	[CE]  illegal  start  of  type	145	None
2102	[BUG]  [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  :  pfxLen;  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  :  pfxLen;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx  ==  null)?  str.length()  :  pfxLen;	      int    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	217	None
2161	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen));  [CE]  ';'  expected  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  -=  str.charAt(pfxLen));  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen));	      pfxLen    +=    str.charAt(pfxLen));    	non-compiled	[CE]  ';'  expected	459	None
2281	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	481	None
2341	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	483	None
2401	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  createL  [CE]  ';'  expected  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  createL  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getNumerics()  ==  0)  {  return  createL	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    if(e.getNumerics()    ==    0)    {    return    createLong(    	non-compiled	[CE]  ';'  expected	423	None
2462	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  <  1)  {  return  createBigDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  <  1)  {  return  createBigDecimal(str);  }  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  if(hexDigits  <  1)  {  return  createBigDecimal(str);  }	      if(pfxLen    >    0)    {    if(hexDigits    <    1)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	698	None
2582	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1682	None
2702	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  string.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)||  string.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(StringUtils.isBlank(str)||  string.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	602	None
2821	[BUG]  [BUGGY]  final  String  hex  =  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String  hex  =  str.charAt(0);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.charAt(0);	      	non-compiled	[CE]  illegal  start  of  expression	291	None
2822	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  1);  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	291	None
2942	[BUG]  [BUGGY]  }  else  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  not  a  statement  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  }  else  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	}  else  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  [Delete]    else    if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	314	None
3001	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen),  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.substring(pfxLen),  hex_prefixes);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen),  hex_prefixes);	      Arrays.sort(str.substring(pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	542	None
3122	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  ==  32)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  ==  32)  {  return  createLong(str);  }  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  ==  32)  {  return  createLong(str);  }	      if(hexDigits    <    16)    {    if(hexDigits    ==    32)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	530	None
3182	[BUG]  [BUGGY]  while(str.endsWith(hex_prefixes))  {  final  String  pfx  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  while(str.endsWith(hex_prefixes))  {  final  String  pfx  =  str.length();  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	while(str.endsWith(hex_prefixes))  {  final  String  pfx  =  str.length();	      while(str.startsWith(hex_prefixes))    {    final    String    pfx    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	387	None
3242	[BUG]  [BUGGY]  return  createLong(str,  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  return  createLong(str,  hexDigits);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  hexDigits);	      return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	699	None
3302	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()  ==  0)  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()  ==  0)  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str    ==    null    ||    str.length()    ==    0)    {    if(str  ==  null  ||  str.length()  ==  0)  }	  	non-compiled	[CE]  illegal  start  of  expression	194	None
3303	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()  ==  0)!=  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  if(str  ==  null  ||  str.length()  ==  0)!=  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str    ==    null    ||    str.length()    ==    0)    {    if(str  ==  null  ||  str.length()  ==  0)!=	  	non-compiled	[CE]  illegal  start  of  expression	194	None
3483	[BUG]  [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  return  Integer.valueOf(str.length());  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]      if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  if(str  ==  null)  return  Integer.valueOf(str.length());  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	        if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    if(str  ==  null)  return  Integer.valueOf(str.length());  }	  	non-compiled	[CE]  illegal  start  of  expression	171	None
3722	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(str.startsWith(pfx))  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(str.startsWith(pfx))  {  return  createLong(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(str.charAt(0)  ==  '-')  {  if(str.startsWith(pfx))  {  return  createLong(str);  }	      if(pfxLen    >    0)    {    if(str.startsWith(pfx))    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	219	None
3782	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length());  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length());  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.length());	      final    String[]    hex_prefixes    =    str.get(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	626	None
3902	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1);  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen  +  1);	      final    String    str    =    pfx.substring(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  type	147	None
3962	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }	      if(hexDigits    <    2)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1202	None
4081	[BUG]  [BUGGY]  if(dec  ==  null)  {  int  decPos  =  pfx.length();  if(decPos  <  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(dec  ==  null)  {  int  decPos  =  pfx.length();  if(decPos  <  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null)  {  int  decPos  =  pfx.length();  if(decPos  <  0)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	75	None
4082	[BUG]  [BUGGY]  if(dec  ==  null)  {  int  decPos  =  pfx.length()  -  1;  if(decPos  <  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(dec  ==  null)  {  int  decPos  =  pfx.length()  -  1;  if(decPos  <  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null)  {  int  decPos  =  pfx.length()  -  1;  if(decPos  <  0)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	75	None
4141	[BUG]  [BUGGY]  int  pfxLen  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  int  pfxLen  =  str.length()  -  1;  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =  str.length()  -  1;	      int    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	902	None
4202	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  pfxLen);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0,  str.length()  -  pfxLen);	      String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	122	None
4261	[BUG]  [BUGGY]  return  createLong(str,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  return  createLong(str,  pfxLen);  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createLong(str,  pfxLen);	      return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	1263	None
4322	[BUG]  [BUGGY]  return  Integer.toLongBits(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  return  Integer.toLongBits(str,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  Integer.toLongBits(str,  Integer.MAX_VALUE);	  return    Integer.toLongBits(str);    	non-compiled	[CE]  illegal  start  of  expression	50	None
4382	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length()),  INTEGER_ZERO);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  System.arraycopy(str,  0,  str.length()),  INTEGER_ZERO);  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length()),  INTEGER_ZERO);	      if(str.length()    ==    0)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None
4442	[BUG]  [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  -0  :  hex_prefixes.length;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};    [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  -0  :  hex_prefixes.length;  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =(hex_prefixes  ==  null)?  -0  :  hex_prefixes.length;	  final    int    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	434	None
4502	[BUG]  [BUGGY]  if(pfx.startsWith(hex))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.startsWith(hex))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex))  {	  if(pfx.startsWith(str))    {    	non-compiled	[CE]  illegal  start  of  expression	553	None
4561	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1082	None
4562	[BUG]  [BUGGY]  if(hexDigits  <  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  if(hexDigits  <  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]    return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1082	None
4622	[BUG]  [BUGGY]  return  createLong(str,  mant);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  return  createLong(str,  mant);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  mant);	      return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	1321	None
4681	[BUG]  [BUGGY]  Arrays.sort(str.getAlternatives(),  null);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  Arrays.sort(str.getAlternatives(),  null);  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getAlternatives(),  null);	      Arrays.sort(str.getAlternatives());    	non-compiled	[CE]  illegal  start  of  expression	1741	None
4742	[BUG]  [BUGGY]  int  pfxLen  =  str.length()  -  1;  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  int  pfxLen  =  str.length()  -  1;  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	int  pfxLen  =  str.length()  -  1;	  for(final    String    pfx    :    str)    {    	non-compiled	[CE]  illegal  start  of  type	241	None
4862	[BUG]  [BUGGY]  String  str  =(String)mant.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  String  str  =(String)mant.substring(0,  pfxLen);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)mant.substring(0,  pfxLen);	      String    str    =(String)pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	123	None
4922	[BUG]  [BUGGY]  pfxLen  -=  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  -=  pfx.length();  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  pfx.length();	      pfxLen    +=    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	1261	None
4981	[BUG]  [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen);  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  pfx.charAt(pfxLen);	      pfxLen    +=    str.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	458	None
4982	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  -=  str.charAt(pfxLen);  [BUGGY]    break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen);	      pfxLen    +=    str.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	458	None
5162	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	      String    str    =    pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	122	None
5221	[BUG]  [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen)-  1;  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  pfx.charAt(pfxLen)-  1;	      	non-compiled	[CE]  illegal  start  of  expression	267	None
5282	[BUG]  [BUGGY]  if(str.length()  ==  10)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.decode(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  10)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.decode(str);  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  10)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.decode(str);  }	      if(str.length()    ==    0)    {    if(str.charAt(0)    ==    '-')    {    return    Integer.decode(str);    }    	non-compiled	[CE]  illegal  start  of  expression	842	None
5402	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  str.length();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  str.length();  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(pfx  ==  null)?  pfx.length()  :  str.length();	  if(StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	602	None
5582	[BUG]  [BUGGY]  for(final  String  pfx  :  hex_prefixes)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  for(final  String  pfx  :  hex_prefixes)  {  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  hex_prefixes)  {	      final    String[]    hexDigits    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	2	None
5702	[BUG]  [BUGGY]  if(str  ==  null  ||  str.charAt(0)  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.charAt(0)  ==  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  str.charAt(0)  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None
5762	[BUG]  [BUGGY]  return  createLong(str,  pfx);  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  return  createLong(str,  pfx);  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createLong(str,  pfx);	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  type	601	None
5822	[BUG]  [BUGGY]  Arrays.sort(str.length());  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Arrays.sort(str.length());  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.length());	      Arrays.sort(str);    	non-compiled	[CE]  illegal  start  of  type	1022	None
5881	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  if(e.getNumerics()  ==  [CE]  illegal  start  of  expression  [CONTEXT]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;    [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  if(e.getNumerics()  ==  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  if(e.getNumerics()  ==  	      for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    0,    pfxLen);    if(e.getNumerics()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	421	None
5942	[BUG]  [BUGGY]  final  static  String[]  hexDigits  =  str.toCharArray();  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  final  static  String[]  hexDigits  =  str.toCharArray();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	final  static  String[]  hexDigits  =  str.toCharArray();	      final    String[]    hexDigits    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	2	None
6002	[BUG]  [BUGGY]  final  int  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  final  int  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;  [BUGGY]    if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	577	None
6061	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  pfxDigits  =  str.length()  -  pfxLen;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  pfxDigits  =  str.length()  -  pfxLen;  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  pfxDigits  =  str.length()  -  pfxLen;  }	  if(pfxLen    >    0)    {    //    we    have    a    hex    number    final    int    hexDigits    =    str.length()    -    pfxLen;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None
6122	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  final  Integer  str  =  createInteger(str,  Integer.MIN_VALUE);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  Integer.MIN_VALUE);	      if(str    ==    null)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	170	None
6182	[BUG]  [BUGGY]  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;    [BUGGY]  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(hex_prefixes!=    null)    {    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	505	None
6301	[BUG]  [BUGGY]  if(pfx.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.startsWith( "-- "))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-- "))  {	  if(pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	662	None
6302	[BUG]  [BUGGY]  if(pfx.startsWith( "-1 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  if(pfx.startsWith( "-1 "))  {  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-1 "))  {	  if(pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	662	None
6361	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1142	None
6421	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-0x ",   "-0x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-0x   ",       "-0X   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	289	None
6422	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;  [CE]  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;  [BUGGY]    int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x   ",       "0x   ",       "-0x   ",       "-0X   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	289	None
6542	[BUG]  [BUGGY]  pfxLen  =  pfx.length()  -  1;  [CE]  illegal  start  of  type  [CONTEXT]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {    [BUGGY]  pfxLen  =  pfx.length()  -  1;  [BUGGY]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =  pfx.length()  -  1;	      pfxLen    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	1501	None
6601	[BUG]  [BUGGY]  return  createLong(str  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  return  createLong(str  +  1);  [BUGGY]    }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str  +  1);	  return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	650	None
6602	[BUG]  [BUGGY]  return  createLong(str,  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  return  createLong(str,  hexDigits);  [BUGGY]    }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str,  hexDigits);	  return    createLong(str);    	non-compiled	[CE]  illegal  start  of  expression	650	None
6662	[BUG]  [BUGGY]  if(str.length()  ==  10)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  10)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str);  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  10)  {  if(str.charAt(0)  ==  '-')  {  return  Integer.valueOf(str);  }	      if(str.length()    ==    0)    {    if(str.charAt(0)    ==    '-')    {    return    Integer.valueOf(str);    }    	non-compiled	[CE]  illegal  start  of  expression	843	None
6782	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  break;  if(pfx.charAt(pfxLen  -  1)  ==  '0')  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();    [BUGGY]  if(pfxLen  ==  0)  {  break;  if(pfx.charAt(pfxLen  -  1)  ==  '0')  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  ==  0)  {  break;  if(pfx.charAt(pfxLen  -  1)  ==  '0')  {  throw  new  NumberFormatException( " ");  }	  if(pfxLen    ==    0)    {    break;    }    else    if(pfx.charAt(pfxLen    -    1)    ==    '0')    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1382	None
6841	[BUG]  [BUGGY]  if(str  ==  null)  {  if(!Character.isWhitespace(str))  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null)  {  if(!Character.isWhitespace(str))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  if(!Character.isWhitespace(str))  {  throw  new  NumberFormatException( " ");  }	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None
6842	[BUG]  [BUGGY]  if(str  ==  null)  {  if(!Character.isJavaIdentifierPart(str))  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null)  {  if(!Character.isJavaIdentifierPart(str))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  if(!Character.isJavaIdentifierPart(str))  {  throw  new  NumberFormatException( " ");  }	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	195	None
7022	[BUG]  [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  bodied  [CE]  not  a  statement  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      if(str  ==  null)  {  return  null;  }  if(str  ==  null)  {  return  null;  bodied  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	        if(str    ==    null)    {    return    null;    }    if(str  ==  null)  {  return  null;  bodied	  	non-compiled	[CE]  not  a  statement	3	None
7082	[BUG]  [BUGGY]  int  decPos  =  pfx.length()  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {    [BUGGY]  int  decPos  =  pfx.length()  -  1;  [BUGGY]    pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	int  decPos  =  pfx.length()  -  1;	      int    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	603	None
7141	[BUG]  [BUGGY]  return  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {    [BUGGY]  return  Integer.MAX_VALUE;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE;	      if(str    ==    null)    {    if(str    ==    Integer.MIN_VALUE)    {    return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	722	None
7201	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }    [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]    return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	      if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	482	None
7321	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(hexDigits  >  10)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  1)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(hexDigits  >  10)  {  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(hexDigits  >  10)  {  return  createLong(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	99	None
7322	[BUG]  [BUGGY]  if(hexDigits  <  2)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(hexDigits  >  10)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }    [BUGGY]  if(hexDigits  <  2)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(hexDigits  >  10)  {  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  2)  {  int  numDecimals  =  str.indexOf(hexDigits);  if(hexDigits  >  10)  {  return  createLong(str);  }	      	non-compiled	[CE]  illegal  start  of  expression	99	None
7382	[BUG]  [BUGGY]  String  str  =(String)str.substring(0,  str.length()  -  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  String  str  =(String)str.substring(0,  str.length()  -  pfxLen);  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)str.substring(0,  str.length()  -  pfxLen);	      String    str    =(String)pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	121	None
7503	[BUG]  [BUGGY]      if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  if(str.length()  ==  0)  return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]      if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  if(str.length()  ==  0)  return  Integer.MAX_VALUE;  }  [BUGGY]    return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	        if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    if(str.length()  ==  0)  return  Integer.MAX_VALUE;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None
7562	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()));  [CE]  illegal  start  of  expression  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }      [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()));  [BUGGY]    final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()));	      final    String[]    hex_prefixes    =    str.get(str.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	627	None
7621	[BUG]  [BUGGY]  return  createInteger(str.charAt(0));  [CE]  illegal  start  of  type  [CONTEXT]    public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  return  createInteger(str.charAt(0));  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createInteger(str.charAt(0));	      return    createInteger(str.toString());    	non-compiled	[CE]  illegal  start  of  type	1023	None
7982	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]      final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number    [BUGGY]  if(StringUtils.isBlank(str)||  ArrayUtils.isEmpty(str))  {  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)||  ArrayUtils.isEmpty(str))  {	      String    str    =(String)pfx.substring(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	121	None
8041	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()));  [CE]  illegal  start  of  expression  [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Arrays.sort(str.substring(0,  str.length()));  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()));	      Arrays.sort(str.substring(0,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	541	None
