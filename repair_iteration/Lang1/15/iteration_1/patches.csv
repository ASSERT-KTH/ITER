bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  pfxLen  =  str.length();  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  char  pfxLen  =  str.length();  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	char  pfxLen  =  str.length();	      int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
2	[BUG]  [BUGGY]  int  pfxLen  =  str.length()  +  1;  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  int  pfxLen  =  str.length()  +  1;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =  str.length()  +  1;	      int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
3	[BUG]  [BUGGY]  int  pfxLen  =  str.length()  -  1;  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  int  pfxLen  =  str.length()  -  1;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =  str.length()  -  1;	      int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
4	[BUG]  [BUGGY]  NumberFormatException  e  =  nfe;  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  nfe;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  nfe;	      NumberFormatException    e    =    null;    	non-compiled	[CE]  ')'  expected	12	None	replace
5	[BUG]  [BUGGY]  NumberFormatException  e  =  NUMBER_FAILURE;  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  NUMBER_FAILURE;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  NUMBER_FAILURE;	      NumberFormatException    e    =    null;    	non-compiled	[CE]  ')'  expected	12	None	replace
6	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ");  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ");  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException( " ");	      NumberFormatException    e    =    null;    	non-compiled	[CE]  ')'  expected	12	None	replace
7	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  +  pfxLen;  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  hexDigits  =  str.length()  +  pfxLen;  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  hexDigits  =  str.length()  +  pfxLen;	  final    int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ')'  expected	6	None	replace
8	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  *  pfxLen;  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  hexDigits  =  str.length()  *  pfxLen;  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  hexDigits  =  str.length()  *  pfxLen;	  final    int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ')'  expected	6	None	replace
9	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  -  1;  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  hexDigits  =  str.length()  -  1;  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  hexDigits  =  str.length()  -  1;	  final    int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ')'  expected	6	None	replace
10	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  }	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length();    }    	non-compiled	[CE]  ')'  expected	8	None	replace
11	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	9	None	replace
12	[BUG]  [BUGGY]  Integer  pfxLen  =  createInteger(pfx);  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfxLen  =  createInteger(pfx);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfxLen  =  createInteger(pfx);	      Integer    pfxLen    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	10	None	replace
13	[BUG]  [BUGGY]  final  Integer  pfxLen  =  createInteger(str);  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  Integer  pfxLen  =  createInteger(str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  Integer  pfxLen  =  createInteger(str);	      Integer    pfxLen    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	10	None	replace
14	[BUG]  [BUGGY]  Integer  pfxLen  =  createInteger(0);  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfxLen  =  createInteger(0);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfxLen  =  createInteger(0);	      Integer    pfxLen    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	10	None	replace
15	[BUG]  [BUGGY]  Integer  pfxLen  =  createBigInteger(pfx);  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfxLen  =  createBigInteger(pfx);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfxLen  =  createBigInteger(pfx);	      Integer    pfxLen    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	10	None	replace
16	[BUG]  [BUGGY]  if(pfx!=  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx!=  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx!=  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
17	[BUG]  [BUGGY]  if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  ')'  expected  [FE]                  NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
18	[BUG]  [BUGGY]  if(pfx!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
19	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
20	[BUG]  [BUGGY]  if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
21	[BUG]  [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
22	[BUG]  [BUGGY]  if(pfx!=  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx!=  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx!=  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
23	[BUG]  [BUGGY]  if(pfx!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
24	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
25	[BUG]  [BUGGY]  if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx.length()  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
26	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(hex_prefixes);  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(hex_prefixes);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException(hex_prefixes);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
27	[BUG]  [BUGGY]  e  =  new  NumberFormatException(hex_prefixes);  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  e  =  new  NumberFormatException(hex_prefixes);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	e  =  new  NumberFormatException(hex_prefixes);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
28	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(hexDigits);  [CE]  ')'  expected  [FE]                  NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(hexDigits);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException(hexDigits);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
29	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(pfxLen);  [CE]  ')'  expected  [FE]                    NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(pfxLen);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException(pfxLen);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
30	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  +  1;  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  hexDigits  =  str.length()  +  1;  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  hexDigits  =  str.length()  +  1;	  final    int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
31	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length()  +  1;  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  pfxLen  =  str.length()  +  1;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  pfxLen  =  str.length()  +  1;	      final    int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
32	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length()  -  1;  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  pfxLen  =  str.length()  -  1;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  pfxLen  =  str.length()  -  1;	      final    int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
33	[BUG]  [BUGGY]  final  char  pfxLen  =  str.length();  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  char  pfxLen  =  str.length();  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  char  pfxLen  =  str.length();	      final    int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
34	[BUG]  [BUGGY]  pfxLen  =  str.length()  +  1;  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  pfxLen  =  str.length()  +  1;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  str.length()  +  1;	      pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
35	[BUG]  [BUGGY]  pfxLen  =  str.length()  -  1;  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  pfxLen  =  str.length()  -  1;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  str.length()  -  1;	      pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
36	[BUG]  [BUGGY]  pfxLen  =  str.length()  +  2;  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  pfxLen  =  str.length()  +  2;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  str.length()  +  2;	      pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
37	[BUG]  [BUGGY]  Integer  pfx  =  createInteger(pfx);  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createInteger(pfx);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createInteger(pfx);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
38	[BUG]  [BUGGY]  Integer  pfx  =  createLong(pfx);  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createLong(pfx);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createLong(pfx);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
39	[BUG]  [BUGGY]  Integer  pfx  =  createInteger(pfxLen);  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createInteger(pfxLen);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createInteger(pfxLen);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
40	[BUG]  [BUGGY]  Integer  pfx  =  createBigInteger(pfx);  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createBigInteger(pfx);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createBigInteger(pfx);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
41	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  hex_prefixes);  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str,  hex_prefixes);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException(str,  hex_prefixes);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
42	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length()  -  2;  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  final  int  pfxLen  =  str.length()  -  2;  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  int  pfxLen  =  str.length()  -  2;	      final    int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
43	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	9	None	replace
44	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  }	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	9	None	replace
45	[BUG]  [BUGGY]  Integer  pfxLen  =  createBigInteger(str);  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfxLen  =  createBigInteger(str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfxLen  =  createBigInteger(str);	      Integer    pfxLen    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	10	None	replace
46	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfx  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfx  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfx  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
47	[BUG]  [BUGGY]  if(hex_prefixes!=  null)  {  if(pfx  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes!=  null)  {  if(pfx  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes!=  null)  {  if(pfx  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
48	[BUG]  [BUGGY]  if(hexDigits  ==  null)  {  final  int  hexDigits  =  str.length();  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hexDigits  ==  null)  {  final  int  hexDigits  =  str.length();  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hexDigits  ==  null)  {  final  int  hexDigits  =  str.length();  }	  final    int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
49	[BUG]  [BUGGY]  Integer  pfx  =  createBigInteger(str);  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createBigInteger(str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createBigInteger(str);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
50	[BUG]  [BUGGY]  Integer  pfx  =  createInteger(0);  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createInteger(0);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createInteger(0);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
51	[BUG]  [BUGGY]  Integer  pfx  =  createLong(str);  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfx  =  createLong(str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfx  =  createLong(str);	      Integer    pfx    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
52	[BUG]  [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
53	[BUG]  [BUGGY]  if(lastChar  ==  ')')  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  ')'  expected  [FE]                  NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(lastChar  ==  ')')  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(lastChar  ==  ')')  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
54	[BUG]  [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  }  [CE]  ')'  expected  [FE]                    NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(lastChar  ==  '.')  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
55	[BUG]  [BUGGY]  pfxLen  =  str.charAt(0);  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  pfxLen  =  str.charAt(0);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  str.charAt(0);	      pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
56	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfx  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfx  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfx  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
57	[BUG]  [BUGGY]  if(hex_prefixes!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
58	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
59	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
60	[BUG]  [BUGGY]  if(hex_prefixes!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes!=  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
61	[BUG]  [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(lastChar  ==  '.')  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(lastChar  ==  '.')  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
62	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  int  hexDigits  =  str.length();  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  <  =  0)  {  final  int  hexDigits  =  str.length();  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  <  =  0)  {  final  int  hexDigits  =  str.length();  }	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length();    }    	non-compiled	[CE]  ')'  expected	8	None	replace
63	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }	      final    int    pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
64	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  final  int  hexDigits  =  str.length();  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hexDigits  <  0)  {  final  int  hexDigits  =  str.length();  }  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hexDigits  <  0)  {  final  int  hexDigits  =  str.length();  }	  final    int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
65	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  }  else  {  final  int  hexDigits  =  hex_prefixes.length()  -  pfxLen;  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  }  else  {  final  int  hexDigits  =  hex_prefixes.length()  -  pfxLen;  [BUGGY]    final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  }  else  {  final  int  hexDigits  =  hex_prefixes.length()  -  pfxLen;	  final    int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ')'  expected	6	None	replace
66	[BUG]  [BUGGY]  pfxLen  =  str.last();  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  pfxLen  =  str.last();  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  str.last();	      pfxLen    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
67	[BUG]  [BUGGY]  if(pfx  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
68	[BUG]  [BUGGY]  if(pfx  <  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx  <  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx  <  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  ==  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    ==    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
69	[BUG]  [BUGGY]  if(pfx!=  null)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx!=  null)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx!=  null)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
70	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [CE]  ')'  expected  [FE]                  NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfxLen  ==  1)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  1)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  break;  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    break;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
71	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
72	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]                NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hex_prefixes  ==  null)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
73	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [CE]  ')'  expected  [FE]                  NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(hexDigits  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hexDigits  ==  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(pfxLen);  }	      if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(pfxLen);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
74	[BUG]  [BUGGY]  if(pfx  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx  ==  null)  {  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
75	[BUG]  [BUGGY]  if(pfx  <  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  if(pfx  <  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx  <  0)  {  final  int  pfxLen  =  str.length();  if(pfxLen  >  0)  {  return  createInteger(str);  }	      if(pfxLen    >    0)    {    final    int    pfxLen    =    str.length();    if(pfxLen    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	15	None	replace
76	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(hex_prefixes,  str);  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(hex_prefixes,  str);  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException(hex_prefixes,  str);	      NumberFormatException    e    =    new    NumberFormatException(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
77	[BUG]  [BUGGY]  Integer  pfxLen  =  createInteger(str.length());  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  Integer  pfxLen  =  createInteger(str.length());  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Integer  pfxLen  =  createInteger(str.length());	      Integer    pfxLen    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	10	None	replace
78	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  pfxLen));  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]    }  final  String[]  hex_prefixes  =  {   "0x   ",     "0X   ",     "-0x   ",     "-0X   ",     "#   ",     "-#   "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }    [BUGGY]  NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  pfxLen));  [BUGGY]    if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	NumberFormatException  e  =  new  NumberFormatException(str.substring(0,  pfxLen));	      NumberFormatException    e    =    null;    	non-compiled	[CE]  ')'  expected	12	None	replace
