bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
2	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
3	[BUG]  [BUGGY]  final  char  pfxLen  =  str.length()  +  1;  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  pfxLen  =  str.length()  +  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfxLen  =  str.length()  +  1;	  final    char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	42	None	replace
4	[BUG]  [BUGGY]  final  String  pfxLen  =  str.length();  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  pfxLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfxLen  =  str.length();	  final    char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	42	None	replace
5	[BUG]  [BUGGY]  final  char  pfxLen  =  str.length()  -  1;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  pfxLen  =  str.length()  -  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfxLen  =  str.length()  -  1;	  final    char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	42	None	replace
6	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
7	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
8	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
9	[BUG]  [BUGGY]  if(pfxLen  >=  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  >=  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >=  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen!=    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
10	[BUG]  [BUGGY]  Integer  pfxLen  =  str.length();  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  pfxLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  pfxLen  =  str.length();	  int    pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
11	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(0);	  Integer    str    =    createInteger(pfx);    	non-compiled	[CE]  ';'  expected	23	None	replace
12	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen  -  1);  pfxLen  =  pfx.length();  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen  -  1);  pfxLen  =  pfx.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen  -  1);  pfxLen  =  pfx.length();  }	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
13	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen  -  1);  pfxLen  +=  pfx.length();  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen  -  1);  pfxLen  +=  pfx.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen  -  1);  pfxLen  +=  pfx.length();  }	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
14	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  pfxLen  +=  str.length();  }  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  pfxLen  +=  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  pfxLen  +=  str.length();  }	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
15	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(hex_prefixes    ==    null)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
16	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(  [CE]  ')'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	72	None	replace
17	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
18	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x ",   "# ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x ",   "# ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x ",   "# ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
19	[BUG]  [BUGGY]  Integer  str  =  createInteger(pfx,  pfxLen);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(pfx,  pfxLen);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(pfx,  pfxLen);	  Integer    str    =    createInteger(str,    pfxLen);    	non-compiled	[CE]  ';'  expected	69	None	replace
20	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str,  pfxLen);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createBigInteger(str,  pfxLen);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createBigInteger(str,  pfxLen);	  Integer    str    =    createInteger(str,    pfxLen);    	non-compiled	[CE]  ';'  expected	69	None	replace
21	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  0);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str,  0);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str,  0);	  Integer    str    =    createInteger(str,    pfxLen);    	non-compiled	[CE]  ';'  expected	69	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  pfxLen  +  1);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str,  pfxLen  +  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str,  pfxLen  +  1);	  Integer    str    =    createInteger(str,    pfxLen);    	non-compiled	[CE]  ';'  expected	69	None	replace
23	[BUG]  [BUGGY]  final  char  hexDigits  =  str.charAt(0);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.charAt(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.charAt(0);	  final    int    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ';'  expected	67	None	replace
24	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(0);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  char  hexDigits  =  str.charAt(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	char  hexDigits  =  str.charAt(0);	  final    int    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ';'  expected	67	None	replace
25	[BUG]  [BUGGY]  final  int  hexDigits  =  str.charAt(pfxLen);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexDigits  =  str.charAt(pfxLen);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.charAt(pfxLen);	  final    int    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ';'  expected	67	None	replace
26	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
27	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
28	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(hexLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	47	None	replace
29	[BUG]  [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
30	[BUG]  [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
31	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    <    =    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
32	[BUG]  [BUGGY]  final  int  pfxDigits  =  str.length()  *  hexLen;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxDigits  =  str.length()  *  hexLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxDigits  =  str.length()  *  hexLen;	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
33	[BUG]  [BUGGY]  final  int  pfxDigits  =  str.length()  +  hexLen;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxDigits  =  str.length()  +  hexLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxDigits  =  str.length()  +  hexLen;	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
34	[BUG]  [BUGGY]  final  char  pfxDigits  =  str.length()  /  hexLen;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  pfxDigits  =  str.length()  /  hexLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfxDigits  =  str.length()  /  hexLen;	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
35	[BUG]  [BUGGY]  final  int  pfxDigits  =  str.length();  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxDigits  =  str.length();	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
36	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length()  +  pfxLen;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxLen  =  str.length()  +  pfxLen;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxLen  =  str.length()  +  pfxLen;	  final    int    pfxLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	40	None	replace
37	[BUG]  [BUGGY]  final  int  pfxLen  =  str.length()  *  pfxLen;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxLen  =  str.length()  *  pfxLen;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxLen  =  str.length()  *  pfxLen;	  final    int    pfxLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	40	None	replace
38	[BUG]  [BUGGY]  final  char  pfxLen  =  str.length()  -  pfxLen;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  pfxLen  =  str.length()  -  pfxLen;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfxLen  =  str.length()  -  pfxLen;	  final    int    pfxLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	40	None	replace
39	[BUG]  [BUGGY]  final  String  hexDigits  =  str.substring(0,  str.length()  -  1);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.substring(0,  str.length()  -  1);	  final    String    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	51	None	replace
40	[BUG]  [BUGGY]  final  String  hexDigits  =  str.charAt(0);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.charAt(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.charAt(0);	  final    String    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	51	None	replace
41	[BUG]  [BUGGY]  final  String  hexDigits  =  str.charAt(pfxLen  -  1);  [CE]  ';'  expected  [FE]                        NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.charAt(pfxLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.charAt(pfxLen  -  1);	  final    String    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	51	None	replace
42	[BUG]  [BUGGY]  final  String  hexDigits  =  str.substring(pfxLen  +  1);  [CE]  ';'  expected  [FE]                          NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.substring(pfxLen  +  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.substring(pfxLen  +  1);	  final    String    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	51	None	replace
43	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "# ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "# ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "# ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
44	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    <    =    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#       "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
45	[BUG]  [BUGGY]  final  char  hexDigits  =  str.charAt(pfxLen  -  1);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.charAt(pfxLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.charAt(pfxLen  -  1);	  final    char    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	5	None	replace
46	[BUG]  [BUGGY]  final  char  hexDigits  =  str.length()  +  1;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.length()  +  1;	  final    char    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	5	None	replace
47	[BUG]  [BUGGY]  final  char  hexLen  =  str.length()  +  1;  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexLen  =  str.length()  +  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexLen  =  str.length()  +  1;	  final    char    hexLen    =    str.length();    	non-compiled	[CE]  ';'  expected	49	None	replace
48	[BUG]  [BUGGY]  final  char  hexLen  =  str.length()  -  1;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexLen  =  str.length()  -  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexLen  =  str.length()  -  1;	  final    char    hexLen    =    str.length();    	non-compiled	[CE]  ';'  expected	49	None	replace
49	[BUG]  [BUGGY]  final  String  hexLen  =  str.length();  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexLen  =  str.length();	  final    char    hexLen    =    str.length();    	non-compiled	[CE]  ';'  expected	49	None	replace
50	[BUG]  [BUGGY]  static  final  int  hexDigits  =  str.length();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  static  final  int  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	static  final  int  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  *  2  +  1;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexDigits  =  str.length()  *  2  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.length()  *  2  +  1;	  final    int    hexDigits    =    str.length()    *    2;    	non-compiled	[CE]  ';'  expected	33	None	replace
52	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexLen  =  str.length();  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  hexLen  =  str.length();  }	  if(hexLen    ==    0)    {    final    int    hexLen    =    str.length();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
53	[BUG]  [BUGGY]  if(hexLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen  ==  0)  {  final  int  pfxLen  =  str.length();  }	  if(hexLen    ==    0)    {    final    int    hexLen    =    str.length();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
54	[BUG]  [BUGGY]  final  int  hexLen  =  str.length()  +  pfxLen;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexLen  =  str.length()  +  pfxLen;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexLen  =  str.length()  +  pfxLen;	  final    int    hexLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	32	None	replace
55	[BUG]  [BUGGY]  final  int  hexLen  =  str.length()  *  pfxLen;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexLen  =  str.length()  *  pfxLen;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexLen  =  str.length()  *  pfxLen;	  final    int    hexLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	32	None	replace
56	[BUG]  [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
57	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                        NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
58	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
59	[BUG]  [BUGGY]  if(pfxLen  <  1)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "# ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  1)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "# ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  1)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x ",   "# ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
60	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  +  4;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexDigits  =  str.length()  +  4;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.length()  +  4;	  final    int    hexDigits    =    str.length()    *    4;    	non-compiled	[CE]  ';'  expected	34	None	replace
61	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  *  4  +  1;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexDigits  =  str.length()  *  4  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.length()  *  4  +  1;	  final    int    hexDigits    =    str.length()    *    4;    	non-compiled	[CE]  ';'  expected	34	None	replace
62	[BUG]  [BUGGY]  final  char  mant  =  str.charAt(str.length());  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  mant  =  str.charAt(str.length());  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  mant  =  str.charAt(str.length());	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
63	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(str.length());  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(str.length());  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(str.length());	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
64	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(hexDigits.length()  -  1);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(hexDigits.length()  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(hexDigits.length()  -  1);	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
65	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  int  pfxLen  =  str.length();  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  final  int  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  final  int  pfxLen  =  str.length();  }	  if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
66	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
67	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "# ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  [CE]  ')'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "# ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "# ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  ')'  expected	44	None	replace
68	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "# ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  [CE]  ')'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "# ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "# ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  ')'  expected	44	None	replace
69	[BUG]  [BUGGY]  final  char  mant  =  str.charAt(pfxLen  -  1);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  mant  =  str.charAt(pfxLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  mant  =  str.charAt(pfxLen  -  1);	  final    String    mant    =    str.charAt(pfxLen    -    1);    	non-compiled	[CE]  ';'  expected	35	None	replace
70	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(pfxLen  -  1  +  1);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(pfxLen  -  1  +  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(pfxLen  -  1  +  1);	  final    String    mant    =    str.charAt(pfxLen    -    1);    	non-compiled	[CE]  ';'  expected	35	None	replace
71	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(pfxLen  -  2);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(pfxLen  -  2);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(pfxLen  -  2);	  final    String    mant    =    str.charAt(pfxLen    -    1);    	non-compiled	[CE]  ';'  expected	35	None	replace
72	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  pfxLen  +=  str.length();  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  pfxLen  +=  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  pfxLen  +=  str.length();  }	  final    int    pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	20	None	replace
73	[BUG]  [BUGGY]  final  char  hexDigits  =  str.length()  *  pfxLen;  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.length()  *  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.length()  *  pfxLen;	  final    char    hexDigits    =    str.length()    /    pfxLen;    	non-compiled	[CE]  ';'  expected	3	None	replace
74	[BUG]  [BUGGY]  final  char  hexDigits  =  str.length()  +  pfxLen;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.length()  +  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.length()  +  pfxLen;	  final    char    hexDigits    =    str.length()    /    pfxLen;    	non-compiled	[CE]  ';'  expected	3	None	replace
75	[BUG]  [BUGGY]  final  String  hexDigits  =  str.length()  /  pfxLen;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.length()  /  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.length()  /  pfxLen;	  final    char    hexDigits    =    str.length()    /    pfxLen;    	non-compiled	[CE]  ';'  expected	3	None	replace
76	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen  +  1));  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen  +  1));  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.substring(0,  pfxLen  +  1));	  Integer    str    =    createInteger(str.substring(0,    pfxLen));    	non-compiled	[CE]  ';'  expected	68	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen)+  1);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen)+  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.substring(0,  pfxLen)+  1);	  Integer    str    =    createInteger(str.substring(0,    pfxLen));    	non-compiled	[CE]  ';'  expected	68	None	replace
78	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen  +  2));  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen  +  2));  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.substring(0,  pfxLen  +  2));	  Integer    str    =    createInteger(str.substring(0,    pfxLen));    	non-compiled	[CE]  ';'  expected	68	None	replace
79	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.substring(0,  1));	  Integer    str    =    createInteger(str.substring(0,    pfxLen));    	non-compiled	[CE]  ';'  expected	68	None	replace
80	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  pfxLen  =  str.length();  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  pfxLen  =  str.length();  }	  pfxLen    =    str.length()    -    2;    	non-compiled	[CE]  ';'  expected	17	None	replace
81	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexLen  =  str.length();  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexLen  =  str.length();  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  hexLen  =  str.length();  }  else  {  throw  new  NumberFormatException( " ");  }	  final    int    hexLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	30	None	replace
82	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    1)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
83	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    1)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
84	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.length()  -  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
85	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
86	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  ';'  expected  [FE]                        NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
87	[BUG]  [BUGGY]  Integer  str  =  createInteger(pfx.length());  [CE]  ';'  expected  [FE]                          NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(pfx.length());  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(pfx.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
88	[BUG]  [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
89	[BUG]  [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
90	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-1x       "    }    ;    	non-compiled	[CE]  ';'  expected	45	None	replace
91	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-1x "  }  ;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-1x "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-1x "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-1x       "    }    ;    	non-compiled	[CE]  ';'  expected	45	None	replace
92	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	38	None	replace
93	[BUG]  [BUGGY]  Integer  str  =  createInteger(pfxLen  +  1);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(pfxLen  +  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(pfxLen  +  1);	  Integer    str    =    createInteger(pfxLen);    	non-compiled	[CE]  ';'  expected	24	None	replace
94	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(hex_prefixes    ==    null)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
95	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(hex_prefixes    ==    null)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
96	[BUG]  [BUGGY]  pfxLen  =  str.length()  *  1;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  pfxLen  =  str.length()  *  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	pfxLen  =  str.length()  *  1;	  pfxLen    =    str.length()    +    1;    	non-compiled	[CE]  ';'  expected	15	None	replace
97	[BUG]  [BUGGY]  char  pfxLen  =  str.length()  +  1;  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  char  pfxLen  =  str.length()  +  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	char  pfxLen  =  str.length()  +  1;	  char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	12	None	replace
98	[BUG]  [BUGGY]  char  pfxLen  =  str.length()  -  1;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  char  pfxLen  =  str.length()  -  1;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	char  pfxLen  =  str.length()  -  1;	  char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	12	None	replace
99	[BUG]  [BUGGY]  String  pfxLen  =  str.length();  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  String  pfxLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfxLen  =  str.length();	  char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	12	None	replace
100	[BUG]  [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
101	[BUG]  [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
102	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
103	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  ==  1)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  if(pfxLen  ==  1)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  if(pfxLen  ==  1)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
104	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
105	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(pfxLen);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createBigInteger(pfxLen);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createBigInteger(pfxLen);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  ';'  expected	25	None	replace
106	[BUG]  [BUGGY]  if(allZeros)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(allZeros)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(allZeros)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
107	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  if(hexDigits  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  if(hexDigits  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  if(hexDigits  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
108	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ';'  expected	56	None	replace
109	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-#   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    	non-compiled	[CE]  ';'  expected	56	None	replace
110	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >  0)  {  final  int  pfxLen  =  str.length();  }	  if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    }    	non-compiled	[CE]  ';'  expected	22	None	replace
111	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
112	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	38	None	replace
113	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  -  2;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.length()  -  2;	  final    int    hexDigits    =    str.length()    *    2;    	non-compiled	[CE]  ';'  expected	33	None	replace
114	[BUG]  [BUGGY]  if(pfxLen!=  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen!=  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen!=  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    <    =    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	62	None	replace
115	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
116	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
117	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger  [CE]  [FE]                        NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  	63	None	replace
118	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.length()  -  2);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
119	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
120	[BUG]  [BUGGY]  final  char  hexDigits  =  str.charAt(str.length()  -  1);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.charAt(str.length()  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.charAt(str.length()  -  1);	  final    char    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	5	None	replace
121	[BUG]  [BUGGY]  final  byte  hexDigits  =  str.length();  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  byte  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  byte  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    +    1;    	non-compiled	[CE]  ';'  expected	1	None	replace
122	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
123	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createIn  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createIn  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createIn	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
124	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInt  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInt  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInt	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
125	[BUG]  [BUGGY]  if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
126	[BUG]  [BUGGY]  if(hexLen  ==  0)  {  final  int  hexLen  =  str.length();  }  else  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen  ==  0)  {  final  int  hexLen  =  str.length();  }  else  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen  ==  0)  {  final  int  hexLen  =  str.length();  }  else  {  return  createInteger(str);  }	  final    int    hexLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	30	None	replace
127	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  +=  pfx.length();  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  +=  pfx.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  +=  pfx.length();  }	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
128	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  =  str.length();  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  =  str.length();  }	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
129	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  +=  pfx.length();  break;  }  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  +=  pfx.length();  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  pfxLen  =  str.length();  }  else  {  final  int  pfxDigits  =  str.charAt(pfxLen);  pfxLen  +=  pfx.length();  break;  }	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
130	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen)+  1));  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen)+  1));  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.substring(0,  pfxLen)+  1));	  Integer    str    =    createInteger(str.substring(0,    pfxLen));    	non-compiled	[CE]  ';'  expected	68	None	replace
131	[BUG]  [BUGGY]  if(hexLen!=  0)  {  final  int  pfxLen  =  str.length();  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen!=  0)  {  final  int  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen!=  0)  {  final  int  pfxLen  =  str.length();  }	  if(hexLen    ==    0)    {    final    int    hexLen    =    str.length();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
132	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  *  hexLen;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  hexDigits  =  str.length()  *  hexLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =  str.length()  *  hexLen;	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
133	[BUG]  [BUGGY]  final  int  pfxDigits  =  str.length()  +  1;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxDigits  =  str.length()  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxDigits  =  str.length()  +  1;	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
134	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixe  [CE]  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixe  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixe	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  	29	None	replace
135	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "0x   ",   "0x   "  }  ;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "0x   ",   "0x   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "0x   ",   "0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "0x   ",       "0x   "    }    ;    	non-compiled	[CE]  ';'  expected	19	None	replace
136	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "0x   ",   "0x   "  }  ;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "0x   ",   "0x   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "0x   ",   "0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "0x   ",       "0x   "    }    ;    	non-compiled	[CE]  ';'  expected	19	None	replace
137	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "0x   "  }  ;  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "0x   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "0x   ",       "0x   "    }    ;    	non-compiled	[CE]  ';'  expected	19	None	replace
138	[BUG]  [BUGGY]  if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(hexLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	47	None	replace
139	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
140	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
141	[BUG]  [BUGGY]  if(pfxLen  ==  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    <    =    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
142	[BUG]  [BUGGY]  final  char  hexDigits  =  str.length()  /  2;  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.length()  /  2;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.length()  /  2;	  final    char    hexDigits    =    str.length()    /    pfxLen;    	non-compiled	[CE]  ';'  expected	3	None	replace
143	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-1x "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-1x "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-1x "  }  ;  return  createBigInteger(str);  }	  if(hex_prefixes    ==    null)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	48	None	replace
144	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }	  if(hex_prefixes    ==    null)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
145	[BUG]  [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes  ==  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
146	[BUG]  [BUGGY]  if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
147	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
148	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  return  createInteger(str);  }	  final    int    pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	20	None	replace
149	[BUG]  [BUGGY]  pFxLen  =  str.length();  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  pFxLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	pFxLen  =  str.length();	  pfxLen    =    str.length()    +    1;    	non-compiled	[CE]  ';'  expected	15	None	replace
150	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str  +  1);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createBigInteger(str  +  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createBigInteger(str  +  1);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  ';'  expected	25	None	replace
151	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(pfxLen!=  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(dec  ==  null)  {  if(pfxLen!=  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(dec  ==  null)  {  if(pfxLen!=  0)  {  final  int  hexDigits  =  str.length();  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen!=    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
152	[BUG]  [BUGGY]  &&(hex_prefixe!=  null  ||  hex_prefixe.length()  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(hex_prefixe!=  null  ||  hex_prefixe.length()  ==  0))  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(hex_prefixe!=  null  ||  hex_prefixe.length()  ==  0))  {	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
153	[BUG]  [BUGGY]  &&(hex_prefixe!=  null  ||  str.length()  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(hex_prefixe!=  null  ||  str.length()  ==  0))  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(hex_prefixe!=  null  ||  str.length()  ==  0))  {	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
154	[BUG]  [BUGGY]  &&(hex_prefixe  ==  null  ||  str.length()  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(hex_prefixe  ==  null  ||  str.length()  ==  0))  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(hex_prefixe  ==  null  ||  str.length()  ==  0))  {	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
155	[BUG]  [BUGGY]  &&(hex_prefixe  ==  null  ||  hex_prefixe.length()  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                        NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(hex_prefixe  ==  null  ||  hex_prefixe.length()  ==  0))  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(hex_prefixe  ==  null  ||  hex_prefixe.length()  ==  0))  {	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
156	[BUG]  [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(str  ==  null  ||  str.length()  ==  0))  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
157	[BUG]  [BUGGY]  &&(str!=  null  ||  str.length()  ==  0))  {  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(str!=  null  ||  str.length()  ==  0))  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(str!=  null  ||  str.length()  ==  0))  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
158	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-1x   "  }  ;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-1x   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "-0x   ",   "#   ",   "-1x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-1x       "    }    ;    	non-compiled	[CE]  ';'  expected	45	None	replace
159	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
160	[BUG]  [BUGGY]  char  pfxLen  =  str.charAt(0);  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  char  pfxLen  =  str.charAt(0);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	char  pfxLen  =  str.charAt(0);	  char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	12	None	replace
161	[BUG]  [BUGGY]  char  pfxLen  =  str.charAt(str.length()  -  1);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  char  pfxLen  =  str.charAt(str.length()  -  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	char  pfxLen  =  str.charAt(str.length()  -  1);	  char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	12	None	replace
162	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "0x   "  }  ;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "0x   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "0x       "    }    ;    	non-compiled	[CE]  ';'  expected	46	None	replace
163	[BUG]  [BUGGY]  Integer  str  =  createInteger(pfx  +  1);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(pfx  +  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(pfx  +  1);	  Integer    str    =    createInteger(pfx);    	non-compiled	[CE]  ';'  expected	23	None	replace
164	[BUG]  [BUGGY]  final  char  hexLen  =  str.charAt(0);  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexLen  =  str.charAt(0);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexLen  =  str.charAt(0);	  final    char    hexLen    =    str.length();    	non-compiled	[CE]  ';'  expected	49	None	replace
165	[BUG]  [BUGGY]  Integer  str  =  createInteger(pfx,  s);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(pfx,  s);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(pfx,  s);	  Integer    str    =    createInteger(str,    pfxLen);    	non-compiled	[CE]  ';'  expected	69	None	replace
166	[BUG]  [BUGGY]  final  char  pfxLen  =  str.charAt(0);  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  pfxLen  =  str.charAt(0);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfxLen  =  str.charAt(0);	  final    char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	42	None	replace
167	[BUG]  [BUGGY]  final  char  pfxLen  =  str.charAt(str.length()  -  1);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  pfxLen  =  str.charAt(str.length()  -  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfxLen  =  str.charAt(str.length()  -  1);	  final    char    pfxLen    =    str.length();    	non-compiled	[CE]  ';'  expected	42	None	replace
168	[BUG]  [BUGGY]  final  String  hexDigits  =  str.length()  +  1;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.length()  +  1;	  final    String    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	51	None	replace
169	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(hexDigits.length());  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(hexDigits.length());  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(hexDigits.length());	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
170	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(hex_prefixes.length());  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(hex_prefixes.length());  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(hex_prefixes.length());	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
171	[BUG]  [BUGGY]  pfxLen  =  str.length()  +  2;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  pfxLen  =  str.length()  +  2;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	pfxLen  =  str.length()  +  2;	  pfxLen    =    str.length()    -    2;    	non-compiled	[CE]  ';'  expected	17	None	replace
172	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
173	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    <    =    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#       "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	65	None	replace
174	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-0x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    1)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
175	[BUG]  [BUGGY]  static  final  int  hexLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  static  final  int  hexLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	static  final  int  hexLen  =  str.length();	  final    int    hexLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
176	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
177	[BUG]  [BUGGY]  final  char  hexDigits  =  str.charAt(pfxLen);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  char  hexDigits  =  str.charAt(pfxLen);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =  str.charAt(pfxLen);	  final    char    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	5	None	replace
178	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  ';'  expected	25	None	replace
179	[BUG]  [BUGGY]  if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
180	[BUG]  [BUGGY]  if(allZeros)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(allZeros)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(allZeros)  {  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  pfxLen;  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(pfxLen    ==    0)    {    final    int    hexDigits    =    str.length();    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
181	[BUG]  [BUGGY]  static  final  int  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  static  final  int  pfxLen  =  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	static  final  int  pfxLen  =  str.length();	  final    int    pfxLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
182	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
183	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length()  -  pfxLen;  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length()  -  pfxLen;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length()  -  pfxLen;  }	  final    int    pfxLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	40	None	replace
184	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length()  -  pfxLen;  }  else  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length()  -  pfxLen;  }  else  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length()  -  pfxLen;  }  else  {  return  createInteger(str);  }	  final    int    pfxLen    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	40	None	replace
185	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixe  [CE]  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixe  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixe	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  	43	None	replace
186	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    >    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
187	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "-1x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
188	[BUG]  [BUGGY]  final  int  pfxDigits  =  str.length()  /  2;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  int  pfxDigits  =  str.length()  /  2;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  pfxDigits  =  str.length()  /  2;	  final    int    pfxDigits    =    str.length()    /    hexLen;    	non-compiled	[CE]  ';'  expected	4	None	replace
189	[BUG]  [BUGGY]  final  String  hexDigits  =  str.substring(0,  pfxLen);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  hexDigits  =  str.substring(0,  pfxLen);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  hexDigits  =  str.substring(0,  pfxLen);	  final    String    hexDigits    =    str.length();    	non-compiled	[CE]  ';'  expected	51	None	replace
190	[BUG]  [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
191	[BUG]  [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
192	[BUG]  [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   "  [CE]  illegal  start  of  expression  [FE]                        NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  &&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   "  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	&&(str  ==  null  ||  str.length()  ==  0))  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   "	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixe    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
193	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "0x   ",   "0x   "  }  ;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "0x   ",   "0x   "  }  ;  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "0x   ",   "0x   "  }  ;	  final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "0x   ",       "0x   "    }    ;    	non-compiled	[CE]  ';'  expected	19	None	replace
194	[BUG]  [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "#       "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
195	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "#       "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
196	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen!=    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
197	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  final  int  pfxLen  =  pfx.length();  break;  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  final  int  pfxLen  =  pfx.length();  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  0)  {  final  int  pfxLen  =  str.length();  }  else  {  final  int  pfxLen  =  pfx.length();  break;  }	  final    int    pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	20	None	replace
198	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen  -  1));  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  pfxLen  -  1));  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.substring(0,  pfxLen  -  1));	  Integer    str    =    createInteger(str.substring(0,    pfxLen));    	non-compiled	[CE]  ';'  expected	68	None	replace
199	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  int  pfxLen  =  str.length();  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  int  pfxLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  int  pfxLen  =  str.length();  }	  if(pfxLen    ==    0)    {    final    int    pfxLen    =    str.length();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
200	[BUG]  [BUGGY]  pfxLen  +=  str.length();  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  pfxLen  +=  str.length();  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	pfxLen  +=  str.length();	  pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	16	None	replace
201	[BUG]  [BUGGY]  if(hex_prefixes!=  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hex_prefixes!=  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hex_prefixes!=  null)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(hex_prefixes    ==    null)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
202	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  if(pfxLen  >  0)  {  final  int  hexDigits  =  str.length()  -  1;  if(hexDigits  >  16)  {  return  createInteger(str);  }	  if(pfxLen    >    0)    {    final    int    hexDigits    =    str.length()    -    pfxLen;    if(hexDigits    >    16)    {    return    createInteger(str);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
203	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str.charAt(0));	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
204	[BUG]  [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  0)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-0X   ",   "#   ",   "-#   "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    <    =    0)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
205	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  ==  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-1x   ",   "-1x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-1x       ",       "-1x       ",       "#       ",       "-#       "    }    ;    break;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
206	[BUG]  [BUGGY]  if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-#   "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
207	[BUG]  [BUGGY]  if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  =  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "0x   ",   "#   ",   "-# "  }  ;  break;  }	  if(pfxLen    ==    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
208	[BUG]  [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
209	[BUG]  [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str!=    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
210	[BUG]  [BUGGY]  if(pfxLen  <  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(pfxLen  <  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  1)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0x   ",   "-0x   ",   "#   ",   "-# "  }  ;  return  createBigInteger(str);  }	  if(pfxLen    ==    1)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "0x       ",       "0x       ",       "#       ",       "-#   "    }    ;    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
211	[BUG]  [BUGGY]  if(hexLen  <  =  0)  {  final  int  hexLen  =  str.length();  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(hexLen  <  =  0)  {  final  int  hexLen  =  str.length();  }  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexLen  <  =  0)  {  final  int  hexLen  =  str.length();  }	  if(hexLen    ==    0)    {    final    int    hexLen    =    str.length();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
212	[BUG]  [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str!=  null)  {  if(pfxLen  >  16)  {  final  String[]  hex_prefixes  =  {   "0x   ",   "0X   ",   "-0X   ",   "#   ",   "-# "  }  ;  pfxLen  =  0;  for(final  String  str  :  hex_prefixes)  {	  if(str    ==    null)    {    if(pfxLen    >    16)    {    final    String[]    hex_prefixes    =    {       "0x       ",       "0x       ",       "-0x       ",       "#       ",       "-#   "    }    ;    pfxLen    =    0;    for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
213	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(hex_prefixes.length  -  1);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(hex_prefixes.length  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(hex_prefixes.length  -  1);	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
214	[BUG]  [BUGGY]  final  String  mant  =  str.charAt(pfx.length());  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  final  String  mant  =  str.charAt(pfx.length());  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  mant  =  str.charAt(pfx.length());	  final    String    mant    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  ';'  expected	50	None	replace
215	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  1);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]        final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number      [BUGGY]  Integer  str  =  createInteger(str,  1);  [BUGGY]      final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	Integer  str  =  createInteger(str,  1);	  Integer    str    =    createInteger(str,    pfxLen);    	non-compiled	[CE]  ';'  expected	69	None	replace
