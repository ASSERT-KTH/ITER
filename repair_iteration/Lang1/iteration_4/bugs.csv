bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
2	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(str    ==    null    ||!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	5042	None
25	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes)||  pfx.endsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(hex_prefixes)||  pfx.endsWith(hex_prefixes))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes)||  pfx.endsWith(hex_prefixes))  {	  if(pfx.endsWith(hex_prefixes)||    pfx.endsWith(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  expression	4610	None
26	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes)||  pfx.startsWith(hex_prefixes))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(hex_prefixes)||  pfx.startsWith(hex_prefixes))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes)||  pfx.startsWith(hex_prefixes))  {	  if(pfx.endsWith(hex_prefixes)||    pfx.endsWith(hex_prefixes))    {    	non-compiled	[CE]  illegal  start  of  expression	4610	None
50	[BUG]  [BUGGY]  final  char  hex  =  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  char  hex  =  str.charAt(0);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  char  hex  =  str.charAt(0);	  final    String    hex    =    str.charAt(1);    	non-compiled	[CE]  illegal  start  of  expression	5570	None
97	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  exp,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  exp,  Integer.MAX_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  exp,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	9481	None
98	[BUG]  [BUGGY]  return  Integer.decode(mant,  str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(mant,  str,  Integer.MAX_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  str,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	9481	None
122	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  int  pfxLen  =  str.length();  if(pfxLen  <  0)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(pfxLen  ==  0)  {  int  pfxLen  =  str.length();  if(pfxLen  <  0)  {  break;  }  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  ==  0)  {  int  pfxLen  =  str.length();  if(pfxLen  <  0)  {  break;  }	  if(dec    ==    null)    {    int    pfxLen    =    str.length();    if(pfxLen    <    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3301	None
145	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  pfxLen);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  pfxLen);	  return    Integer.decode(hexDigits,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
146	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  8);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  8);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  8);	  return    Integer.decode(hexDigits,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
169	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  str;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MAX_VALUE  /  str;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  str;	  return    Integer.MAX_VALUE    /    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	6422	None
170	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  String.MIN_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MAX_VALUE  /  String.MIN_VALUE;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  String.MIN_VALUE;	  return    Integer.MAX_VALUE    /    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	6422	None
194	[BUG]  [BUGGY]  final  Integer  int  =  Integer.valueOf(str)+  2;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.valueOf(str)+  2;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.valueOf(str)+  2;	  final    Integer    int    =    Integer.valueOf(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3002	None
217	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  8);  if(e.getNumerics()  ==  0)  {  return  create  [CE]  ';'  expected  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  8);  if(e.getNumerics()  ==  0)  {  return  create  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  8);  if(e.getNumerics()  ==  0)  {  return  create	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    8);    if(e.getNumerics()    ==    0)    {    return    createL    	non-compiled	[CE]  ';'  expected	7682	None
241	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree();  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  final  String  pfx  =  str.toStringTree();  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree();	  return    createLong(str.length());    	non-compiled	[CE]  illegal  start  of  expression	2882	None
242	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  final  String  pfx  =  str.toStringTree(pfxLen);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(pfxLen);	  return    createLong(str.length());    	non-compiled	[CE]  illegal  start  of  expression	2882	None
266	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  1  :  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  =(pfx  ==  null)?  1  :  pfx.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =(pfx  ==  null)?  1  :  pfx.length();	  pfxLen    =(pfx    ==    null)?    0    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	2906	None
289	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  1));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  1));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length()  -  1));	  final    String    pfx    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	5090	None
337	[BUG]  [BUGGY]  return  createBigDecimal(str.toString(),  dec);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(str.toString(),  dec);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.toString(),  dec);	  return    createBigDecimal(str.toString());    	non-compiled	[CE]  illegal  start  of  type	5881	None
481	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefixes)&&  pfx.endsWith(hex_prefixes[0]))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(hex_prefixes)&&  pfx.endsWith(hex_prefixes[0]))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefixes)&&  pfx.endsWith(hex_prefixes[0]))  {	  if(pfx.startsWith(hex_prefixes)||    pfx.endsWith(hex_prefixes[0]))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None
506	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  return  createLong(str,  pfxLen  +  2);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createLong(str,  pfxLen  +  2);	  return    createLong(str,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2281	None
529	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MAX_VALUE  /  1;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  1;	  return    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6421	None
530	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  /  2;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MAX_VALUE  /  2;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  /  2;	  return    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6421	None
553	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  hexDigits));  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  hexDigits));  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen  +  1,  hexDigits));	  Arrays.sort(str.substring(pfxLen    +    1,    hex_prefixes));    	non-compiled	[CE]  illegal  start  of  expression	6578	None
554	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  expPos));  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1,  expPos));  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen  +  1,  expPos));	  Arrays.sort(str.substring(pfxLen    +    1,    hex_prefixes));    	non-compiled	[CE]  illegal  start  of  expression	6578	None
602	[BUG]  [BUGGY]  if(StringUtils.isAssign(str)&&  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(str)&&  ArrayUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(str)&&  ArrayUtils.isEmpty(str))  {	  if(StringUtils.isAssign(str)||    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1562	None
625	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1),  0);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1),  0);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1),  0);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length()),    0);    	non-compiled	[CE]  illegal  start  of  expression	7502	None
626	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1,  0);  [CE]  ')'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1,  0);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1,  0);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length()),    0);    	non-compiled	[CE]  ')'  expected	7502	None
650	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0x,  str.length()));  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  final  String  dec  =  str.substring(0x,  str.length()));  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0x,  str.length()));	  final    String    dec    =    str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	2666	None
674	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  4);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()  -  4);	  final    String    hex    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2209	None
698	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen)+  2;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  pfxLen  -=  str.charAt(pfxLen)+  2;  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen)+  2;	  pfxLen    -=    str.charAt(pfxLen)+    1;    	non-compiled	[CE]  illegal  start  of  expression	481	None
722	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  2);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  2);	  String[]    hex_prefixes    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2425	None
745	[BUG]  [BUGGY]  final  String  hex  =(String)str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex  =(String)str.charAt(0);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =(String)str.charAt(0);	  final    String    hex    =(char)str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
794	[BUG]  [BUGGY]  pfxLen  =(str  ==  null)?  str.length()  :  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  pfxLen  =(str  ==  null)?  str.length()  :  pfx.length();  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(str  ==  null)?  str.length()  :  pfx.length();	  pfxLen    =(str    ==    null)?    pfx.length()    :    str.length();    	non-compiled	[CE]  illegal  start  of  type	97	None
817	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  0;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  0;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =(pfx  ==  null)?  pfx.length()  :  0;	  pfxLen    =(pfx    ==    null)?    pfx.length()    :    1;    	non-compiled	[CE]  illegal  start  of  type	2570	None
842	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str[0]);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  Arrays.sort(hex_prefixes,  0,  str[0]);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str[0]);	  Arrays.sort(str,    0,    hex_prefixes[0]);    	non-compiled	[CE]  illegal  start  of  expression	2330	None
914	[BUG]  [BUGGY]  String  pfx  =(String)pfx.substring(0,  pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  pfx  =(String)pfx.substring(0,  pfxLen  +  2);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(String)pfx.substring(0,  pfxLen  +  2);	  String    pfx    =(String)pfx.substring(0,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5234	None
938	[BUG]  [BUGGY]  final  long  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  long  pfxLen  =  str.length();  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  long  pfxLen  =  str.length();	  final    int    pfxLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3890	None
962	[BUG]  [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  +=  pfx.charAt(pfxLen  +  2);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  pfx.charAt(pfxLen  +  2);	  pfxLen    +=    str.charAt(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  expression	698	None
1033	[BUG]  [BUGGY]  final  Arrays.sort(str.charAt(0));  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str.charAt(0));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.charAt(0));	  Arrays.sort(str.charAt(0));    	non-compiled	[CE]  <identifier>  expected	4178	None
1106	[BUG]  [BUGGY]  if(pfxLen  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(pfxLen  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(pfxLen  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }	  if(pfxLen    <    1)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5546	None
1153	[BUG]  [BUGGY]  if(str  ==  null)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str  ==  null)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  null)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3746	None
1154	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.length()  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.length()  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3746	None
1178	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()  -  1)+  1;	  final    String    hex    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	2210	None
1201	[BUG]  [BUGGY]  if(str  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14281	None
1202	[BUG]  [BUGGY]  if(str  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14281	None
1225	[BUG]  [BUGGY]  final  String  decPos  =  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  decPos  =  pfx.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.length();	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
1226	[BUG]  [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.substring(0,  pfxLen);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
1250	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getName()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getName()  ==  0)  {  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  if(e.getName()  ==  0)  {	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    if(e.getNumerics()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2834	None
1274	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isBlank(mant)&&  ArrayUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  ArrayUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3074	None
1297	[BUG]  [BUGGY]  String  pfxLen  =  str.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  String  pfxLen  =  str.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	String  pfxLen  =  str.length();	  char    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	5114	None
1298	[BUG]  [BUGGY]  String  pfxLen  =  string.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  String  pfxLen  =  string.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	String  pfxLen  =  string.length();	  char    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	5114	None
1322	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen));  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen));  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length()),  pfxLen));	  Arrays.sort(str.getChars(0,    str.length()    -    1,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	3793	None
1346	[BUG]  [BUGGY]  for(final  String  pfxLen  :  hex_prefixes)  {  0;  }  [CE]  not  a  statement  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  for(final  String  pfxLen  :  hex_prefixes)  {  0;  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfxLen  :  hex_prefixes)  {  0;  }	  for(final    String    pfx    :    hex_prefixes)    {    0;    }    	non-compiled	[CE]  not  a  statement	1261	None
1369	[BUG]  [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10561	None
1370	[BUG]  [BUGGY]  if(decPos  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10561	None
1394	[BUG]  [BUGGY]  return  createLong(str,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  return  createLong(str,  pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  pfxLen);	  return    createLong(str,    lastChar);    	non-compiled	[CE]  illegal  start  of  expression	301	None
1417	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  4));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  4));  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()  -  4));	  final    String    hex_prefixes    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	50	None
1418	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1));  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1));	  final    String    hex_prefixes    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	50	None
1442	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(str  ==  null  ||  str.length()  ==  pfxLen)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  str.length()  ==  pfxLen)  {	  if(str    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	4369	None
1466	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)/  1;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)/  1;	  final    Integer    int    =    Integer.toLongBits(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4682	None
1537	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  str.charAt(pfxLen)-  1;  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen)-  1;	  pfxLen    -=    pfx.charAt(pfxLen)-    1;    	non-compiled	[CE]  illegal  start  of  expression	12422	None
1562	[BUG]  [BUGGY]  pfxLen  =(pfx!=  null)?  pfx.length()  :  pfx.length();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  =(pfx!=  null)?  pfx.length()  :  pfx.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =(pfx!=  null)?  pfx.length()  :  pfx.length();	  pfxLen    =(pfx    ==    null)?    pfx.length()    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	5162	None
1609	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(pf  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(pf  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(pf	  if(pfxLen    ==    0)    {    pfxLen    +=    pfx.charAt(pfxLen));    if(pfxLen    >=    pfxLen)    {    pfxLen    +=    pfx.charAt(pfxLen);    }    	non-compiled	[CE]  ';'  expected	9842	None
1610	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(pfxL  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(pfxL  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  ==  0)  {  pfxLen  +=  pfx.charAt(pfxLen));  if(pfxLen  >=  pfxLen)  {  pfxLen  +=  pfx.charAt(pfxL	  if(pfxLen    ==    0)    {    pfxLen    +=    pfx.charAt(pfxLen));    if(pfxLen    >=    pfxLen)    {    pfxLen    +=    pfx.charAt(pfxLen);    }    	non-compiled	[CE]  ';'  expected	9842	None
1633	[BUG]  [BUGGY]  return  createLong(str.length()  -  8);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createLong(str.length()  -  8);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str.length()  -  8);	  return    createLong(str.length());    	non-compiled	[CE]  illegal  start  of  expression	2882	None
1634	[BUG]  [BUGGY]  return  createLong(str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createLong(str.length()  -  1);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str.length()  -  1);	  return    createLong(str.length());    	non-compiled	[CE]  illegal  start  of  expression	2882	None
1657	[BUG]  [BUGGY]  return  createLong(str,  exp  +  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  return  createLong(str,  exp  +  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  exp  +  1);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
1658	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  return  createLong(str,  pfxLen  +  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfxLen  +  1);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
1681	[BUG]  [BUGGY]  for(final  String  hex_prefixes  :  hex_prefixes)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  hex_prefixes  :  hex_prefixes)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  hex_prefixes  :  hex_prefixes)  {	  for(final    String    hx_prefixes    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	15242	None
1682	[BUG]  [BUGGY]  for(final  String  hex_prefixes  :  hx_prefixes)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  hex_prefixes  :  hx_prefixes)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  hex_prefixes  :  hx_prefixes)  {	  for(final    String    hx_prefixes    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	15242	None
1705	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(pfxLen  >  0)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >  0)  {	  if(pfxLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4370	None
1706	[BUG]  [BUGGY]  if(pfxLen  >  6)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(pfxLen  >  6)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >  6)  {	  if(pfxLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4370	None
1753	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  if(pfxLen  >  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  >  0)  {  pfxLen  +=  str.charAt(pfxLen  -  1));  }	  pfxLen    +=    str.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	529	None
1802	[BUG]  [BUGGY]  if(pfx.startsWith( "0x ")||  pfx.endsWith( "+ "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "0x ")||  pfx.endsWith( "+ "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "0x ")||  pfx.endsWith( "+ "))  {	  if(pfx.startsWith(   "-   ")||    pfx.endsWith(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	5666	None
1825	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isBlank(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isWhitespace(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1465	None
1873	[BUG]  [BUGGY]  Arrays.sort(str,  true);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str,  true);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str,  true);	  Arrays.sort(str,    false);    	non-compiled	[CE]  illegal  start  of  expression	3170	None
1898	[BUG]  [BUGGY]  return  Integer.MIN_VALUE  *  Integer.MAX_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MIN_VALUE  *  Integer.MAX_VALUE;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MIN_VALUE  *  Integer.MAX_VALUE;	  return    Integer.MIN_VALUE    /    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9182	None
1921	[BUG]  [BUGGY]  return  createBigDecimal(str,  exp);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(str,  exp);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  exp);	  return    createBigDecimal(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	16502	None
1922	[BUG]  [BUGGY]  return  createBigDecimal(pfx,  str);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(pfx,  str);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(pfx,  str);	  return    createBigDecimal(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	16502	None
1946	[BUG]  [BUGGY]  str.getChars(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  str.getChars(0,  str.length()  -  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	str.getChars(0,  str.length()  -  1);	  str.getChars(0,    str.length()    -    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	1322	None
1969	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str)&&  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str)&&  ArrayUtils.isInfinite(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  StringUtils.isDefined(str)&&  ArrayUtils.isInfinite(str))  {	  if(str    ==    null    ||    StringUtils.isDefined(str)||    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15601	None
1993	[BUG]  [BUGGY]  return  createLong(str,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  return  createLong(str,  dec);  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  dec);	  return    createLong(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	73	None
2017	[BUG]  [BUGGY]  final  String  decPos  =  pfx.indexOf('.');  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  decPos  =  pfx.indexOf('.');  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.indexOf('.');	  String    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	3193	None
2065	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  exp,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  exp,  Integer.MIN_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  exp,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    str,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	16022	None
2066	[BUG]  [BUGGY]  return  Integer.decode(mant,  str,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(mant,  str,  Integer.MIN_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(mant,  str,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    str,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	16022	None
2089	[BUG]  [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getAstRoot(Integer.MIN_VALUE)+  1);	  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE));    	non-compiled	[CE]  illegal  start  of  expression	11282	None
2137	[BUG]  [BUGGY]  String  str  =  pfxLen.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =  pfxLen.substring(0,  str.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfxLen.substring(0,  str.length());	  String    str    =    pfxLen.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1705	None
2138	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =  pfx.substring(0,  str.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  pfx.substring(0,  str.length());	  String    str    =    pfxLen.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1705	None
2161	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  String  decPos  =(String)pfx.substring(0,  pfxLen);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  pfxLen);	  String    decPos    =(String)pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	578	None
2162	[BUG]  [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  String  decPos  =(String)pfx.substring(0,  str.length()  -  1);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =(String)pfx.substring(0,  str.length()  -  1);	  String    decPos    =(String)pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	578	None
2186	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  '0')+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  str  =  createInteger(str,  '0')+  1;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  '0')+  1;	  final    Integer    str    =    createInteger(str,    '0');    	non-compiled	[CE]  illegal  start  of  expression	10622	None
2210	[BUG]  [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  -  2;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  -  2;  [BUGGY]        for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  hex_prefixes.length  -  2;	  final    int    pfxLen    =    hex_prefixes.length    -    4;    	non-compiled	[CE]  illegal  start  of  expression	4981	None
2234	[BUG]  [BUGGY]  return  createBlank(str,  exp);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBlank(str,  exp);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(str,  exp);	  return    createBlank(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	1129	None
2257	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length());  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length());  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length());	  final    String    str    =    pfx.substring(0,    pfx.length()    -    10);    	non-compiled	[CE]  illegal  start  of  type	6662	None
2258	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()));  [CE]  ';'  expected  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()));  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()));	  final    String    str    =    pfx.substring(0,    pfx.length()    -    10);    	non-compiled	[CE]  ';'  expected	6662	None
2282	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  4);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()  -  4);	  final    String    hex_prefixes    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	49	None
2354	[BUG]  [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6901	None
2402	[BUG]  [BUGGY]  return  createInt(str,  pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  return  createInt(str,  pfxLen  -  1);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInt(str,  pfxLen  -  1);	  return    createLong(str,    pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2281	None
2450	[BUG]  [BUGGY]  final  Arrays.sort(str.length()  -  1);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str.length()  -  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.length()  -  1);	  final    Arrays.sort(str.length());    	non-compiled	[CE]  <identifier>  expected	4177	None
2546	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(0);  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  final  char  pfx  =  str.charAt(0);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  char  pfx  =  str.charAt(0);	  final    String    pfx    =    str.charAt(0);    	non-compiled	[CE]  not  a  statement	2137	None
2618	[BUG]  [BUGGY]  if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(decPos    >    10)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	7022	None
2642	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length());  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.charAt(0),  str.length());  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.charAt(0),  str.length());	  Arrays.sort(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	1	None
2665	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  pfxLen.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =(String)pfx.substring(0,  pfxLen.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfx.substring(0,  pfxLen.length());	  String    str    =(String)pfx.substring(0,    pfxLen.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	3578	None
2666	[BUG]  [BUGGY]  String  str  =(String)pfxLen.substring(0,  pfxLen.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =(String)pfxLen.substring(0,  pfxLen.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfxLen.substring(0,  pfxLen.length());	  String    str    =(String)pfx.substring(0,    pfxLen.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	3578	None
2690	[BUG]  [BUGGY]  if(decPos  ==  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  ==  -  1)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  ==  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  ==  -  1)  {  return  createDecimal(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  ==  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  ==  -  1)  {  return  createDecimal(str);  }	  if(decPos    ==    -1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    -    1)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	818	None
2713	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  return  createLong(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  1)  {  return  createLong(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	13682	None
2714	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  return  createBigInteger(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  1)  {  return  createBigInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  return  createBigInteger(str);  }	  if(hexDigits    ==    1)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	13682	None
2737	[BUG]  [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    Integer.MIN_VALUE)    {    if(hexDigits    ==    Integer.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	11942	None
2738	[BUG]  [BUGGY]  if(hexDigits  ==  BigDecimal.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  BigDecimal.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  BigDecimal.MIN_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    Integer.MIN_VALUE)    {    if(hexDigits    ==    Integer.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	11942	None
2762	[BUG]  [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()));  [CE]  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  final  string[]  dec  =  str.substring(0,  str.length()));  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  string[]  dec  =  str.substring(0,  str.length()));	  final    String[]    dec    =    str.substring(0,    str.length()    -    3));    	non-compiled	[CE]  	3481	None
2785	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1));  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	pfxLen  -=  str.charAt(pfxLen  -  1));	  pfxLen    -=    pfx.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	14342	None
2786	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  pfx.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  pfx.charAt(pfxLen  -  1));  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  >  0)  {  pfxLen  -=  pfx.charAt(pfxLen  -  1));  }	  pfxLen    -=    pfx.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	14342	None
2810	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()  -  1)+  1);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length())+    1);    	non-compiled	[CE]  illegal  start  of  expression	4586	None
2834	[BUG]  [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    ==    3)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6902	None
2857	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  str  =  createInteger(str,  1);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  1);	  final    Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	1730	None
2858	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  4);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  str  =  createInteger(str,  4);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  4);	  final    Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	1730	None
2882	[BUG]  [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen  +  1);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  pfx.charAt(pfxLen  +  1);	  pfxLen    -=    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	10441	None
2905	[BUG]  [BUGGY]  return  createLong(dec,  exp);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createLong(dec,  exp);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(dec,  exp);	  return    createLong(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	6265	None
2906	[BUG]  [BUGGY]  return  createLong(str,  dec);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createLong(str,  dec);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str,  dec);	  return    createLong(str,    exp);    	non-compiled	[CE]  illegal  start  of  expression	6265	None
2953	[BUG]  [BUGGY]  }  else  if(str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  }  else  if(str.length()  ==  0)  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.length()  ==  0)  {	  [Delete]    else    if(str.length()    ==    0)    {    if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12182	None
2954	[BUG]  [BUGGY]  }  else  if(str.length()  ==  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  }  else  if(str.length()  ==  1)  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.length()  ==  1)  {	  [Delete]    else    if(str.length()    ==    0)    {    if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12182	None
2977	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str	  if(decPos    <    decPos)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')    +    1;    if(decPos    >=    decPos)    {    return    createDecimal(str    	non-compiled	[CE]  illegal  start  of  expression	4922	None
2978	[BUG]  [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str	  if(decPos    <    decPos)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')    +    1;    if(decPos    >=    decPos)    {    return    createDecimal(str    	non-compiled	[CE]  illegal  start  of  expression	4922	None
3002	[BUG]  [BUGGY]  final  char  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  char  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  hexDigits  =(hexDigits  ==  1)?  str.length()  :  0;	  final    int    hexDigits    =(hexDigits    ==    1)?    str.length()    -    1    :    0;    	non-compiled	[CE]  illegal  start  of  expression	7082	None
3025	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen));  [CE]  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen));  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfxLen));	  Arrays.sort(str.charAt(0),    str.length()));    	non-compiled	[CE]  	7622	None
3026	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1));  [CE]  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1));  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.length()  -  1));	  Arrays.sort(str.charAt(0),    str.length()));    	non-compiled	[CE]  	7622	None
3074	[BUG]  [BUGGY]  break  &=  str.length();  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  break  &=  str.length();  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  &=  str.length();	  break    +=    str.length();    	non-compiled	[CE]  ';'  expected	3697	None
3098	[BUG]  [BUGGY]  for(final  String  dec  :  str)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  dec  :  str)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  dec  :  str)  {	  for(final    String    pfx    :    str)    {    	non-compiled	[CE]  illegal  start  of  expression	242	None
3121	[BUG]  [BUGGY]  for(final  String  pfx  :  str.length),  pfxLen  =  0;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  pfx  :  str.length),  pfxLen  =  0;  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  str.length),  pfxLen  =  0;	  for(final    String    pfx    :    pfx.length),    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6121	None
3122	[BUG]  [BUGGY]  for(final  String  pfxLen  :  str.length),  pfxLen  =  0;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  pfxLen  :  str.length),  pfxLen  =  0;  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  :  str.length),  pfxLen  =  0;	  for(final    String    pfx    :    pfx.length),    pfxLen    =    0;    	non-compiled	[CE]  illegal  start  of  expression	6121	None
3146	[BUG]  [BUGGY]  if(pfx.endsWith( "/.0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith( "/.0 "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "/.0 "))  {	  if(pfx.endsWith(   ".0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	13141	None
3169	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  return  createBigInteger(str);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createBigInteger(str);	  return    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	3913	None
3218	[BUG]  [BUGGY]  final  char  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  char  pfxLen  =  str.length();  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  char  pfxLen  =  str.length();	  pfxLen    -=    str.charAt(pfxLen    +    1));    	non-compiled	[CE]  illegal  start  of  expression	482	None
3241	[BUG]  [BUGGY]  if(pfx  ==  null  ||  pfx.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  if(pfx  ==  null  ||  pfx.length()  ==  0)  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	if(pfx  ==  null  ||  pfx.length()  ==  0)  {	  if(mant    ==    null    ||    mant.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1082	None
3265	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1)+  1);	  Arrays.sort(str.substring(0,    str.length())+    1);    	non-compiled	[CE]  illegal  start  of  expression	13801	None
3289	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isWhitespace(str)&&  StringUtils.isDigit(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)&&  StringUtils.isDigit(str))  {	  if(StringUtils.isWhitespace(str)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15421	None
3290	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(pfx)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isWhitespace(pfx)||  StringUtils.isDigit(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(pfx)||  StringUtils.isDigit(str))  {	  if(StringUtils.isWhitespace(str)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15421	None
3313	[BUG]  [BUGGY]  if(pfx.endsWith(hex_prefix))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith(hex_prefix))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith(hex_prefix))  {	  if(pfx.startsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	3362	None
3410	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(hexDigits    <    1)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4826	None
3433	[BUG]  [BUGGY]  return  createInt(str,  exp);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createInt(str,  exp);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str,  exp);	  return    createInt(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	6266	None
3434	[BUG]  [BUGGY]  return  createInt(str,  hexDigits  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createInt(str,  hexDigits  +  1);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createInt(str,  hexDigits  +  1);	  return    createInt(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	6266	None
3457	[BUG]  [BUGGY]  final  int  hexDigits  =(int)mant.length();  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  int  hexDigits  =(int)mant.length();  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =(int)mant.length();	  final    int    hexDigits    =(int)str.length();    	non-compiled	[CE]  illegal  start  of  expression	5342	None
3505	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  String  decPos  =  pfx.charAt(0);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  pfx.charAt(0);	  char    decPos    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	2762	None
3506	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(1);  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  String  decPos  =  pfx.charAt(1);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  pfx.charAt(1);	  char    decPos    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	2762	None
3530	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  +=  pfx.charAt(pfxLen  -  1));  }  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  if(pfxLen  >  0)  {  pfxLen  +=  pfx.charAt(pfxLen  -  1));  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(pfxLen  >  0)  {  pfxLen  +=  pfx.charAt(pfxLen  -  1));  }	  pfxLen    +=    pfx.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	530	None
3553	[BUG]  [BUGGY]  return  Integer.decode(dec,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(dec,  Integer.MIN_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(dec,  Integer.MIN_VALUE);	  return    Integer.decode(mant,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	5857	None
3602	[BUG]  [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith( "- "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "# ")||  pfx.endsWith( "- "))  {	  if(pfx.startsWith(   "#   ")||    pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	4202	None
3625	[BUG]  [BUGGY]  return  Integer.decode(dec,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(dec,  Integer.MAX_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(dec,  Integer.MAX_VALUE);	  return    Integer.decode(mant,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2521	None
3649	[BUG]  [BUGGY]  Arrays.sort(str,  hex_prefixes,  null);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  Arrays.sort(str,  hex_prefixes,  null);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  hex_prefixes,  null);	  Arrays.sort(str,    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	3457	None
3650	[BUG]  [BUGGY]  Arrays.sort(str,  hex_prefixes,  false);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  Arrays.sort(str,  hex_prefixes,  false);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(str,  hex_prefixes,  false);	  Arrays.sort(str,    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	3457	None
3673	[BUG]  [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(decPos  >  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	362	None
3697	[BUG]  [BUGGY]  Arrays.sort(str,  true);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  Arrays.sort(str,  true);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	Arrays.sort(str,  true);	  Arrays.sort(str,    false);    	non-compiled	[CE]  illegal  start  of  type	2498	None
3721	[BUG]  [BUGGY]  pfxLen  -=(str  ==  null)?  pfx.length()  :  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=(str  ==  null)?  pfx.length()  :  str.length();  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=(str  ==  null)?  pfx.length()  :  str.length();	  pfxLen    -=(pfx    ==    null)?    pfx.length()    :    str.length();    	non-compiled	[CE]  illegal  start  of  expression	7262	None
3722	[BUG]  [BUGGY]  pfxLen  -=(pfx  ==  null)?  str.length()  :  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=(pfx  ==  null)?  str.length()  :  pfx.length();  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=(pfx  ==  null)?  str.length()  :  pfx.length();	  pfxLen    -=(pfx    ==    null)?    pfx.length()    :    str.length();    	non-compiled	[CE]  illegal  start  of  expression	7262	None
3769	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen)+  1);  [CE]  not  a  statement  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  pfxLen)+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfxLen)+  1);	  Arrays.sort(str.charAt(0),    str.length())+    1);    	non-compiled	[CE]  not  a  statement	1382	None
3770	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1)+  1);  [CE]  not  a  statement  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  str.length()  -  1)+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.length()  -  1)+  1);	  Arrays.sort(str.charAt(0),    str.length())+    1);    	non-compiled	[CE]  not  a  statement	1382	None
3793	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2701	None
3817	[BUG]  [BUGGY]  }  else  if(str  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  }  else  if(str  ==  null)  {  return  null;  }  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}  else  if(str  ==  null)  {  return  null;  }	  [Delete]    else    if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11642	None
3818	[BUG]  [BUGGY]  }  else  if(str  ==  null  ||  str.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  }  else  if(str  ==  null  ||  str.length()  ==  0)  {  return  null;  }  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}  else  if(str  ==  null  ||  str.length()  ==  0)  {  return  null;  }	  [Delete]    else    if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11642	None
3889	[BUG]  [BUGGY]  for(final  String  pfx  :  str)  {  pfxLen;  }  [CE]  not  a  statement  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  for(final  String  pfx  :  str)  {  pfxLen;  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfx  :  str)  {  pfxLen;  }	  for(final    String    pfx    :    str)    {    break;    }    	non-compiled	[CE]  not  a  statement	2066	None
3962	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  final  char  pfx  =  str.charAt(pfxLen);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	final  char  pfx  =  str.charAt(pfxLen);	  final    String    pfx    =    str.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  type	4874	None
4009	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length());  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length());  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen.length());	  final    String    str    =    pfx.substring(0,    pfxLen.length()    -    4);    	non-compiled	[CE]  illegal  start  of  type	3842	None
4010	[BUG]  [BUGGY]  final  String  str  =  pfxLen.substring(0,  pfxLen.length());  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  str  =  pfxLen.substring(0,  pfxLen.length());  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfxLen.substring(0,  pfxLen.length());	  final    String    str    =    pfx.substring(0,    pfxLen.length()    -    4);    	non-compiled	[CE]  illegal  start  of  type	3842	None
4034	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length())+  1,  pfxLen);	  Arrays.sort(str.getChars(0,    str.length()    -    1),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	4082	None
4057	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfx.length);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfx.length);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfx.length);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	6338	None
4058	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxX);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxX);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfxX);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	6338	None
4082	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isInfinite(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isInfinite(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1466	None
4129	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  String  pfx  =  str.substring(pfxLen  +  1);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.substring(pfxLen  +  1);	  final    String    pfx    =    pfx.substring(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2785	None
4154	[BUG]  [BUGGY]  for(final  String  str  :  pfx)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  str  :  pfx)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  pfx)  {	  for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	2234	None
4178	[BUG]  [BUGGY]  final  String  decPos  =  pfx.indexOf('.')+  1;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  decPos  =  pfx.indexOf('.')+  1;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.indexOf('.')+  1;	  final    char    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	5017	None
4249	[BUG]  [BUGGY]  final  Arrays.sort(str.getIntValue()  +  1);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str.getIntValue()  +  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.getIntValue()  +  1);	  final    Arrays.sort(str.getIntValue());    	non-compiled	[CE]  <identifier>  expected	5737	None
4273	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(str.length());  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.charAt(str.length());  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(str.length());	  final    String    pfx    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6062	None
4274	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(str.length());  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  char  pfx  =  str.charAt(str.length());  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  char  pfx  =  str.charAt(str.length());	  final    String    pfx    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6062	None
4321	[BUG]  [BUGGY]  if(decPos  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10562	None
4346	[BUG]  [BUGGY]  if(str  ==  null)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  if(str  ==  null)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }  [BUGGY]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  int  decPos  =  str.length();  if(dec!=  0)  {  return  new  Integer(dec);  }	  }    	non-compiled	[CE]  illegal  start  of  expression	1994	None
4370	[BUG]  [BUGGY]  char  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  char  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	char  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx;	  int    pfxLen    =(pfx    ==    null)?    str.length()    :    pfx;    	non-compiled	[CE]  illegal  start  of  expression	1538	None
4394	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1)+  1;  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen  -  1)+  1;	  pfxLen    -=    str.charAt(pfxLen    -    1));    	non-compiled	[CE]  illegal  start  of  expression	12901	None
4442	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  numDecimal  =  str.indexOf('.');  if(hexDigits  >  10)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(hexDigits  <  1)  {  int  numDecimal  =  str.indexOf('.');  if(hexDigits  >  10)  {  return  createLong(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <  1)  {  int  numDecimal  =  str.indexOf('.');  if(hexDigits  >  10)  {  return  createLong(str);  }	  if(hexDigits    <    1)    {    int    numDecimal    =    str.indexOf(hexDigits);    if(hexDigits    >    10)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	770	None
4490	[BUG]  [BUGGY]  pfxLen  +=  pfx.charAt(pfx)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  +=  pfx.charAt(pfx)+  1;  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  pfx.charAt(pfx)+  1;	  pfxLen    +=    str.charAt(pfx)+    1;    	non-compiled	[CE]  illegal  start  of  expression	1874	None
4513	[BUG]  [BUGGY]  return  createBigDecimal(str.charAt(0));  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(str.charAt(0));  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.charAt(0));	  return    createBigInteger(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	6410	None
4538	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  4);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  4);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxLen  +  4);	  final    String    pfxLen    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	3602	None
4562	[BUG]  [BUGGY]  return  createBigDecimal(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(str,  null);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  null);	  return    createBigDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	6097	None
4586	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  2);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  pfx.substring(0,  str.length()  -  2);	  String    str    =    pfx.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2593	None
4633	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  +=  str.charAt(pfxLen  -  1);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  +=  str.charAt(pfxLen  -  1);	  pfxLen    +=    pfx.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10442	None
4705	[BUG]  [BUGGY]  return  LongBits.toLongBits(str,  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  LongBits.toLongBits(str,  1);  [BUGGY]        }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str,  1);	  return    LongBits.toLongBits(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	6146	None
4730	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(pfxLen  +  1);	  final    String    pfxLen    =    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  type	14522	None
4754	[BUG]  [BUGGY]  if(StringUtils.isAssign(str)&&  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(str)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isAssign(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	16202	None
4777	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  String  pfx  =  str.substring(pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.substring(pfxLen);	  final    String    pfx    =    pfx.substring(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2786	None
4802	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(1,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(1,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(1,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5257	None
4825	[BUG]  [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1)-  1;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex_prefixes  =  str.substring(0,  str.length()  -  1)-  1;	  final    String    hex_prefixes    =    str.substring(0,    str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	15002	None
4850	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isDigit(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  StringUtils.isDigit(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	842	None
4921	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  +  1)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  pfxLen  -=  str.charAt(pfxLen  +  1)+  1;  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen  +  1)+  1;	  pfxLen    -=    str.charAt(pfxLen    +    1));    	non-compiled	[CE]  illegal  start  of  expression	482	None
4945	[BUG]  [BUGGY]  for(final  String  pfx  :  str.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  pfx  :  str.length)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  str.length)  {	  for(final    String    pfx    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	6122	None
4946	[BUG]  [BUGGY]  for(final  String  pfxLen  :  pfx.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  pfxLen  :  pfx.length)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  :  pfx.length)  {	  for(final    String    pfx    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	6122	None
4993	[BUG]  [BUGGY]  pfxLen  =  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  pfxLen  =  pfx.length();  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	pfxLen  =  pfx.length();	  pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	3302	None
5018	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isWild(str)&&  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(str  ==  null  ||  StringUtils.isWild(str)&&  ArrayUtils.isInfinite(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  StringUtils.isWild(str)&&  ArrayUtils.isInfinite(str))  {	  if(str    ==    null    ||    StringUtils.isWild(str)||    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15602	None
5042	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  false);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.getIntValue(),  false);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue(),  false);	  Arrays.sort(str.getIntValue(),    null);    	non-compiled	[CE]  illegal  start  of  expression	5738	None
5089	[BUG]  [BUGGY]  break  +=  1;  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  break  +=  1;  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  +=  1;	  break    +=    4;    	non-compiled	[CE]  ';'  expected	5761	None
5113	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-0x "  }  ;  [CE]  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-0x "  }  ;  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-0x ",   "# ",   "-0x "  }  ;	  Arrays.sort(str.charAt(0));    	non-compiled	[CE]  	1	None
5162	[BUG]  [BUGGY]  Arrays.sort(hexDigits,  false);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(hexDigits,  false);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(hexDigits,  false);	  Arrays.sort(hex_prefixes,    true);    	non-compiled	[CE]  illegal  start  of  expression	2185	None
5257	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)&&  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isWhitespace(str)&&  ArrayUtils.isInfinite(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)&&  ArrayUtils.isInfinite(str))  {	  if(StringUtils.isWhitespace(str)||    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	13622	None
5282	[BUG]  [BUGGY]  final  int  decPos  =  pfx.length()  +  1;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  int  decPos  =  pfx.length()  +  1;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  int  decPos  =  pfx.length()  +  1;	  final    int    decPos    =    pfx.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	5018	None
5353	[BUG]  [BUGGY]  if(lastChar  ==  null  ||!Character.isUpperCase(lastChar))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(lastChar  ==  null  ||!Character.isUpperCase(lastChar))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(lastChar  ==  null  ||!Character.isUpperCase(lastChar))  {	  if(mant    ==    null    ||!Character.isUpperCase(lastChar))    {    	non-compiled	[CE]  illegal  start  of  expression	4562	None
5354	[BUG]  [BUGGY]  if(str  ==  null  ||!Character.isUpperCase(lastChar))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(str  ==  null  ||!Character.isUpperCase(lastChar))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||!Character.isUpperCase(lastChar))  {	  if(mant    ==    null    ||!Character.isUpperCase(lastChar))    {    	non-compiled	[CE]  illegal  start  of  expression	4562	None
5378	[BUG]  [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  <  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  <  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')  +  1;  if(decPos  <  decPos)  {  return  createInteger(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3145	None
5401	[BUG]  [BUGGY]  String  str  =(String)str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =(String)str.substring(0,  str.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)str.substring(0,  str.length());	  String    str    =(String)str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3062	None
5426	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	602	None
5449	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  return  createInteger(str,  pfxLen  +  1);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInteger(str,  pfxLen  +  1);	  return    createInteger(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2282	None
5474	[BUG]  [BUGGY]  return  Integer.parseFloat(str);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.parseFloat(str);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.parseFloat(str);	  return    Integer.parseInt(str);    	non-compiled	[CE]  illegal  start  of  expression	5497	None
5497	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1));  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  1));  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen  -  1));	  pfxLen    -=    pfx.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	9601	None
5522	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  8)  {  //  too  many  for  Long  return  createLong(str);  }	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5402	None
5546	[BUG]  [BUGGY]  if(pfx.endsWith( "0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith( "0 "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "0 "))  {	  if(pfx.startsWith(   "0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	722	None
5569	[BUG]  [BUGGY]  Arrays.sort(str.getAlternatives(),  true);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.getAlternatives(),  true);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getAlternatives(),  true);	  Arrays.sort(str.getAlternatives(),    false);    	non-compiled	[CE]  illegal  start  of  expression	5954	None
5593	[BUG]  [BUGGY]  if(decPos  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3674	None
5594	[BUG]  [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3674	None
5617	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1298	None
5690	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  System.arraycopy(str,  0,  str.length();  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length();	  System.arraycopy(str,    0,    str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4994	None
5714	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  str.charAt(pfxLen  -  2);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen  -  2);	  pfxLen    -=    str.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14642	None
5738	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  4);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  4);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen  +  4);	  final    String    pfx    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	5906	None
5785	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1));  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1));	  String[]    hex_prefixes    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	2426	None
5786	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  4));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  4));  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  4));	  String[]    hex_prefixes    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	2426	None
5809	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfx_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfx_prefixes);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfx_prefixes);	  Arrays.sort(str.substring(pfxLen    +    1),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	14581	None
5857	[BUG]  [BUGGY]  String  decPos  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  String  decPos  =  str.length();  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  str.length();	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	577	None
5858	[BUG]  [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  String  decPos  =  pfx.substring(0,  pfxLen);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	String  decPos  =  pfx.substring(0,  pfxLen);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  expression	577	None
5881	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isDigit(str))  {  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(StringUtils.isBlank(str)&&  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2978	None
5906	[BUG]  [BUGGY]  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  mant.substring(0,  mant.length());  if(str.charAt(0)  ==  '/')  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '/')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10082	None
5929	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  pfxLen  -=  str.charAt(pfxLen));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(pfxLen));	  pfxLen    -=    pfx.charAt(pfxLen));    	non-compiled	[CE]  ';'  expected	12902	None
5930	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen));  }  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen));  }  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(pfxLen  >  0)  {  pfxLen  -=  str.charAt(pfxLen));  }	  pfxLen    -=    pfx.charAt(pfxLen));    	non-compiled	[CE]  ';'  expected	12902	None
5977	[BUG]  [BUGGY]  if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }	  if(decPos    >    10)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	9902	None
6002	[BUG]  [BUGGY]  break  -=  pfxLen.length();  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  break  -=  pfxLen.length();  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  -=  pfxLen.length();	  break    +=    pfxLen.length();    	non-compiled	[CE]  ';'  expected	15122	None
6122	[BUG]  [BUGGY]  for(final  String  str  :  str.substring(1))  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  for(final  String  str  :  str.substring(1))  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  str.substring(1))  {	  for(final    String    str    :    str.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	4501	None
6145	[BUG]  [BUGGY]  final  String  decPos  =  pfx.size();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  decPos  =  pfx.size();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  decPos  =  pfx.size();	  String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	4442	None
6146	[BUG]  [BUGGY]  String  decPos  =  pfx.toLowerCase();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.toLowerCase();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.toLowerCase();	  String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	4442	None
6169	[BUG]  [BUGGY]  if(StringUtils.isAssign(str)&&  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(str)&&  StringUtils.isDigit(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(str)&&  StringUtils.isDigit(str))  {	  if(StringUtils.isAssign(str)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15422	None
6170	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isDigit(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)||  StringUtils.isDigit(str))  {	  if(StringUtils.isAssign(str)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15422	None
6194	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes)-  1;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes)-  1;	  final    String    pfx    =    str.toLowerCase(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	1609	None
6242	[BUG]  [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  2  :  hex_prefixes.length;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  2  :  hex_prefixes.length;  [BUGGY]        for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =(hex_prefixes  ==  null)?  2  :  hex_prefixes.length;	  final    int    pfxLen    =(hex_prefixes    ==    null)?    1    :    hex_prefixes.length;    	non-compiled	[CE]  illegal  start  of  expression	2810	None
6265	[BUG]  [BUGGY]  return  createLong(str,  pfxLen  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  return  createLong(str,  pfxLen  +  1);  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  pfxLen  +  1);	  return    createLong(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11402	None
6266	[BUG]  [BUGGY]  return  createLong(str,  exp  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  return  createLong(str,  exp  +  1);  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  exp  +  1);	  return    createLong(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11402	None
6290	[BUG]  [BUGGY]  for(final  String  str  :  dec.charAt(0))  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  for(final  String  str  :  dec.charAt(0))  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  dec.charAt(0))  {	  for(final    String    str    :    d.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	6386	None
6314	[BUG]  [BUGGY]  return  Integer.toLongBits(str);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.toLongBits(str);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongBits(str);	  return    Integer.decode(str);    	non-compiled	[CE]  illegal  start  of  expression	3542	None
6410	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length();  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [CE]  ')'  expected  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length();  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  mant.length();  if(str.charAt(0)  ==  '-')  {  return  createLong(str);  }	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    mant.length()    -    1);    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	5258	None
6434	[BUG]  [BUGGY]  if(str.length()  ==  1)  {  if(!Character.isDigit(str.charAt(0)))  {  return  Integer.decode(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(str.length()  ==  1)  {  if(!Character.isDigit(str.charAt(0)))  {  return  Integer.decode(str);  }  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  1)  {  if(!Character.isDigit(str.charAt(0)))  {  return  Integer.decode(str);  }	  if(str.length()    ==    0)    {    if(!Character.isDigit(str.charAt(0)))    {    return    Integer.decode(str);    }    	non-compiled	[CE]  illegal  start  of  expression	15901	None
6457	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  <  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6050	None
6482	[BUG]  [BUGGY]  if(pfx.startsWith(hex)||  pfx.endsWith(hexLen))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(hex)||  pfx.endsWith(hexLen))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex)||  pfx.endsWith(hexLen))  {	  if(pfx.startsWith(hex)||    pfx.startsWith(hex))    {    	non-compiled	[CE]  illegal  start  of  expression	11161	None
6506	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxPrefixLen  +  1,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxPrefixLen  +  1,  pfx.length);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxPrefixLen  +  1,  pfx.length);	  final    String    pfxLen    =    pfx.substring(pfxLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	13261	None
6577	[BUG]  [BUGGY]  Arrays.sort(str,  true);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str,  true);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str,  true);	  Arrays.sort(str,    false);    	non-compiled	[CE]  illegal  start  of  type	2162	None
6650	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)/  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)/  2);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)/  2);	  Arrays.sort(str.substring(0,    pfxLen)+    2);    	non-compiled	[CE]  illegal  start  of  expression	4298	None
6698	[BUG]  [BUGGY]  if(pfx.equals( "# ")||  pfx.equals( "# "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.equals( "# ")||  pfx.equals( "# "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.equals( "# ")||  pfx.equals( "# "))  {	  if(pfx.equals(   "#   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None
6722	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isISOControl(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  if(str  ==  null  ||  StringUtils.isISOControl(str))  {  [BUGGY]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null  ||  StringUtils.isISOControl(str))  {	  if(str    ==    null    ||    StringUtils.isLiteralValue(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2954	None
6746	[BUG]  [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  1)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex  =  str.substring(0,  str.length()  -  1)-  1;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =  str.substring(0,  str.length()  -  1)-  1;	  final    String    hex    =    str.substring(0,    str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	4262	None
6793	[BUG]  [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(dec,  str.substring(pfxLen),  hex_prefixes);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(dec,  str.substring(pfxLen),  hex_prefixes);	  Arrays.sort(str.substring(pfxLen),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6577	None
6794	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen),  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(pfxLen),  hexDigits);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen),  hexDigits);	  Arrays.sort(str.substring(pfxLen),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6577	None
6842	[BUG]  [BUGGY]  if(str.indexOf('.')  >=  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.indexOf('.')  >=  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.indexOf('.')  >=  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(decPos    >    -1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3745	None
6962	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH,  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH,  hex_prefixes);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH,  hex_prefixes);	  final    String    pfx    =    str.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	1021	None
7010	[BUG]  [BUGGY]  if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  10)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }	  if(decPos    ==    10)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6722	None
7058	[BUG]  [BUGGY]  return  createBigDecimal(str);  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  return  createBigDecimal(str);  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createBigDecimal(str);	  if(hexDigits    <    1)    {    if(hexDigits    %    2    ==    0)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8222	None
7081	[BUG]  [BUGGY]  final  String[]  hexDigits  =  str.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  final  String[]  hexDigits  =  str.charAt(0);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	final  String[]  hexDigits  =  str.charAt(0);	  final    char[]    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	8582	None
7154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  1);  if(e.getNumerics()  ==  0)  {	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    1);    if(e.getNumerics()    ==    0)    {    return    	non-compiled	[CE]  illegal  start  of  expression	1394	None
7177	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  return  createInteger(str,  pfxLen);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createInteger(str,  pfxLen);	  if(pfx.startsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  type	3362	None
7178	[BUG]  [BUGGY]  return  createLong(str,  pfx);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  return  createLong(str,  pfx);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  pfx);	  if(pfx.startsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  type	3362	None
7202	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '0')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.charAt(0)  ==  '0')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.charAt(0)  ==  '0')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }	  final    Integer    int    =    Integer.valueOf(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3002	None
7274	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(pfxLen  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  str.charAt(pfxLen  +  2);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(pfxLen  +  2);	  pfxLen    -=    str.charAt(pfxLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1801	None
7298	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  2);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length()  -  2);	  final    String    pfx    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	5089	None
7322	[BUG]  [BUGGY]  pfxLen  =(str  ==  null)?  0  :  str.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  pfxLen  =(str  ==  null)?  0  :  str.length();  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(str  ==  null)?  0  :  str.length();	  pfxLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3098	None
7369	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1)-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1)-  1;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  1)-  1;	  String[]    hex_prefixes    =    str.substring(0,    str.length())-    1;    	non-compiled	[CE]  illegal  start  of  expression	10742	None
7418	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	}	  if(hexDigits    <    2)    {    if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  type	7862	None
7442	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length()  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length()  +  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.length()  +  1);	  final    String[]    hex_prefixes    =    str.get(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1970	None
7489	[BUG]  [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  +  2;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  int  pfxLen  =  hex_prefixes.length  +  2;  [BUGGY]        for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  hex_prefixes.length  +  2;	  final    int    pfxLen    =    hex_prefixes.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5426	None
7538	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(0,  pfxLen  +  1);	  final    String    pfxLen    =    pfx.substring(0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  type	14521	None
7562	[BUG]  [BUGGY]  if(decPos  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  ==  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	9541	None
7586	[BUG]  [BUGGY]  final  static  String[]  hexDigits  =  str.charAt(1);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  final  static  String[]  hexDigits  =  str.charAt(1);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	final  static  String[]  hexDigits  =  str.charAt(1);	  final    static    String[]    hexDigits    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	4226	None
7610	[BUG]  [BUGGY]  if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createInteger(str);  }	  if(decPos    <    8)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4201	None
7658	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1490	None
7705	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1,  pfxLen);  [CE]  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1,  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1,  pfxLen);	  Arrays.sort(str.substring(0,    str.length()),    pfxLen);    	non-compiled	[CE]  	5882	None
7706	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1),  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  str.length()  -  1),  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length()  -  1),  pfxLen);	  Arrays.sort(str.substring(0,    str.length()),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	5882	None
7754	[BUG]  [BUGGY]  return  Integer.toLongByte(str,  0);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.toLongByte(str,  0);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongByte(str,  0);	  return    Integer.toLongByte(str);    	non-compiled	[CE]  illegal  start  of  expression	5498	None
7849	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  if(hexDigits  ==  0)  {  return  createLong(str);  }  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hexDigits  ==  0)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    if(hexDigits    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6302	None
7898	[BUG]  [BUGGY]  final  char  pfx  =  pfx.substring(pfxLen  +  1,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  char  pfx  =  pfx.substring(pfxLen  +  1,  pfx.length);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  pfx  =  pfx.substring(pfxLen  +  1,  pfx.length);	  final    String    pfx    =    pfx.substring(pfxLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	8701	None
7921	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  hex_prefixes.length);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  Arrays.sort(hex_prefixes,  0,  hex_prefixes.length);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  hex_prefixes.length);	  Arrays.sort(hex_prefixes,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	16382	None
7946	[BUG]  [BUGGY]  if(str.charAt(0)  ==  pfxLen)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(str.charAt(0)  ==  pfxLen)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(str.charAt(0)  ==  pfxLen)  {  if(str.startsWith(pfx))  {  return  createInteger(str);  }	  if(str.charAt(0)    ==    pfxLen)    {    if(str.endsWith(pfx))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	782	None
7970	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.charAt(1);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(1);	  final    String    pfx    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	2449	None
7993	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen),  hex_prefix);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(pfxLen),  hex_prefix);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen),  hex_prefix);	  Arrays.sort(hex_prefixes.substring(pfxLen),    str);    	non-compiled	[CE]  illegal  start  of  expression	3242	None
8017	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  String  pfx  =  str.charAt(pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  str.charAt(pfxLen);	  final    String    pfx    =    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	12541	None
8018	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  char  pfx  =  str.charAt(pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  char  pfx  =  str.charAt(pfxLen);	  final    String    pfx    =    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	12541	None
8042	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length(),  4);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  System.arraycopy(str,  0,  str.length(),  4);  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length(),  4);	  System.arraycopy(str,    0,    str.length(),    0);    	non-compiled	[CE]  illegal  start  of  expression	8762	None
8090	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(0);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  str.charAt(0);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  str.charAt(0);	  pfxLen    -=    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	9602	None
8114	[BUG]  [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  0;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  0;	  int    pfxLen    =(hex_prefixes    ==    null)?    str.length()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	15662	None
8138	[BUG]  [BUGGY]  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(StringUtils.isBlank(str)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	842	None
8162	[BUG]  [BUGGY]  if(pfxLen  ==  0)  {  break  &=  pfx.length();  }  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  if(pfxLen  ==  0)  {  break  &=  pfx.length();  }  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	if(pfxLen  ==  0)  {  break  &=  pfx.length();  }	  break    &=    pfx.length();    	non-compiled	[CE]  ';'  expected	3698	None
8186	[BUG]  [BUGGY]  return  createBlank(str,  null);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBlank(str,  null);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(str,  null);	  return    createBlank(str);    	non-compiled	[CE]  illegal  start  of  type	1105	None
8210	[BUG]  [BUGGY]  if(pfx.startsWith( "- ")||  pfx.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "- ")||  pfx.startsWith( "- "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "- ")||  pfx.startsWith( "- "))  {	  if(pfx.endsWith(   "-   ")||    pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	4466	None
8234	[BUG]  [BUGGY]  return  0;  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  return  0;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  0;	  return    this;    	non-compiled	[CE]  illegal  start  of  type	6025	None
8282	[BUG]  [BUGGY]  for(final  String  pfxLen  :  str)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  pfxLen  :  str)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfxLen  :  str)  {	  for(final    String    pfxLen    :    pfx_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	15241	None
8329	[BUG]  [BUGGY]  pfxLen  +=  str.length();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  +=  str.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  str.length();	  final    String    pfxLen    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	3602	None
8330	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(str.length()  -  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  +=  str.charAt(str.length()  -  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  str.charAt(str.length()  -  1);	  final    String    pfxLen    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	3602	None
8378	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str).longValue();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.toLongBits(str).longValue();  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str).longValue();	  final    Integer    int    =    Integer.toLongBits(str).intValue();    	non-compiled	[CE]  illegal  start  of  expression	14102	None
8401	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  INTEGER_ZERO);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  System.arraycopy(str,  0,  str.length(),  1,  INTEGER_ZERO);  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length(),  1,  INTEGER_ZERO);	  System.arraycopy(str,    0,    str.length()    -    1,    INTEGER_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	4705	None
8426	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  return  createInteger(str,  pfxLen);  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createInteger(str,  pfxLen);	  return    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  expression	1442	None
8474	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen)+  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen)+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()  -  1,  pfxLen)+  1);	  Arrays.sort(str.getChars(0,    str.length()    -    1,    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	1742	None
8522	[BUG]  [BUGGY]  if(str.startsWith( "0 "))  {  return  null;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  if(str.startsWith( "0 "))  {  return  null;  }  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(str.startsWith( "0 "))  {  return  null;  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	4273	None
8617	[BUG]  [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  String  str  =  pfx.substring(0,  str.length()  -  1)+  1;  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  pfx.substring(0,  str.length()  -  1)+  1;	  String    str    =    pfx.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	2594	None
8641	[BUG]  [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(decPos  >  -1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(decPos    <    decPos)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3146	None
8666	[BUG]  [BUGGY]  if(pfx.startsWith( "-0 ")||  pfx.startsWith( "-1))  {  [CE]  unclosed  string  literal  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "-0 ")||  pfx.startsWith( "-1))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-0 ")||  pfx.startsWith( "-1))  {	  if(pfx.startsWith(   "-1   ")||    pfx.startsWith(   "-1))    {    	non-compiled	[CE]  unclosed  string  literal	13021	None
8689	[BUG]  [BUGGY]  Arrays.sort(mant,  null);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(mant,  null);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(mant,  null);	  Arrays.sort(hex_prefixes,    null);    	non-compiled	[CE]  illegal  start  of  expression	2186	None
8690	[BUG]  [BUGGY]  Arrays.sort(hexDigits,  null);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(hexDigits,  null);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(hexDigits,  null);	  Arrays.sort(hex_prefixes,    null);    	non-compiled	[CE]  illegal  start  of  expression	2186	None
8738	[BUG]  [BUGGY]  int  pfxLen  =(pfx!=  null)?  str.length()  -  pfxLen;  [CE]  :  expected  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  int  pfxLen  =(pfx!=  null)?  str.length()  -  pfxLen;  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx!=  null)?  str.length()  -  pfxLen;	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    pfxLen;    	non-compiled	[CE]  :  expected	8642	None
8786	[BUG]  [BUGGY]  if(str  ==  INT_0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str  ==  INT_0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  INT_0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    3)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14282	None
8834	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pfxLen.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(HEXDigits,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  pfxLen.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(HEXDigits,  0,  pfxLen);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  pfxLen.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(HEXDigits,  0,  pfxLen);	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(HEXDigits,    0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	962	None
8858	[BUG]  [BUGGY]  final  char  pfx  =  str.charAt(pfxLen  -  1);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  final  char  pfx  =  str.charAt(pfxLen  -  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	final  char  pfx  =  str.charAt(pfxLen  -  1);	  final    String    pfx    =    str.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	8462	None
8954	[BUG]  [BUGGY]  int  pfxLen  =  hx_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  int  pfxLen  =  hx_prefixes.length();  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =  hx_prefixes.length();	  int    pfxLen    =    hex_prefixes.length()    -    4;    	non-compiled	[CE]  illegal  start  of  expression	6362	None
9001	[BUG]  [BUGGY]  return  createLong(str,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  return  createLong(str,  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createLong(str,  pfxLen);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  expression	13982	None
9002	[BUG]  [BUGGY]  return  createInteger(str,  pfx);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  return  createInteger(str,  pfx);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createInteger(str,  pfx);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  expression	13982	None
9026	[BUG]  [BUGGY]  if(pfx  ==  null  ||  pfx.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(pfx  ==  null  ||  pfx.length()  ==  0)  {  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfx  ==  null  ||  pfx.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	362	None
9049	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  1)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	3770	None
9073	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  null);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.getIntValue(),  null);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntValue(),  null);	  Arrays.sort(str.getIntValue());    	non-compiled	[CE]  illegal  start  of  type	2	None
9074	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  dec);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.getIntValue(),  dec);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntValue(),  dec);	  Arrays.sort(str.getIntValue());    	non-compiled	[CE]  illegal  start  of  type	2	None
9098	[BUG]  [BUGGY]  if(pfx.startsWith(hex)&&  pfx.endsWith(hex))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(hex)&&  pfx.endsWith(hex))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex)&&  pfx.endsWith(hex))  {	  if(pfx.startsWith(hex)||    pfx.endsWith(hex))    {    	non-compiled	[CE]  illegal  start  of  expression	11162	None
9122	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(StringUtils.isBlank(str)&&  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2977	None
9146	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  pfxLen);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	13802	None
9218	[BUG]  [BUGGY]  if(final  String  pfxLen  :  hex_prefixes)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  if(final  String  pfxLen  :  hex_prefixes)  {  break;  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if(final  String  pfxLen  :  hex_prefixes)  {  break;  }	  if(final    String    pfx    :    hex_prefixes)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13442	None
9242	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    1)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8161	None
9266	[BUG]  [BUGGY]  return  createLong(str,  mant  +  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  return  createLong(str,  mant  +  pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  mant  +  pfxLen);	  return    createLong(str,    mant    +    1);    	non-compiled	[CE]  illegal  start  of  expression	302	None
9290	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  pfxLen));  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  Arrays.sort(str.getChars(0,  str.length())+  1,  pfxLen));  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length())+  1,  pfxLen));	  Arrays.sort(str.getChars(0,    str.length()    -    1),    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	3794	None
9314	[BUG]  [BUGGY]  if(StringUtils.isAssign(str)&&  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(str)&&  StringUtils.isBlank(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isAssign(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	8041	None
9337	[BUG]  [BUGGY]  String  pfxLen  =  pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  String  pfxLen  =  pfx.length();  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =  pfx.length();	  String    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	5473	None
9338	[BUG]  [BUGGY]  final  String  pfxLen  =  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  final  String  pfxLen  =  str.length();  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	final  String  pfxLen  =  str.length();	  String    pfxLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	5473	None
9361	[BUG]  [BUGGY]  String  pfxLen  =(String)pfx.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  String  pfxLen  =(String)pfx.length();  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =(String)pfx.length();	  String    pfxLen    =(String)str.length();    	non-compiled	[CE]  illegal  start  of  expression	5474	None
9362	[BUG]  [BUGGY]  String  pfxLen  =(char)str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  String  pfxLen  =(char)str.length();  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  pfxLen  =(char)str.length();	  String    pfxLen    =(String)str.length();    	non-compiled	[CE]  illegal  start  of  expression	5474	None
9410	[BUG]  [BUGGY]  if(StringUtils.isBlank(mant)&&  ArrayUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isBlank(mant)&&  ArrayUtils.isInfinite(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isBlank(mant)&&  ArrayUtils.isInfinite(str))  {	  if(StringUtils.isBlank(str)&&    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1754	None
9434	[BUG]  [BUGGY]  final  Arrays.sort(str,  false);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str,  false);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str,  false);	  final    Arrays.sort(str,    null);    	non-compiled	[CE]  <identifier>  expected	5810	None
9482	[BUG]  [BUGGY]  String  str  =  str.substring(0x,  str.length());  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =  str.substring(0x,  str.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =  str.substring(0x,  str.length());	  String    str    =    str.substring(0,    str.length()    -    10);    	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	2702	None
2	[BUG]  [BUGGY]  break  +=  10;  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  break  +=  10;  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  +=  10;	  break    +=    4;    	non-compiled	[CE]  ';'  expected	5761	None
182	[BUG]  [BUGGY]  if(hexDigits  <=  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(hexDigits  <=  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  <=  4)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(decPos    <    decPos)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3146	None
241	[BUG]  [BUGGY]  String  decPos  =  pfx.toString();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.toString();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.toString();	  String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	4442	None
242	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt(pfxLen  -  1);	  String    decPos    =    pfx.size();    	non-compiled	[CE]  illegal  start  of  type	4442	None
302	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  if(str.endsWith(pfx))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  if(pfxLen  >  0)  {  if(str.endsWith(pfx))  {  return  createInteger(str);  }  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(pfxLen  >  0)  {  if(str.endsWith(pfx))  {  return  createInteger(str);  }	  for(final    String    pfx    :    str)    {    	non-compiled	[CE]  illegal  start  of  expression	242	None
362	[BUG]  [BUGGY]  final  char  decPos  =  pfx.indexOf('.')+  1;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  char  decPos  =  pfx.indexOf('.')+  1;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  decPos  =  pfx.indexOf('.')+  1;	  final    int    decPos    =    pfx.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	5018	None
422	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes.substring(pfxLen  +  1),  str);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(hex_prefixes.substring(pfxLen  +  1),  str);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(hex_prefixes.substring(pfxLen  +  1),  str);	  Arrays.sort(str.substring(pfxLen    +    1),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	14581	None
482	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isAssign(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	16202	None
601	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }	  if(hexDigits    ==    0)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	16142	None
721	[BUG]  [BUGGY]  if(pfx.endsWith( "-- ")||  pfx.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith( "-- ")||  pfx.startsWith( "-- "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "-- ")||  pfx.startsWith( "-- "))  {	  if(pfx.endsWith(   "-   ")||    pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	4466	None
722	[BUG]  [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith( "-1 ")||  pfx.startsWith( "- "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( "-1 ")||  pfx.startsWith( "- "))  {	  if(pfx.endsWith(   "-   ")||    pfx.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	4466	None
781	[BUG]  [BUGGY]  return  LongBits.toLongBits(str,  0L);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  LongBits.toLongBits(str,  0L);  [BUGGY]        }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str,  0L);	  return    LongBits.toLongBits(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	6146	None
782	[BUG]  [BUGGY]  return  LongBits.toLongBits(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  LongBits.toLongBits(str,  Integer.MAX_VALUE);  [BUGGY]        }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toLongBits(str,  Integer.MAX_VALUE);	  return    LongBits.toLongBits(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	6146	None
842	[BUG]  [BUGGY]  String  str  =(String)pfx.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =(String)pfx.substring(0,  str.length()  -  1);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)pfx.substring(0,  str.length()  -  1);	  String    str    =(String)pfx.substring(0,    pfxLen.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3577	None
901	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1490	None
962	[BUG]  [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( ".-- "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( ".-- "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-- ")||  pfx.endsWith( ".-- "))  {	  if(pfx.startsWith(   "--   ")||    pfx.endsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	13741	None
1022	[BUG]  [BUGGY]  String  str  =(String)str.substring(0,  pfxLen.length());  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  str  =(String)str.substring(0,  pfxLen.length());  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  str  =(String)str.substring(0,  pfxLen.length());	  String    str    =(String)pfx.substring(0,    pfxLen.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	3578	None
1381	[BUG]  [BUGGY]  if(StringUtils.isInteger(str)||  Character.isDigit(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(StringUtils.isInteger(str)||  Character.isDigit(str))  {  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(StringUtils.isInteger(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    Character.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2978	None
1442	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  return  createInteger(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  2)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  2)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  not  a  statement	3770	None
1501	[BUG]  [BUGGY]  if(hexDigits  ==  -1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  -1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  -1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4825	None
1622	[BUG]  [BUGGY]  return  createBigDecimal(str,  numeric);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(str,  numeric);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str,  numeric);	  return    createBigDecimal(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	16502	None
1681	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue()  +  1);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.getIntValue()  +  1);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntValue()  +  1);	  Arrays.sort(str.getIntValue());    	non-compiled	[CE]  illegal  start  of  type	2	None
1682	[BUG]  [BUGGY]  Arrays.sort(str.getIntegerValue());  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.getIntegerValue());  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.getIntegerValue());	  Arrays.sort(str.getIntValue());    	non-compiled	[CE]  illegal  start  of  type	2	None
1742	[BUG]  [BUGGY]  break  &=  pfx.charAt(0);  [CE]  ';'  expected  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  break  &=  pfx.charAt(0);  [BUGGY]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	break  &=  pfx.charAt(0);	  break    &=    pfx.length();    	non-compiled	[CE]  ';'  expected	3698	None
1921	[BUG]  [BUGGY]  if(pfxLen  >  10)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(pfxLen  >  10)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  >  10)  {	  if(pfxLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4370	None
1922	[BUG]  [BUGGY]  if(pfxLen  <  10)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(pfxLen  <  10)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(pfxLen  <  10)  {	  if(pfxLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4370	None
2041	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(hexDigits  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createPos(str);  }	  if(pfxLen    ==    1)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createPos(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3866	None
2102	[BUG]  [BUGGY]  pfxLen  +=  str.length()  *  2;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  +=  str.length()  *  2;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  +=  str.length()  *  2;	  final    String    pfxLen    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	3602	None
2162	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.substring(0,  str.length()),  1);	  final    String[]    hex_prefixes    =    str.get(str.substring(0,    str.length()),    0);    	non-compiled	[CE]  illegal  start  of  expression	7502	None
2281	[BUG]  [BUGGY]  return  createNumber(str,  false);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  return  createNumber(str,  false);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  createNumber(str,  false);	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	3914	None
2402	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0),  str.length())+  1);  [CE]  not  a  statement  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.getChars(0),  str.length())+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0),  str.length())+  1);	  Arrays.sort(str.getChars(0,    str.length()    +    1)+    1);    	non-compiled	[CE]  not  a  statement	1370	None
2462	[BUG]  [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()),  0);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  final  String[]  dec  =  str.substring(0,  str.length()),  0);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String[]  dec  =  str.substring(0,  str.length()),  0);	  final    String[]    dec    =    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	3182	None
2522	[BUG]  [BUGGY]  return  LongBits.toInteger(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  return  LongBits.toInteger(str,  Integer.MAX_VALUE);  [BUGGY]        }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	return  LongBits.toInteger(str,  Integer.MAX_VALUE);	  return    LongBits.toInteger(str);    	non-compiled	[CE]  illegal  start  of  expression	7801	None
2702	[BUG]  [BUGGY]  pfxLen  =  string.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  pfxLen  =  string.length();  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =  string.length();	  pfxLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3098	None
2762	[BUG]  [BUGGY]  for(final  String  str  :  numeric)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  str  :  numeric)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  numeric)  {	  for(final    String    pfx    :    str)    {    	non-compiled	[CE]  illegal  start  of  expression	242	None
2821	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)||  StringUtils.isInfinite(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isWhitespace(str)||  StringUtils.isInfinite(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)||  StringUtils.isInfinite(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	1466	None
2941	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str))  {  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str))  {	  if(str    ==    null    ||!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	5042	None
3242	[BUG]  [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  1;  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  :  1;	  pfxLen    -=    str.charAt(pfxLen    +    1));    	non-compiled	[CE]  illegal  start  of  expression	482	None
3302	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length()));  [CE]  ';'  expected  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  str  =  pfx.substring(0,  pfxLen.length()));  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfxLen.length()));	  final    String    str    =    pfx.substring(0,    pfxLen.length()    -    4);    	non-compiled	[CE]  ';'  expected	3842	None
3362	[BUG]  [BUGGY]  if(hexDigits  <  2)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  <  2)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  2)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    1)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8161	None
3481	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  16);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  str  =  createInteger(str,  16);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  16);	  final    Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	1730	None
3482	[BUG]  [BUGGY]  final  Integer  str  =  createInteger(str,  32);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  str  =  createInteger(str,  32);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  str  =  createInteger(str,  32);	  final    Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  expression	1730	None
3602	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	final  String  pfx  =  str.charAt(pfxLen  -  1,  hex_prefixes);	  final    String    pfx    =    str.charAt(pfxLen    -    1);    	non-compiled	[CE]  illegal  start  of  type	8462	None
3781	[BUG]  [BUGGY]  if(decPos  <  decPos)  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(decPos  <  decPos)  {  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(decPos  <  decPos)  {	  if(decPos    <    decPos)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')    +    1;    if(decPos    >=    decPos)    {    return    createDecimal(str    	non-compiled	[CE]  illegal  start  of  expression	4922	None
3841	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  ArrayUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isEmpty(str)||  ArrayUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isEmpty(str)||  ArrayUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)&&    ArrayUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	3074	None
4022	[BUG]  [BUGGY]  return  createLong(str,  lastChar  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  return  createLong(str,  lastChar  +  1);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  lastChar  +  1);	  return    createLong(str,    mant    +    1);    	non-compiled	[CE]  illegal  start  of  expression	302	None
4201	[BUG]  [BUGGY]  Arrays.sort(str.getIntValue(),  0);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.getIntValue(),  0);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getIntValue(),  0);	  Arrays.sort(str.getIntValue(),    null);    	non-compiled	[CE]  illegal  start  of  expression	5738	None
4261	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)+  1L;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)+  1L;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)+  1L;	  final    Integer    int    =    Integer.toLongBits(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4682	None
4262	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)+  3;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.toLongBits(str)+  3;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toLongBits(str)+  3;	  final    Integer    int    =    Integer.toLongBits(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	4682	None
4382	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  pfx.intValue();  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  pfxLen  =(pfx  ==  null)?  pfx.length()  :  pfx.intValue();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	pfxLen  =(pfx  ==  null)?  pfx.length()  :  pfx.intValue();	  pfxLen    =(pfx    ==    null)?    pfx.length()    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	5162	None
4502	[BUG]  [BUGGY]  char  decPos  =  pfx.charAt(1);  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  char  decPos  =  pfx.charAt(1);  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	char  decPos  =  pfx.charAt(1);	  char    decPos    =    pfx.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	2762	None
4681	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  if(hexDigits  ==  1)  {  return  createLong(str);  }  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hexDigits  ==  1)  {  return  createLong(str);  }	  if(hexDigits    <    1)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4274	None
4682	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  if(hexDigits  >  1)  {  return  createLong(str);  }  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hexDigits  >  1)  {  return  createLong(str);  }	  if(hexDigits    <    1)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4274	None
4742	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  *  Integer.MIN_VALUE;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MAX_VALUE  *  Integer.MIN_VALUE;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  *  Integer.MIN_VALUE;	  return    Integer.MAX_VALUE    /    Integer.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	6422	None
4922	[BUG]  [BUGGY]  if(pfx  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {        [BUGGY]  if(pfx  ==  null  ||  str.length()  ==  0)  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	462	462	1	replace	if(pfx  ==  null  ||  str.length()  ==  0)  {	  if(mant    ==    null    ||    mant.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1082	None
5102	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  return  createLong(str);  }  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  2)  {  return  createLong(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  2)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    return    createLong(str);    }    	non-compiled	[CE]  not  a  statement	13682	None
5222	[BUG]  [BUGGY]  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  32)  {  //  too  many  for  Long  return  createLong(str);  }	  }    else    if(hexDigits    >    32)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	386	None
5281	[BUG]  [BUGGY]  if(pfx.startsWith(hex_prefix)||  pfx.endsWith(hex_prefix))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(hex_prefix)||  pfx.endsWith(hex_prefix))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(hex_prefix)||  pfx.endsWith(hex_prefix))  {	  if(pfx.startsWith(hex_prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	3362	None
5342	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.charAt(0);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt(0);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
5402	[BUG]  [BUGGY]  return  createInteger(str,  pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  return  createInteger(str,  pfxLen  -  1);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	return  createInteger(str,  pfxLen  -  1);	  return    createInteger(str,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2282	None
5462	[BUG]  [BUGGY]  return  createBigDecimal(str.toString(),  null);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigDecimal(str.toString(),  null);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigDecimal(str.toString(),  null);	  return    createBigDecimal(str.toString());    	non-compiled	[CE]  illegal  start  of  type	5881	None
5522	[BUG]  [BUGGY]  for(final  String  str  :  d.toString())  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  for(final  String  str  :  d.toString())  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  d.toString())  {	  for(final    String    str    :    d.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	6386	None
5582	[BUG]  [BUGGY]  if(pfxLen  >  0)  {  String  str  =  pfx.charAt(pfxLen  -  1);  if(str.charAt(pfxLen  -  1)  ==  '/')  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(pfxLen  >  0)  {  String  str  =  pfx.charAt(pfxLen  -  1);  if(str.charAt(pfxLen  -  1)  ==  '/')  {  break;  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(pfxLen  >  0)  {  String  str  =  pfx.charAt(pfxLen  -  1);  if(str.charAt(pfxLen  -  1)  ==  '/')  {  break;  }	  }    	non-compiled	[CE]  illegal  start  of  expression	3938	None
5702	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  2)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  <  8)  {  return  createLong(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	2341	None
5762	[BUG]  [BUGGY]  final  Integer  int  =  Integer.toInteger(str).intValue();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.toInteger(str).intValue();  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.toInteger(str).intValue();	  final    Integer    int    =    Integer.toLongBits(str).intValue();    	non-compiled	[CE]  illegal  start  of  expression	14102	None
5822	[BUG]  [BUGGY]  }  else  if(str.length()  ==  0  ||  str.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  }  else  if(str.length()  ==  0  ||  str.charAt(0)  ==  '/')  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	}  else  if(str.length()  ==  0  ||  str.charAt(0)  ==  '/')  {	  [Delete]    else    if(str.length()    ==    0)    {    if(str    ==    null)    {    return    Integer.valueOf(str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12182	None
5882	[BUG]  [BUGGY]  if(pfx.startsWith( "-1 ")||  pfx.endsWith( "-1))  {  [CE]  unclosed  string  literal  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "-1 ")||  pfx.endsWith( "-1))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-1 ")||  pfx.endsWith( "-1))  {	  if(pfx.startsWith(   "-1   ")||    pfx.startsWith(   "-1))    {    	non-compiled	[CE]  unclosed  string  literal	13021	None
5942	[BUG]  [BUGGY]  final  String  dec  =  str.substring(0,  str.length()),  0);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  final  String  dec  =  str.substring(0,  str.length()),  0);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	final  String  dec  =  str.substring(0,  str.length()),  0);	  final    String    dec    =    str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  <identifier>  expected	2666	None
6002	[BUG]  [BUGGY]  return  Null;  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  return  Null;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return  Null;	  return    this;    	non-compiled	[CE]  illegal  start  of  type	6025	None
6122	[BUG]  [BUGGY]  return  createInteger(str,  mant  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  return  createInteger(str,  mant  +  1);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createInteger(str,  mant  +  1);	  return    createInteger(str,    mant);    	non-compiled	[CE]  illegal  start  of  expression	5450	None
6182	[BUG]  [BUGGY]  final  String  pfx  =  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  String  pfx  =  pfx.charAt(pfxLen  -  1);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  pfx.charAt(pfxLen  -  1);	  final    String    pfx    =    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	12541	None
6242	[BUG]  [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  BigInteger.MIN_VALUE)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    Integer.MIN_VALUE)    {    if(hexDigits    ==    Integer.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	11942	None
6302	[BUG]  [BUGGY]  final  int  pfxLen  =  hex_prefixes.length()  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  int  pfxLen  =  hex_prefixes.length()  +  1;  [BUGGY]        for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  int  pfxLen  =  hex_prefixes.length()  +  1;	  final    int    pfxLen    =    hex_prefixes.length();    	non-compiled	[CE]  illegal  start  of  expression	2690	None
6421	[BUG]  [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( "+ "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "-- ")||  pfx.endsWith( "+ "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "-- ")||  pfx.endsWith( "+ "))  {	  if(pfx.startsWith(   "-   ")||    pfx.endsWith(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	5666	None
6482	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(hex_prefixes  +  1);	  final    String    pfx    =    str.toLowerCase(hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	1609	None
6542	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  pfxLen,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  pfxLen,  Integer.MIN_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  pfxLen,  Integer.MIN_VALUE);	  return    Integer.decode(hexDigits,    str,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	16022	None
6661	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(64);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.toLowerCase(64);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(64);	  final    String    pfx    =    str.toLowerCase(0);    	non-compiled	[CE]  illegal  start  of  expression	1610	None
6662	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(0.0f);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.toLowerCase(0.0f);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(0.0f);	  final    String    pfx    =    str.toLowerCase(0);    	non-compiled	[CE]  illegal  start  of  expression	1610	None
6721	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(hexDigits    ==    0)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	12001	None
6722	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  2)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createInteger(str);  }	  if(hexDigits    ==    0)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	12001	None
6782	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen+  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  pfxLen+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0,  str.length()),  pfxLen+  1);	  Arrays.sort(str.getChars(0,    str.length()    -    1)+    1);    	non-compiled	[CE]  illegal  start  of  expression	1369	None
6842	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {	  if(mant    ==    null    ||    mant.length()    ==    0)    {    String    str    =    mant.substring(0,    mant.length());    if(str.charAt(0)    ==    '-')    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	602	None
7022	[BUG]  [BUGGY]  if(hexDigits  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(hexDigits  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10561	None
7081	[BUG]  [BUGGY]  if(str.length()  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.length()  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.length()  >  0)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3746	None
7082	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.charAt(0)  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3746	None
7142	[BUG]  [BUGGY]  for(final  String  str  :  str.charAt(1))  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  for(final  String  str  :  str.charAt(1))  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	for(final  String  str  :  str.charAt(1))  {	  for(final    String    str    :    str.charAt(0))    {    	non-compiled	[CE]  illegal  start  of  expression	4501	None
7262	[BUG]  [BUGGY]  final  String  hex  =(char)str.charAt(1);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  hex  =(char)str.charAt(1);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  hex  =(char)str.charAt(1);	  final    String    hex    =(char)str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
7502	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(hexDigits  ==  2)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  2)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    4)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	2042	None
7561	[BUG]  [BUGGY]  return  createLong(str,  pfx  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  return  createLong(str,  pfx  +  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createLong(str,  pfx  +  1);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  expression	13982	None
7562	[BUG]  [BUGGY]  return  createLong(str,  pfx,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  return  createLong(str,  pfx,  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	return  createLong(str,  pfx,  pfxLen);	  return    createLong(str,    pfx);    	non-compiled	[CE]  illegal  start  of  expression	13982	None
7681	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createDecimal(str);  }	  if(hexDigits    <    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	1298	None
7742	[BUG]  [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith(hex_prefixes[0]))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "# ")||  pfx.endsWith(hex_prefixes[0]))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "# ")||  pfx.endsWith(hex_prefixes[0]))  {	  if(pfx.startsWith(hex_prefixes)||    pfx.endsWith(hex_prefixes[0]))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None
7802	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(str.length())-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.charAt(str.length())-  1;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.charAt(str.length())-  1;	  final    String    pfx    =    str.charAt(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6062	None
7982	[BUG]  [BUGGY]  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx.lastChar;  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  pfxLen  =(pfx  ==  null)?  str.length()  :  pfx.lastChar;  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	pfxLen  =(pfx  ==  null)?  str.length()  :  pfx.lastChar;	  pfxLen    =(pfx    ==    null)?    str.length()    :    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	98	None
8102	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  else  if(str.length()  ==  0)return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  else  if(str.length()  ==  0)return  Integer.MAX_VALUE;  }  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.charAt(0)  ==  '-')  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  else  if(str.length()  ==  0)return  Integer.MAX_VALUE;  }	  if(str.length()    ==    0)    {    return    Integer.MAX_VALUE;    }    else    if(str.length()    ==    0)return    Integer.MAX_VALUE;    }    	non-compiled	[CE]  illegal  start  of  expression	1226	None
8642	[BUG]  [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();        [BUGGY]  pfxLen  -=  pfx.charAt(pfxLen  -  1);  [BUGGY]        break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	463	463	1	replace	pfxLen  -=  pfx.charAt(pfxLen  -  1);	  pfxLen    -=    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	10441	None
8701	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfx.length())+  1);  [CE]  not  a  statement  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  pfx.length())+  1);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfx.length())+  1);	  Arrays.sort(str.charAt(0),    str.length())+    1);    	non-compiled	[CE]  not  a  statement	1382	None
8761	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  ||  exp  ==  null)  {	  if(str    ==    null    ||    str.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4321	None
8762	[BUG]  [BUGGY]  if(dec  ==  null  &&  str.indexOf('.')  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(dec  ==  null  &&  str.indexOf('.')  ==  0)  {  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  str.indexOf('.')  ==  0)  {	  if(str    ==    null    ||    str.indexOf('.')    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4321	None
8822	[BUG]  [BUGGY]  return  createBlank(str,  numeric);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBlank(str,  numeric);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBlank(str,  numeric);	  return    createBlank(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	1129	None
8942	[BUG]  [BUGGY]  if(StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isWhitespace(str)||    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	15421	None
9001	[BUG]  [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.getAstRoot(Integer.MIN_VALUE),  Integer.MAX_VALUE);	  Arrays.sort(str.getAstRoot(Integer.MIN_VALUE));    	non-compiled	[CE]  illegal  start  of  expression	11282	None
9241	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxLen);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	13802	None
9242	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  pfxLen)+  1,  hex_prefixes,  pfxDigits);	  Arrays.sort(str.substring(0,    pfxLen)+    1,    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	13802	None
9302	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  pfx.length());  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  pfx.length());  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.substring(pfxLen  +  1,  pfx.length());	  final    String    pfxLen    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	3602	None
9421	[BUG]  [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  pfxLen  -  1;  [CE]  :  expected  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  pfxLen  -  1;  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx  ==  null)?  str.length()  -  pfxLen  -  1;	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    pfxLen;    	non-compiled	[CE]  :  expected	8642	None
9422	[BUG]  [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  1;  [CE]  :  expected  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  int  pfxLen  =(pfx  ==  null)?  str.length()  -  1;  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx  ==  null)?  str.length()  -  1;	  int    pfxLen    =(pfx    ==    null)?    str.length()    -    pfxLen;    	non-compiled	[CE]  :  expected	8642	None
9482	[BUG]  [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  >  1)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  1)  {  //  too  many  for  Long  return  createLong(str);  }	  }    else    if(hexDigits    >    16)    {    //    too    many    for    Long    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3217	None
9842	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen),  mant);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(pfxLen),  mant);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(pfxLen),  mant);	  Arrays.sort(hex_prefixes.substring(pfxLen),    str);    	non-compiled	[CE]  illegal  start  of  expression	3242	None
9962	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  16));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  16));  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  16));	  String[]    hex_prefixes    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	2426	None
10262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  HEXDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(HEXDigits,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  HEXDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(HEXDigits,  0,  pfxLen);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  HEXDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(HEXDigits,  0,  pfxLen);	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(HEXDigits,    0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	962	None
10681	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  ==  BigInteger.MIN_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    if(hexDigits    ==    BigInteger.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3314	None
10862	[BUG]  [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  String[]  hex_prefixes  =  str.substring(0,  str.length()  -  4);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	String[]  hex_prefixes  =  str.substring(0,  str.length()  -  4);	  String[]    hex_prefixes    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  expression	2425	None
10921	[BUG]  [BUGGY]  if(hexDigits  ==  2)  {  int  numDecimal  =  str.length();  if(numDecimal  >=  0)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  2)  {  int  numDecimal  =  str.length();  if(numDecimal  >=  0)  {  return  createInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  2)  {  int  numDecimal  =  str.length();  if(numDecimal  >=  0)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    int    numDecimal    =    str.length();    if(numDecimal    >=    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	9301	None
10982	[BUG]  [BUGGY]  if(str  ==  null)  {  if(!Character.isJavaIdentifierPart(str))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  if(str  ==  null)  {  if(!Character.isJavaIdentifierPart(str))  {  return  createInteger(str);  }  [BUGGY]        return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  if(!Character.isJavaIdentifierPart(str))  {  return  createInteger(str);  }	  }    	non-compiled	[CE]  illegal  start  of  expression	1994	None
11101	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  return  createInteger(str);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	return  createInteger(str);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	4273	None
11342	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(0,  hexDigits),  hex_prefixes);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(0,  hexDigits),  hex_prefixes);	  Arrays.sort(str.substring(pfxLen),    hex_prefixes);    	non-compiled	[CE]  illegal  start  of  expression	6577	None
11402	[BUG]  [BUGGY]  final  String  pfx  =  str.charAt(pfxLen);  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  final  String  pfx  =  str.charAt(pfxLen);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  pfx  =  str.charAt(pfxLen);	  final    String    pfx    =    str.charAt(0);    	non-compiled	[CE]  not  a  statement	2137	None
11521	[BUG]  [BUGGY]  Arrays.sort(str,  false);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str,  false);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str,  false);	  Arrays.sort(hex_prefixes,    false);    	non-compiled	[CE]  illegal  start  of  expression	11822	None
11581	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.length()  ==  0)  {  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.length()  ==  0)  {	  if(str.length()    ==    0)    {    if(str    ==    null)    {    return    Integer.parseInt(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4862	None
11641	[BUG]  [BUGGY]  final  String  pfx  =  str.toStringTree(hex_prefixes);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  final  String  pfx  =  str.toStringTree(hex_prefixes);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	final  String  pfx  =  str.toStringTree(hex_prefixes);	  return    createLong(str.length());    	non-compiled	[CE]  illegal  start  of  expression	2882	None
11702	[BUG]  [BUGGY]  int  pfxLen  =(pfx!=  null)?  str.length()  :  pfx;  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  int  pfxLen  =(pfx!=  null)?  str.length()  :  pfx;  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	int  pfxLen  =(pfx!=  null)?  str.length()  :  pfx;	  int    pfxLen    =(pfx    ==    null)?    str.length()    :    pfx;    	non-compiled	[CE]  illegal  start  of  expression	1538	None
11882	[BUG]  [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length[0]);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  Arrays.sort(hex_prefixes,  0,  str.length[0]);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(hex_prefixes,  0,  str.length[0]);	  Arrays.sort(str,    0,    hex_prefixes[0]);    	non-compiled	[CE]  illegal  start  of  expression	2330	None
11942	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  String  str  =  str.substring(0,  str.length())  +  1;  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	String  str  =  str.substring(0,  str.length())  +  1;	  String    str    =    pfx.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	2594	None
12062	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfxLen);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfxLen);	  final    String    pfx    =    pfx.substring(pfxLen    +    2);    	non-compiled	[CE]  illegal  start  of  type	5906	None
12122	[BUG]  [BUGGY]  final  Arrays.sort(str,  0);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str,  0);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str,  0);	  final    Arrays.sort(str,    null);    	non-compiled	[CE]  <identifier>  expected	5810	None
12182	[BUG]  [BUGGY]  return  createLong(str.length()  +  1);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  createLong(str.length()  +  1);  [BUGGY]        }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  createLong(str.length()  +  1);	  return    createLong(str.length());    	non-compiled	[CE]  illegal  start  of  expression	2882	None
12302	[BUG]  [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  {  return  createLong(str);  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(mant  ==  null  ||  mant.length()  ==  0)  {  String  str  =  mant.substring(0,  pfxLen);  if(str.length()  ==  0)  {  return  createLong(str);  }	  if(mant    ==    null)    {    String    str    =    mant.substring(0,    pfxLen);    if(str.length()    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	10202	None
12361	[BUG]  [BUGGY]  final  Integer  int  =  Integer.valueOf(str)+  1L;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  final  Integer  int  =  Integer.valueOf(str)+  1L;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	final  Integer  int  =  Integer.valueOf(str)+  1L;	  final    Integer    int    =    Integer.valueOf(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3002	None
12421	[BUG]  [BUGGY]  return  createLong(str,  hexDigits  +  1);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  return  createLong(str,  hexDigits  +  1);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  hexDigits  +  1);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
12422	[BUG]  [BUGGY]  return  createLong(str,  hexDigits  +  1,  8);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  return  createLong(str,  hexDigits  +  1,  8);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	return  createLong(str,  hexDigits  +  1,  8);	  String    decPos    =    pfx.length();    	non-compiled	[CE]  illegal  start  of  type	4441	None
12482	[BUG]  [BUGGY]  if(pfx.endsWith( ".0 ")||  pfx.startsWith( ".0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith( ".0 ")||  pfx.startsWith( ".0 "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith( ".0 ")||  pfx.startsWith( ".0 "))  {	  if(pfx.endsWith(   ".0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	13141	None
12661	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  pfx.length()));  [CE]  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  pfx.length()));  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  pfx.length()));	  Arrays.sort(str.charAt(0),    str.length()));    	non-compiled	[CE]  	7622	None
12662	[BUG]  [BUGGY]  Arrays.sort(str.charAt(0),  str.charAt(1));  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.charAt(0),  str.charAt(1));  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.charAt(0),  str.charAt(1));	  Arrays.sort(str.charAt(0),    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	7622	None
12721	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(0)+  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  pfxLen  -=  str.charAt(0)+  1;  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(0)+  1;	  pfxLen    -=    str.charAt(pfxLen)+    1;    	non-compiled	[CE]  illegal  start  of  expression	481	None
12782	[BUG]  [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxDigits);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(pfxLen  +  1),  pfxDigits);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(pfxLen  +  1),  pfxDigits);	  Arrays.sort(str.substring(pfxLen    +    1),    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	6338	None
12841	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(0);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.charAt(0);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(0);	  final    String    pfxLen    =    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  type	14522	None
12842	[BUG]  [BUGGY]  final  char  pfxLen  =  pfx.charAt(pfxLen);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  char  pfxLen  =  pfx.charAt(pfxLen);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  pfxLen  =  pfx.charAt(pfxLen);	  final    String    pfxLen    =    pfx.charAt(pfxLen);    	non-compiled	[CE]  illegal  start  of  type	14522	None
13081	[BUG]  [BUGGY]  if((  final  String  pfx  :  hex_prefixes)!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  if((  final  String  pfx  :  hex_prefixes)!=  null)  {  break;  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	if((  final  String  pfx  :  hex_prefixes)!=  null)  {  break;  }	  if(final    String    pfx    :    hex_prefixes)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13442	None
13142	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0),  str.length()),  pfxLen);  [CE]  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.getChars(0),  str.length()),  pfxLen);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.getChars(0),  str.length()),  pfxLen);	  Arrays.sort(str.getChars(0,    str.length()    -    1),    pfxLen);    	non-compiled	[CE]  	4082	None
13322	[BUG]  [BUGGY]  return  Integer.toLongByte(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.toLongByte(str,  Integer.MAX_VALUE);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.toLongByte(str,  Integer.MAX_VALUE);	  return    Integer.toLongByte(str);    	non-compiled	[CE]  illegal  start  of  expression	5498	None
13502	[BUG]  [BUGGY]  final  Arrays.sort(str.getArrays());  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str.getArrays());  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.getArrays());	  final    Arrays.sort(str.getIntValue());    	non-compiled	[CE]  <identifier>  expected	5737	None
13681	[BUG]  [BUGGY]  final  Arrays.sort(str.length()  +  1);  [CE]  <identifier>  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  Arrays.sort(str.length()  +  1);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  Arrays.sort(str.length()  +  1);	  final    Arrays.sort(str.length());    	non-compiled	[CE]  <identifier>  expected	4177	None
13742	[BUG]  [BUGGY]  if(hexDigits  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(hexDigits  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }  [BUGGY]        return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  ==  8)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('e')+  1;  if(decPos  >=  decPos)  {  return  createInteger(str);  }	  if(hexDigits    ==    1)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('e')+    1;    if(decPos    >=    decPos)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3674	None
13862	[BUG]  [BUGGY]  Arrays.sort(str.substring(hexDigits  +  1,  pfxLen));  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(str.substring(hexDigits  +  1,  pfxLen));  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(str.substring(hexDigits  +  1,  pfxLen));	  Arrays.sort(str.substring(pfxLen    +    1,    hex_prefixes));    	non-compiled	[CE]  illegal  start  of  expression	6578	None
13922	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  String  pfx  =  pfx.substring(0,  pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  String  pfx  =  pfx.substring(0,  pfxLen);	  final    String    pfx    =    pfx.substring(pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	2786	None
14042	[BUG]  [BUGGY]  final  int  pfxLen  =(str.length()  ==  0)?  -1  :  str.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  int  pfxLen  =(str.length()  ==  0)?  -1  :  str.length();  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  int  pfxLen  =(str.length()  ==  0)?  -1  :  str.length();	  final    int    pfxLen    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	14462	None
14102	[BUG]  [BUGGY]  Arrays.sort(str.toArray());  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.toArray());  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.toArray());	  Arrays.sort(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	1	None
14221	[BUG]  [BUGGY]  pfxLen  -=  str.charAt(0));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  pfxLen  -=  str.charAt(0));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	pfxLen  -=  str.charAt(0));	  pfxLen    -=    str.charAt(pfxLen    +    1));    	non-compiled	[CE]  ';'  expected	482	None
14282	[BUG]  [BUGGY]  for(final  String  pfx  :  str,  pfxLen  =  0;  [CE]  ')'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  pfx  :  str,  pfxLen  =  0;  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  pfx  :  str,  pfxLen  =  0;	  for(final    String    pfx    :    pfx.length),    pfxLen    =    0;    	non-compiled	[CE]  ')'  expected	6121	None
14642	[BUG]  [BUGGY]  Arrays.sort(this.hex_prefixes,  null);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(this.hex_prefixes,  null);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(this.hex_prefixes,  null);	  Arrays.sort(hex_prefixes,    null);    	non-compiled	[CE]  illegal  start  of  expression	2186	None
14702	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length()  -  1,  INT_ZERO);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  System.arraycopy(str,  0,  str.length()  -  1,  INT_ZERO);  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length()  -  1,  INT_ZERO);	  System.arraycopy(str,    0,    str.length()    -    1,    INTEGER_ZERO);    	non-compiled	[CE]  illegal  start  of  expression	4705	None
14882	[BUG]  [BUGGY]  if(str  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str  ==  '-')  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(hexDigits    ==    3)    {    int    decPos    =    str.indexOf('.')+    str.indexOf('E')+    1;    if(decPos    >=    decPos)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	14282	None
14942	[BUG]  [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();	  int    pfxLen    =    hex_prefixes.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	5642	None
15301	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  <  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5402	None
15302	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  if(hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	5402	None
15362	[BUG]  [BUGGY]  if(pfx.startsWith(HEX_VALUE_NUMBER_INT)||  pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith(HEX_VALUE_NUMBER_INT)||  pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith(HEX_VALUE_NUMBER_INT)||  pfx.endsWith(HEX_VALUE_NUMBER_FLOAT))  {	  if(pfx.startsWith(hex)||    pfx.endsWith(hex))    {    	non-compiled	[CE]  illegal  start  of  expression	11162	None
15421	[BUG]  [BUGGY]  return  createInteger(str,  pfx);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createInteger(str,  pfx);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createInteger(str,  pfx);	  return    createBigInteger(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	1130	None
15422	[BUG]  [BUGGY]  return  createBigInteger(str,  nfx);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createBigInteger(str,  nfx);  [BUGGY]        throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createBigInteger(str,  nfx);	  return    createBigInteger(str,    pfx);    	non-compiled	[CE]  illegal  start  of  type	1130	None
15602	[BUG]  [BUGGY]  Arrays.sort(str.length()),  0);  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  Arrays.sort(str.length()),  0);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	Arrays.sort(str.length()),  0);	  Arrays.sort(str.length()    +    1);    	non-compiled	[CE]  ';'  expected	5222	None
15662	[BUG]  [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()),  pfxLen);  [CE]  ';'  expected  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  str  =  pfx.substring(0,  pfx.length()),  pfxLen);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  str  =  pfx.substring(0,  pfx.length()),  pfxLen);	  final    String    str    =    pfx.substring(0,    pfx.length()    -    1);    	non-compiled	[CE]  ';'  expected	4346	None
15722	[BUG]  [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =(hex_prefixes  ==  null)?  0  :  hex_prefixes.length();	  int    pfxLen    =    hex_prefixes.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6361	None
15962	[BUG]  [BUGGY]  final  char  decPos  =  pfx.charAt('.');  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  char  decPos  =  pfx.charAt('.');  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  char  decPos  =  pfx.charAt('.');	  final    char    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	5017	None
16262	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  if(str  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  if(str  ==  null)  {  return  null;  }  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	if(dec  ==  null  ||  exp  ==  null)  {  if(str  ==  null)  {  return  null;  }	  if(dec    ==    null)    {    if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	9002	None
16382	[BUG]  [BUGGY]  return  createNumber(str,  false);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  return  createNumber(str,  false);  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	return  createNumber(str,  false);	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	674	None
16502	[BUG]  [BUGGY]  }  else  if(str.charAt(0)  ==  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  }  else  if(str.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	}  else  if(str.charAt(0)  ==  '-')  {  return  null;  }	  [Delete]    else    if(str    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11642	None
16562	[BUG]  [BUGGY]  Arrays.sort(str.length()));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.length()));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.length()));	  Arrays.sort(str.length()    +    1);    	non-compiled	[CE]  ';'  expected	9241	None
16922	[BUG]  [BUGGY]  Arrays.sort(this.str,  0,  hex_prefixes,  0,  str.length);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  Arrays.sort(this.str,  0,  hex_prefixes,  0,  str.length);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	Arrays.sort(this.str,  0,  hex_prefixes,  0,  str.length);	  Arrays.sort(this.str,    0,    hex_prefixes.length);    	non-compiled	[CE]  illegal  start  of  expression	14762	None
16982	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  if(hexDigits  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	if(hexDigits  ==  1)  {  int  pfxLen  =  str.length();  if(pfxLen  >  10)  {  return  createInteger(str);  }	  if(pfxLen    ==    2)    {    int    pfxLen    =    str.length();    if(pfxLen    >    10)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	4394	None
17282	[BUG]  [BUGGY]  for(final  String  str  :  pfx.length)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  str  :  pfx.length)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  pfx.length)  {	  for(final    String    pfx    :    pfx.length)    {    	non-compiled	[CE]  illegal  start  of  expression	6122	None
17342	[BUG]  [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  0));  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  Arrays.sort(str.getChars(0,  str.length()),  0));  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	Arrays.sort(str.getChars(0,  str.length()),  0));	  Arrays.sort(str.getChars(0,    str.length()    -    1),    pfxLen));    	non-compiled	[CE]  illegal  start  of  expression	3794	None
17522	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  1)  {  if(hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    1)    {    if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	626	None
17701	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  hexDigits);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  0,  hexDigits);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  hexDigits);	  return    Integer.decode(hexDigits,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
17702	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  0,  str.length());  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  0,  str.length());  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  0,  str.length());	  return    Integer.decode(hexDigits,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	5858	None
17762	[BUG]  [BUGGY]  return  Integer.decode(str,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.decode(str,  Integer.MAX_VALUE);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.decode(str,  Integer.MAX_VALUE);	  return    Integer.decode(str);    	non-compiled	[CE]  illegal  start  of  expression	3542	None
18002	[BUG]  [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfxLen  =  pfx.charAt(pfxLen  +  1,  pfx.length);	  final    String    pfxLen    =    pfx.substring(pfxLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	13261	None
18062	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  16);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  16);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  16);	  return    Integer.decode(hexDigits,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	2522	None
18122	[BUG]  [BUGGY]  if(str  ==  null)  {  if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  if(str  ==  null)  {  if(str  ==  null)  {  return  Integer.valueOf(str.length());  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  if(str  ==  null)  {  return  Integer.valueOf(str.length());  }	  final    String[]    dec    =    str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	3482	None
18182	[BUG]  [BUGGY]  for(final  String  pfx  :  numeric)  {  break;  }  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  for(final  String  pfx  :  numeric)  {  break;  }  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	for(final  String  pfx  :  numeric)  {  break;  }	  for(final    String    pfx    :    str)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	2066	None
18241	[BUG]  [BUGGY]  if(hexDigits  ==  -1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  if(hexDigits  ==  -1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }  [BUGGY]        return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  -1)  {  int  decPos  =  str.length();  if(decPos  >  0)  {  return  createDecimal(str);  }	  if(decPos    >    0)    {    int    decPos    =    str.length();    if(decPos    >    0)    {    return    createDecimal(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6050	None
18362	[BUG]  [BUGGY]  for(final  String  str  :  _prefixes)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  str  :  _prefixes)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  str  :  _prefixes)  {	  for(final    String    str    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	2234	None
18482	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "-# "  }  ;  [CE]  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "-# "  }  ;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  curated   "0x ",   "0x ",   "-1x ",   "-1x ",   "# ",   "-# "  }  ;	  final    String[]    hex_prefixes    =    curated       "0x   ",       "0x   ",       "-1x   ",       "-1x   ",       "-0x   ",       "#   ",       "-#   "    }    ;    	non-compiled	[CE]  	3818	None
18902	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  hexDigits.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits[i]);	  for(int    i    =    0;    i    <    hexDigits.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits[i]);    if(e.getNumerics()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2834	None
18962	[BUG]  [BUGGY]  pfxLen  +=  str.charAt(0));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;        [BUGGY]  pfxLen  +=  str.charAt(0));  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	460	460	1	replace	pfxLen  +=  str.charAt(0));	  pfxLen    +=    str.charAt(pfxLen    -    1));    	non-compiled	[CE]  ';'  expected	529	None
19022	[BUG]  [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(StringUtils.isAssign(mant)||  StringUtils.isBlank(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(StringUtils.isAssign(mant)||  StringUtils.isBlank(str))  {	  if(StringUtils.isAssign(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  illegal  start  of  expression	8041	None
19141	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  ==  0)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  ==  0)  {  return  createLong(str);  }  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	if(hexDigits  ==  0)  {  if(hexDigits  ==  0)  {  return  createLong(str);  }	  if(hexDigits    ==    1)    {    if(hexDigits    ==    0)    {    return    createLong(str);    }    	non-compiled	[CE]  illegal  start  of  expression	6302	None
19202	[BUG]  [BUGGY]  return  createLong(str,  hexDigits  +  2);  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }        [BUGGY]  return  createLong(str,  hexDigits  +  2);  [BUGGY]        if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	471	472	1	replace	return  createLong(str,  hexDigits  +  2);	  return    createLong(str,    hexDigits    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11402	None
19262	[BUG]  [BUGGY]  int  pfxLen  =  HEX_prefixes.length();  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  int  pfxLen  =  HEX_prefixes.length();  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =  HEX_prefixes.length();	  int    pfxLen    =    hex_prefixes.length()    -    4;    	non-compiled	[CE]  illegal  start  of  expression	6362	None
19321	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  2));  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  2));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length()  -  2));	  final    String    pfx    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	5090	None
19322	[BUG]  [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String  pfx  =  str.substring(0,  str.length()  -  4);  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String  pfx  =  str.substring(0,  str.length()  -  4);	  final    String    pfx    =    str.substring(0,    str.length()));    	non-compiled	[CE]  illegal  start  of  expression	5090	None
19382	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  &&  exp  ==  null)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	362	None
19502	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase(null);  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase(null);  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return(str  ==  null)?  null  :  str.toLowerCase(null);	  return(str    ==    null)?    null    :    str.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	6026	None
19562	[BUG]  [BUGGY]  System.arraycopy(str,  0,  str.length()  -  1,  10);  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  System.arraycopy(str,  0,  str.length()  -  1,  10);  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	System.arraycopy(str,  0,  str.length()  -  1,  10);	  System.arraycopy(str,    0,    str.length(),    10);    	non-compiled	[CE]  illegal  start  of  expression	6842	None
19622	[BUG]  [BUGGY]  Arrays.sort(str.substring(0,  str.length())+  2);  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  Arrays.sort(str.substring(0,  str.length())+  2);  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	Arrays.sort(str.substring(0,  str.length())+  2);	  Arrays.sort(str.substring(0,    pfxLen)+    2);    	non-compiled	[CE]  illegal  start  of  expression	4298	None
19922	[BUG]  [BUGGY]  if((  lastChar  ==  null)||(lastChar  ==  null  ||  lastChar.length()  ==  0))  {  return  createNumber(d);  }  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  if((  lastChar  ==  null)||(lastChar  ==  null  ||  lastChar.length()  ==  0))  {  return  createNumber(d);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if((  lastChar  ==  null)||(lastChar  ==  null  ||  lastChar.length()  ==  0))  {  return  createNumber(d);  }	  for(final    String    d    :    str.charAt(1))    {    if(!(lastChar    ==    null    ||    lastChar.length()    ==    0))    {    return    createNumber(d);    }    	non-compiled	[CE]  illegal  start  of  type	8342	None
20042	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(hexDigits  ==  1)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(hexDigits  ==  1)  {  if(hexDigits  ==  Integer.MIN_VALUE)  {  return  createInteger(str);  }	  if(hexDigits    <    1)    {    if(hexDigits    ==    Integer.MIN_VALUE)    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	8942	None
20342	[BUG]  [BUGGY]  if(str.length()  ==  1)  {  if(!Character.isDigit(str.charAt(1)))  {  return  Integer.decode(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {  if  (str  ==  null)  {  return  null;  }          [BUGGY]  if(str.length()  ==  1)  {  if(!Character.isDigit(str.charAt(1)))  {  return  Integer.decode(str);  }  [BUGGY]        return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	684	684	1	replace	if(str.length()  ==  1)  {  if(!Character.isDigit(str.charAt(1)))  {  return  Integer.decode(str);  }	  if(str.length()    ==    0)    {    if(!Character.isDigit(str.charAt(0)))    {    return    Integer.decode(str);    }    	non-compiled	[CE]  illegal  start  of  expression	15901	None
20522	[BUG]  [BUGGY]  Arrays.sort(str.substring(1));  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  Arrays.sort(str.substring(1));  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	Arrays.sort(str.substring(1));	  Arrays.sort(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	4178	None
20582	[BUG]  [BUGGY]  String  pfx  =(char)(pfx.charAt(0),  pfxLen);  [CE]  ')'  expected  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  String  pfx  =(char)(pfx.charAt(0),  pfxLen);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	String  pfx  =(char)(pfx.charAt(0),  pfxLen);	  String    pfx    =(char)pfx.substring(0,    pfxLen);    	non-compiled	[CE]  ')'  expected	5282	None
20642	[BUG]  [BUGGY]  final  int  hexDigits  =(hexDigits  ==  4)?  str.length()  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  final  int  hexDigits  =(hexDigits  ==  4)?  str.length()  :  0;  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	final  int  hexDigits  =(hexDigits  ==  4)?  str.length()  :  0;	  final    int    hexDigits    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9962	None
20702	[BUG]  [BUGGY]  return  Integer.MIN_VALUE  /  Integer.MAX_VALUE  +  str;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MIN_VALUE  /  Integer.MAX_VALUE  +  str;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MIN_VALUE  /  Integer.MAX_VALUE  +  str;	  return    Integer.MIN_VALUE    /    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	9182	None
20881	[BUG]  [BUGGY]  for(final  String  hx_prefixes  :  hx_prefixes)  {  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }        [BUGGY]  for(final  String  hx_prefixes  :  hx_prefixes)  {  [BUGGY]        if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	454	454	1	replace	for(final  String  hx_prefixes  :  hx_prefixes)  {	  for(final    String    hx_prefixes    :    hex_prefixes)    {    	non-compiled	[CE]  illegal  start  of  expression	15242	None
21062	[BUG]  [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length())-  1;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }          [BUGGY]  final  String[]  hex_prefixes  =  str.get(str.length())-  1;  [BUGGY]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	458	458	1	replace	final  String[]  hex_prefixes  =  str.get(str.length())-  1;	  final    String[]    hex_prefixes    =    str.get(str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1970	None
21121	[BUG]  [BUGGY]  if(hexDigits  <  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(hexDigits  <  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  <  >  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(StringUtils.isBlank(str)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	842	None
21122	[BUG]  [BUGGY]  if(hexDigits  <  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(hexDigits  <  >  32)  {  //  too  many  for  Long  return  createLong(str);  }  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(hexDigits  <  >  32)  {  //  too  many  for  Long  return  createLong(str);  }	  if(StringUtils.isBlank(str)&&    StringUtils.isDigit(str))    {    	non-compiled	[CE]  illegal  start  of  expression	842	None
21181	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.');  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.');  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.');	  String    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	3193	None
21182	[BUG]  [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.')+  1;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.')+  1;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.charAt(pfxLen  -  1)  ==  '.'?  pfx.charAt(pfxLen  -  1):  pfx.indexOf('.')+  1;	  String    decPos    =    pfx.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	3193	None
21302	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  if(str.length()  ==  0)  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	if(str.length()  ==  0)  {  if(str.length()  ==  0)  {  return  Integer.MAX_VALUE;  }	  final    Integer    int    =    Integer.valueOf(str)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3002	None
21482	[BUG]  [BUGGY]  return  createLong(str,  0);  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  return  createLong(str,  0);  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	return  createLong(str,  0);	  return    createLong(str,    lastChar);    	non-compiled	[CE]  illegal  start  of  expression	301	None
21662	[BUG]  [BUGGY]  return  Integer.decode(hexDigits,  pfxLen,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  return  Integer.decode(hexDigits,  pfxLen,  Integer.MAX_VALUE);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	return  Integer.decode(hexDigits,  pfxLen,  Integer.MAX_VALUE);	  return    Integer.decode(hexDigits,    str,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	9481	None
22022	[BUG]  [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfx_length);  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfx_length);  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	final  String  pfx  =  pfx.substring(pfxLen  +  1,  pfx_length);	  final    String    pfx    =    pfx.substring(pfxLen    +    1,    pfx.length);    	non-compiled	[CE]  illegal  start  of  type	8701	None
22202	[BUG]  [BUGGY]  if(str  ==  null)  {  if(!Character.isWhitespace(str)&&  Character.isLetterOrDigit(str))  {  return  createInteger(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  if(str  ==  null)  {  if(!Character.isWhitespace(str)&&  Character.isLetterOrDigit(str))  {  return  createInteger(str);  }  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	if(str  ==  null)  {  if(!Character.isWhitespace(str)&&  Character.isLetterOrDigit(str))  {  return  createInteger(str);  }	  if(str    ==    null)    {    if(!Character.isWhitespace(str)||    Character.isLetterOrDigit(str))    {    return    createInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	3962	None
22262	[BUG]  [BUGGY]  final  String  str  =  hexDigits.charAt(1);  [CE]  not  a  statement  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  final  String  str  =  hexDigits.charAt(1);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  String  str  =  hexDigits.charAt(1);	  final    String    pfx    =    str.charAt(1);    	non-compiled	[CE]  not  a  statement	2138	None
22322	[BUG]  [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.startsWith( "-0 "))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.startsWith( "0 ")||  pfx.startsWith( "-0 "))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.startsWith( "0 ")||  pfx.startsWith( "-0 "))  {	  if(pfx.startsWith(   "0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	722	None
22381	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  pfxLen)  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(str  ==  null  ||  str.length()  <  pfxLen)  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  str.length()  <  pfxLen)  {	  if(str    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	4369	None
22382	[BUG]  [BUGGY]  if((  str  ==  null)||(str.charAt(0)  ==  '-'))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if((  str  ==  null)||(str.charAt(0)  ==  '-'))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if((  str  ==  null)||(str.charAt(0)  ==  '-'))  {	  if(str    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	4369	None
22742	[BUG]  [BUGGY]  if(dec  ==  null  ||  str.indexOf('.')  >=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(dec  ==  null  ||  str.indexOf('.')  >=  0)  {  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(dec  ==  null  ||  str.indexOf('.')  >=  0)  {	  if(str    ==    null    ||    str.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	361	None
22922	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.length();  [CE]  illegal  start  of  type  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {        [BUGGY]  return(str  ==  null)?  null  :  str.length();  [BUGGY]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	451	451	1	replace	return(str  ==  null)?  null  :  str.length();	  return(str    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  illegal  start  of  type	7142	None
23041	[BUG]  [BUGGY]  if(pfx.endsWith(hex)||  pfx.startsWith(hex))  {  [CE]  illegal  start  of  expression  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  if(pfx.endsWith(hex)||  pfx.startsWith(hex))  {  [BUGGY]        pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	if(pfx.endsWith(hex)||  pfx.startsWith(hex))  {	  if(pfx.endsWith(hex))    {    	non-compiled	[CE]  illegal  start  of  expression	2641	None
23102	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]          final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number        [BUGGY]  if(str  ==  null  ||  StringUtils.isDefined(str))  {  [BUGGY]        final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	467	467	1	replace	if(str  ==  null  ||  StringUtils.isDefined(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)&&    ArrayUtils.isInfinite(str))    {    	non-compiled	[CE]  illegal  start  of  expression	5378	None
23282	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  str.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  [CE]  illegal  start  of  expression  [CONTEXT]        final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;        [BUGGY]  for(int  i  =  0;  i  <  str.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);  [BUGGY]        if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	for(int  i  =  0;  i  <  str.length();  ++i)  {  NumberFormatException  e  =  Integer.parseInt(hexDigits,  0,  pfxLen);	  for(int    i    =    0;    i    <    pfxLen.length();    ++i)    {    NumberFormatException    e    =    Integer.parseInt(hexDigits,    0,    pfxLen);    	non-compiled	[CE]  illegal  start  of  expression	1946	None
23341	[BUG]  [BUGGY]  if(StringUtils.isInteger(str)||  Character.isWhitespace(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(StringUtils.isInteger(str)||  Character.isWhitespace(str))  {  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(StringUtils.isInteger(str)||  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2977	None
23342	[BUG]  [BUGGY]  if(StringUtils.isInteger(str)&&  Character.isWhitespace(str))  {  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  if(StringUtils.isInteger(str)&&  Character.isWhitespace(str))  {  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	if(StringUtils.isInteger(str)&&  Character.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    Character.isWhitespace(str))    {    	non-compiled	[CE]  illegal  start  of  expression	2977	None
23401	[BUG]  [BUGGY]  Arrays.sort(hexDigits,  true);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(hexDigits,  true);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(hexDigits,  true);	  Arrays.sort(hex_prefixes,    true);    	non-compiled	[CE]  illegal  start  of  expression	2185	None
23402	[BUG]  [BUGGY]  Arrays.sort(this.hex_prefixes,  true);  [CE]  illegal  start  of  expression  [CONTEXT]        }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }        [BUGGY]  Arrays.sort(this.hex_prefixes,  true);  [BUGGY]        return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  final  int  decPos  =  str.indexOf('.');  final  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  //  assumes  both  not  present    [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	474	474	1	replace	Arrays.sort(this.hex_prefixes,  true);	  Arrays.sort(hex_prefixes,    true);    	non-compiled	[CE]  illegal  start  of  expression	2185	None
23462	[BUG]  [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  -  1  :  0;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  -  1  :  0;  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	int  pfxLen  =(hex_prefixes  ==  null)?  str.length()  -  1  :  0;	  int    pfxLen    =(hex_prefixes    ==    null)?    str.length()    :    1;    	non-compiled	[CE]  illegal  start  of  expression	15662	None
23522	[BUG]  [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [CE]  illegal  start  of  expression  [CONTEXT]        }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }        [BUGGY]  if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }  [BUGGY]        if  (pfxLen  >  0)  {  //  we  have  a  hex  number    final  int  hexDigits  =  str.length()  -  pfxLen;  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	466	467	1	replace	if(hexDigits  ==  1)  {  int  decPos  =  str.indexOf('.')+  str.indexOf('E')+  1;  if(decPos  >=  decPos)  {  return  createLong(str);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	362	None
23582	[BUG]  [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes);  [CE]  ';'  expected  [CONTEXT]        public  static  Number  createNumber(final  String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};        [BUGGY]  final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes);  [BUGGY]        int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	459	459	1	replace	final  String  pfx  =  str.toLowerCase(java.util.Locale.ENGLISH),  hex_prefixes);	  final    String    pfx    =    str.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  ';'  expected	1021	None
23642	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  -  1L;  [CE]  illegal  start  of  expression  [CONTEXT]        public  static  Integer  createInteger(final  String  str)  {        [BUGGY]  return  Integer.MAX_VALUE  -  1L;  [BUGGY]        if  (str  ==  null)  {  return  null;  }  return  Integer.decode(str);  }  [CLASS]  NumberUtils  [METHOD]  createInteger  [RETURN_TYPE]  Integer  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  String  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.4472135954999579	680	680	1	replace	return  Integer.MAX_VALUE  -  1L;	  return    Integer.MAX_VALUE    -    1;    	non-compiled	[CE]  illegal  start  of  expression	6421	None
23702	[BUG]  [BUGGY]  String  decPos  =  pfx.indexOf('.',  '/')+  1;  [CE]  illegal  start  of  type  [CONTEXT]        if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(       "A  blank  string  is  not  a  valid  number       ");  }  final  String[]  hex_prefixes  =  {       "0x       ",         "0X       ",         "-0x       ",         "-0X       ",         "#       ",         "-#       "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {        [BUGGY]  String  decPos  =  pfx.indexOf('.',  '/')+  1;  [BUGGY]        if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;  if  (hexDigits  >  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.31622776601683794	461	461	1	replace	String  decPos  =  pfx.indexOf('.',  '/')+  1;	  String    decPos    =    pfx.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	3194	None
