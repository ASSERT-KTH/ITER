bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length();  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  str.length();	  int    hexDigits    =    str.length()    +    1;    	non-compiled	[CE]  ';'  expected	44	None	replace
2	[BUG]  [BUGGY]  HexDigits  =  str.length();  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  HexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	HexDigits  =  str.length();	  hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	34	None	replace
3	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  -  pfxLen;  break;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  -  pfxLen;  break;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  -  pfxLen;  break;	  final    int    expPos    =    str.length();    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
4	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  +  pfxLen;  break;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  +  pfxLen;  break;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  +  pfxLen;  break;	  final    int    expPos    =    str.length();    break;    	non-compiled	[CE]  ';'  expected	14	None	replace
5	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  /  pfxLen;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  str.length()  /  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  str.length()  /  pfxLen;	  final    int    hexDigits    =    str.length()    +    pfxLen;    	non-compiled	[CE]  ';'  expected	20	None	replace
6	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
7	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  if(hexDigits  <  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >  8)  {  if(hexDigits  <  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  8)  {  if(hexDigits  <  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
8	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  createBigInteger(str);  }  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  createBigInteger(str);  }	  if(hexDigits    <    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  ';'  expected	23	None	replace
9	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  +  hexDigits;  break;  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  +  hexDigits;  break;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  +  hexDigits;  break;	  final    int    expPos    =    str.length()    -    hexDigits;    break;    	non-compiled	[CE]  ';'  expected	15	None	replace
10	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  2);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  2);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  *  2);	  hexDigits    =    str.charAt(hexDigits    +    2);    	non-compiled	[CE]  ';'  expected	40	None	replace
11	[BUG]  [BUGGY]  hexDigits  =  str.charAt(pfxLen  +  2);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(pfxLen  +  2);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(pfxLen  +  2);	  hexDigits    =    str.charAt(hexDigits    +    2);    	non-compiled	[CE]  	40	None	replace
12	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits  ==  0)  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits  ==  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits  ==  0)  {	  if(hexDigits    <    0    ||    hexDigits    >    0)    {    	non-compiled	[CE]  	59	None	replace
13	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  8)  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  8)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits  >  8)  {	  if(hexDigits    <    0    ||    hexDigits    >    0)    {    	non-compiled	[CE]  	59	None	replace
14	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  hexDigits  >  0)  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  ==  0  ||  hexDigits  >  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  0  ||  hexDigits  >  0)  {	  if(hexDigits    <    0    ||    hexDigits    >    0)    {    	non-compiled	[CE]  	59	None	replace
15	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits!=  0)  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits!=  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits!=  0)  {	  if(hexDigits    <    0    ||    hexDigits    >    0)    {    	non-compiled	[CE]  	59	None	replace
16	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(hexDigits);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createBigInteger(hexDigits);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createBigInteger(hexDigits);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  ';'  expected	60	None	replace
17	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits,  pfxLen);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(hexDigits,  pfxLen);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(hexDigits,  pfxLen);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  ';'  expected	60	None	replace
18	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits,  0);  [CE]  ';'  expected  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(hexDigits,  0);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(hexDigits,  0);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  ';'  expected	60	None	replace
19	[BUG]  [BUGGY]  Integer  str  =  createInteger(pfx);  [CE]  ';'  expected  [FE]                          NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(pfx);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(pfx);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  ';'  expected	60	None	replace
20	[BUG]  [BUGGY]  hexDigits  =  str.charAt(pfxLen  *  1);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(pfxLen  *  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(pfxLen  *  1);	  hexDigits    =    str.charAt(hexDigits    *    1);    	non-compiled	[CE]  ';'  expected	39	None	replace
21	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  4);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  4);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  *  4);	  hexDigits    =    str.charAt(hexDigits    *    1);    	non-compiled	[CE]  ';'  expected	39	None	replace
22	[BUG]  [BUGGY]  final  char  hexDigits  =  str.length();  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  char  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  char  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ';'  expected	22	None	replace
23	[BUG]  [BUGGY]  final  Integer  hexDigits  =  createInteger(pfx);  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  Integer  hexDigits  =  createInteger(pfx);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  Integer  hexDigits  =  createInteger(pfx);	  Integer    hexDigits    =    createInteger(pfx);    	non-compiled	[CE]  ';'  expected	19	None	replace
24	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(1);  [CE]  ';'  expected  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(1);	  Integer    hexDigits    =    createInteger(pfx);    	non-compiled	[CE]  ';'  expected	19	None	replace
25	[BUG]  [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(pfxLen);  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(pfxLen);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length();  return  createInteger(pfxLen);	  final    int    expPos    =    str.length()    -    pfxLen;    return    createInteger(str);    	non-compiled	[CE]  ';'  expected	7	None	replace
26	[BUG]  [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(pfx);  [CE]  'else'  without  'if'  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(pfx);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length();  return  createInteger(pfx);	  final    int    expPos    =    str.length()    -    pfxLen;    return    createInteger(str);    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
27	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  -  1;  return  createInteger(str);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  -  1;  return  createInteger(str);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  -  1;  return  createInteger(str);	  final    int    expPos    =    str.length()    -    pfxLen;    return    createInteger(str);    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  -  pfxLen;  break;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  str.length()  -  pfxLen;  break;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  str.length()  -  pfxLen;  break;	  final    int    hexDigits    =    str.length();    break;    	non-compiled	[CE]  ';'  expected	50	None	replace
29	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  expPos  ==  0)  {  final  int  expPos  =  str.length();  break;  }  [CE]  'else'  without  'if'  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  expPos  ==  0)  {  final  int  expPos  =  str.length();  break;  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  expPos  ==  0)  {  final  int  expPos  =  str.length();  break;  }	  if(hexDigits    <    0    ||    expPos    >    0)    {    final    int    expPos    =    str.length();    break;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
30	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  expPos  >=  0)  {  final  int  expPos  =  str.length();  break;  }  [CE]  'else'  without  'if'  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  expPos  >=  0)  {  final  int  expPos  =  str.length();  break;  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  expPos  >=  0)  {  final  int  expPos  =  str.length();  break;  }	  if(hexDigits    <    0    ||    expPos    >    0)    {    final    int    expPos    =    str.length();    break;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
31	[BUG]  [BUGGY]  hexDigits  =  str.charAt(pfxLen  -  1);  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(pfxLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(pfxLen  -  1);	  hexDigits    =    str.charAt(pfxLen);    	non-compiled	[CE]  ';'  expected	27	None	replace
32	[BUG]  [BUGGY]  if(hexDigits!=  0)  {  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits!=  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits!=  0)  {	  if(hexDigits    ==    8)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
33	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >=  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >=  0)  {	  if(hexDigits    ==    8)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
34	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  2);  [CE]  ';'  expected  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  2);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  -  2);	  hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  ';'  expected	51	None	replace
35	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  4);  [CE]  'else'  without  'if'  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  4);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  -  4);	  hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  'else'  without  'if'	51	None	replace
36	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  pfxLen));  [CE]  'else'  without  'if'  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  pfxLen));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  pfxLen));	  Integer    hexDigits    =    createInteger(str.substring(0,    hexDigits));    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
37	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits  +  1));  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits  +  1));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits  +  1));	  Integer    hexDigits    =    createInteger(str.substring(0,    hexDigits));    	non-compiled	[CE]  ';'  expected	62	None	replace
38	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  16));  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  16));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  16));	  Integer    hexDigits    =    createInteger(str.substring(0,    hexDigits));    	non-compiled	[CE]  ';'  expected	62	None	replace
39	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  12));  [CE]  ';'  expected  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  12));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  12));	  Integer    hexDigits    =    createInteger(str.substring(0,    hexDigits));    	non-compiled	[CE]  ';'  expected	62	None	replace
40	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  3);  [CE]  'else'  without  'if'  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  3);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  *  3);	  hexDigits    =    str.charAt(hexDigits    +    3);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
41	[BUG]  [BUGGY]  hexDigits  =  str.charAt(pfxLen  +  3);  [CE]  'else'  without  'if'  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(pfxLen  +  3);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(pfxLen  +  3);	  hexDigits    =    str.charAt(hexDigits    +    3);    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
42	[BUG]  [BUGGY]  hexDigits  =  str.length()  +  pfxLen;  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.length()  +  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.length()  +  pfxLen;	  hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	32	None	replace
43	[BUG]  [BUGGY]  hexDigits  =  str.length()  *  pfxLen;  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.length()  *  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.length()  *  pfxLen;	  hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  ';'  expected	32	None	replace
44	[BUG]  [BUGGY]  final  Integer  hexDigits  =  createInteger(hexDigits);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  Integer  hexDigits  =  createInteger(hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  Integer  hexDigits  =  createInteger(hexDigits);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  ';'  expected	17	None	replace
45	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits,  16);  [CE]  'else'  without  'if'  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits,  16);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(hexDigits,  16);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
46	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hex_prefixes);  [CE]  'else'  without  'if'  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(hex_prefixes);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(hex_prefixes);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
47	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  -  1;  break;  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  -  1;  break;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  -  1;  break;	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length()    -    pfxLen;    break;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
48	[BUG]  [BUGGY]  final  Long  hexDigits  =  createLong(str);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  Long  hexDigits  =  createLong(str);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  Long  hexDigits  =  createLong(str);	  final    Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ';'  expected	16	None	replace
49	[BUG]  [BUGGY]  final  int  hexDigits  =  createInteger(hexDigits);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  createInteger(hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  createInteger(hexDigits);	  final    Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ';'  expected	16	None	replace
50	[BUG]  [BUGGY]  final  Integer  hexDigits  =  createInteger(0);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  Integer  hexDigits  =  createInteger(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  Integer  hexDigits  =  createInteger(0);	  final    Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ';'  expected	16	None	replace
51	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0,  pfxLen  +  1);  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(0,  pfxLen  +  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(0,  pfxLen  +  1);	  hexDigits    =    str.charAt(0,    pfxLen);    	non-compiled	[CE]  ';'  expected	29	None	replace
52	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0,  pfxLen  -  1);  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(0,  pfxLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(0,  pfxLen  -  1);	  hexDigits    =    str.charAt(0,    pfxLen);    	non-compiled	[CE]  ';'  expected	29	None	replace
53	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0,  hexDigits);  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(0,  hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(0,  hexDigits);	  hexDigits    =    str.charAt(0,    pfxLen);    	non-compiled	[CE]  ';'  expected	29	None	replace
54	[BUG]  [BUGGY]  if(hexDigits  <  16  ||  hexDigits  ==  0)  {  [CE]  ';'  expected  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  16  ||  hexDigits  ==  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  16  ||  hexDigits  ==  0)  {	  if(hexDigits    <    16    ||    hexDigits    >    0)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
55	[BUG]  [BUGGY]  if(hexDigits  <  8  ||  hexDigits  >  0)  {  [CE]  ';'  expected  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  8  ||  hexDigits  >  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  8  ||  hexDigits  >  0)  {	  if(hexDigits    <    16    ||    hexDigits    >    0)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
56	[BUG]  [BUGGY]  if(hexDigits  <  32  ||  hexDigits  >  0)  {  [CE]  ';'  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  32  ||  hexDigits  >  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  32  ||  hexDigits  >  0)  {	  if(hexDigits    <    16    ||    hexDigits    >    0)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
57	[BUG]  [BUGGY]  if(hexDigits  <  12  ||  hexDigits  >  0)  {  [CE]  ';'  expected  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  12  ||  hexDigits  >  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  12  ||  hexDigits  >  0)  {	  if(hexDigits    <    16    ||    hexDigits    >    0)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
58	[BUG]  [BUGGY]  final  int  numDecimals  =  str.length()  -  1;  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  numDecimals  =  str.length()  -  1;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  numDecimals  =  str.length()  -  1;	  final    int    numDecimals    =    str.length();    	non-compiled	[CE]  orphaned  case	12	None	replace
59	[BUG]  [BUGGY]  final  int  numDecimals  =  str.length()  +  1;  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  numDecimals  =  str.length()  +  1;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  numDecimals  =  str.length()  +  1;	  final    int    numDecimals    =    str.length();    	non-compiled	[CE]  orphaned  case	12	None	replace
60	[BUG]  [BUGGY]  final  int  numDecimals  =  str.length()  -  2;  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  numDecimals  =  str.length()  -  2;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  numDecimals  =  str.length()  -  2;	  final    int    numDecimals    =    str.length();    	non-compiled	[CE]  orphaned  case	12	None	replace
61	[BUG]  [BUGGY]  final  char  expPos  =  str.length();  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  char  expPos  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  char  expPos  =  str.length();	  final    int    expPos    =    str.length()    -    2;    	non-compiled	[CE]  orphaned  case	49	None	replace
62	[BUG]  [BUGGY]  static  final  int  expPos  =  str.length();  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  static  final  int  expPos  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	static  final  int  expPos  =  str.length();	  final    int    expPos    =    str.length()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
63	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  +  pfxLen;  [CE]  'catch'  without  'try'  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  int  hexDigits  =  str.length()  +  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	int  hexDigits  =  str.length()  +  pfxLen;	  int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  'catch'  without  'try'	42	None	replace
64	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  pfxLen;  [CE]  'catch'  without  'try'  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.length()  -  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.length()  -  pfxLen;	  int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  'catch'  without  'try'	42	None	replace
65	[BUG]  [BUGGY]  hexDigits  =  str.charAt(pfxLen  +  4);  [CE]  'catch'  without  'try'  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(pfxLen  +  4);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(pfxLen  +  4);	  hexDigits    =    str.charAt(pfxLen    +    1);    	non-compiled	[CE]  'catch'  without  'try'	38	None	replace
66	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  +  pfxLen;  [CE]  'catch'  without  'try'  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  +  pfxLen;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  +  pfxLen;	  final    int    expPos    =    str.length()    -    pfxLen;    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
67	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(2));  [CE]  'catch'  without  'try'  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(2));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(2));	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  'catch'  without  'try'	63	None	replace
68	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(1),  pfxLen);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(1),  pfxLen);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(1),  pfxLen);	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	63	None	replace
69	[BUG]  [BUGGY]  final  Integer  hexDigits  =  createInteger(str.substring(1));  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  Integer  hexDigits  =  createInteger(str.substring(1));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  Integer  hexDigits  =  createInteger(str.substring(1));	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  orphaned  case	63	None	replace
70	[BUG]  [BUGGY]  final  int  decPos  =  str.length()  -  1;  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  decPos  =  str.length()  -  1;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  decPos  =  str.length()  -  1;	  final    int    decPos    =    str.length();    	non-compiled	[CE]  orphaned  case	13	None	replace
71	[BUG]  [BUGGY]  final  int  decPos  =  str.length()  -  hexDigits;  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  decPos  =  str.length()  -  hexDigits;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  decPos  =  str.length()  -  hexDigits;	  final    int    decPos    =    str.length();    	non-compiled	[CE]  orphaned  case	13	None	replace
72	[BUG]  [BUGGY]  final  int  decPos  =  str.length()  +  1;  [CE]  'catch'  without  'try'  [FE]                          NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  decPos  =  str.length()  +  1;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  decPos  =  str.length()  +  1;	  final    int    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	13	None	replace
73	[BUG]  [BUGGY]  final  int  decPos  =  str.length()  +  hexDigits;  [CE]  orphaned  case  [FE]                            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  decPos  =  str.length()  +  hexDigits;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  decPos  =  str.length()  +  hexDigits;	  final    int    decPos    =    str.length();    	non-compiled	[CE]  orphaned  case	13	None	replace
74	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  *  pfxLen  +  1;  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  str.length()  *  pfxLen  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  str.length()  *  pfxLen  +  1;	  final    int    hexDigits    =    str.length()    *    pfxLen;    	non-compiled	[CE]  orphaned  case	21	None	replace
75	[BUG]  [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(hexDigits);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(hexDigits);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length();  return  createInteger(hexDigits);	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length();    return    createInteger(exp);    }    	non-compiled	[CE]  orphaned  case	61	None	replace
76	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  final  int  expPos  =  str.length();  return  createInteger(hexDigits);  }  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0)  {  final  int  expPos  =  str.length();  return  createInteger(hexDigits);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0)  {  final  int  expPos  =  str.length();  return  createInteger(hexDigits);  }	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length();    return    createInteger(exp);    }    	non-compiled	[CE]  orphaned  case	61	None	replace
77	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  final  int  expPos  =  str.length();  return  createInteger(pfxLen);  }  [CE]  orphaned  case  [FE]                          NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0)  {  final  int  expPos  =  str.length();  return  createInteger(pfxLen);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0)  {  final  int  expPos  =  str.length();  return  createInteger(pfxLen);  }	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length();    return    createInteger(exp);    }    	non-compiled	[CE]  orphaned  case	61	None	replace
78	[BUG]  [BUGGY]  if(hexDigits  ==  null)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  ==  null)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  null)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }	  final    int    expPos    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  orphaned  case	6	None	replace
79	[BUG]  [BUGGY]  if(hexDigits!=  null)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits!=  null)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits!=  null)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }	  final    int    expPos    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  orphaned  case	6	None	replace
80	[BUG]  [BUGGY]  String  hexDigits  =  str.length();  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  String  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	String  hexDigits  =  str.length();	  char    hexDigits    =    str.length();    	non-compiled	[CE]  orphaned  case	43	None	replace
81	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  +  1;  [CE]  'catch'  without  'try'  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.length()  +  1;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
82	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  1;  [CE]  'catch'  without  'try'  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.length()  -  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.length()  -  1;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
83	[BUG]  [BUGGY]  final  int  expPos  =  hexDigits.length();  [CE]  'catch'  without  'try'  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  hexDigits.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  hexDigits.length();	  final    int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
84	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  -  hexDigits;  [CE]  'catch'  without  'try'  [FE]                          NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  -  hexDigits;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  -  hexDigits;	  final    int    expPos    =    str.length()    +    hexDigits;    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
85	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  /  hexDigits;  [CE]  'catch'  without  'try'  [FE]                            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  /  hexDigits;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  /  hexDigits;	  final    int    expPos    =    str.length()    +    hexDigits;    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
86	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  +  hexDigits  +  1;  [CE]  'catch'  without  'try'  [FE]                              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  +  hexDigits  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  +  hexDigits  +  1;	  final    int    expPos    =    str.length()    +    hexDigits;    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
87	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  'catch'  without  'try'  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >=  0)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >=  0)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >=    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  'catch'  without  'try'	25	None	replace
88	[BUG]  [BUGGY]  if(hexDigits  ==  null)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [CE]  'catch'  without  'try'  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  ==  null)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  null)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }	  final    int    hexDigits    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  'catch'  without  'try'	48	None	replace
89	[BUG]  [BUGGY]  if(hexDigits!=  null)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [CE]  'catch'  without  'try'  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits!=  null)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits!=  null)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }	  final    int    hexDigits    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  'catch'  without  'try'	48	None	replace
90	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length();  return  createInteger(hexDigits);  [CE]  'catch'  without  'try'  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  str.length();  return  createInteger(hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  str.length();  return  createInteger(hexDigits);	  final    int    hexDigits    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  'catch'  without  'try'	48	None	replace
91	[BUG]  [BUGGY]  final  Integer  hexDigits  =  createBigInteger(str);  [CE]  'catch'  without  'try'  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  Integer  hexDigits  =  createBigInteger(str);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  Integer  hexDigits  =  createBigInteger(str);	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
92	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(hexDigits);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createBigInteger(hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createBigInteger(hexDigits);	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  orphaned  case	52	None	replace
93	[BUG]  [BUGGY]  if(hexDigits  <  =  8)  {  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  =  8)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  =  8)  {	  if(hexDigits    <    =    16)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
94	[BUG]  [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  8)  {  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  8)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  16  ||  hexDigits  >  8)  {	  if(hexDigits    <    =    16)    {    	non-compiled	[CE]  orphaned  case	56	None	replace
95	[BUG]  [BUGGY]  if(hexDigits  <  1)  {  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  1)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  1)  {	  if(hexDigits    <    8)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
96	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hex);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(hex);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(hex);	  Integer    hexDigits    =    createInteger(pfx);    	non-compiled	[CE]  orphaned  case	19	None	replace
97	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  -  hexDigits  +  1;  break;  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  -  hexDigits  +  1;  break;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  -  hexDigits  +  1;  break;	  final    int    expPos    =    str.length()    -    hexDigits;    break;    	non-compiled	[CE]  orphaned  case	15	None	replace
98	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits;  [CE]  ')'  expected  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits;	  hexDigits    =    str.charAt(pfxLen);    	non-compiled	[CE]  ')'  expected	27	None	replace
99	[BUG]  [BUGGY]  final  int  expPos  =  str.charAt(str.length()  -  1);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.charAt(str.length()  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.charAt(str.length()  -  1);	  final    int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  orphaned  case	8	None	replace
100	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexLen  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexLen  +  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexLen  +  1);	  hexDigits    =    str.charAt(pfxLen    +    1);    	non-compiled	[CE]  orphaned  case	38	None	replace
101	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  expPos  >  10)  {  final  int  expPos  =  str.length();  break;  }  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  expPos  >  10)  {  final  int  expPos  =  str.length();  break;  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  expPos  >  10)  {  final  int  expPos  =  str.length();  break;  }	  if(hexDigits    <    0    ||    expPos    >    0)    {    final    int    expPos    =    str.length();    break;    }    	non-compiled	[CE]  orphaned  case	58	None	replace
102	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  expPos  >  8)  {  final  int  expPos  =  str.length();  break;  }  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  expPos  >  8)  {  final  int  expPos  =  str.length();  break;  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  expPos  >  8)  {  final  int  expPos  =  str.length();  break;  }	  if(hexDigits    <    0    ||    expPos    >    0)    {    final    int    expPos    =    str.length();    break;    }    	non-compiled	[CE]  orphaned  case	58	None	replace
103	[BUG]  [BUGGY]  final  int  hexDigits  =  str.length()  +  pfxLen  +  1;  [CE]  'catch'  without  'try'  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  str.length()  +  pfxLen  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  str.length()  +  pfxLen  +  1;	  final    int    hexDigits    =    str.length()    +    pfxLen;    	non-compiled	[CE]  'catch'  without  'try'	20	None	replace
104	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  1  +  1);  [CE]  'catch'  without  'try'  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  1  +  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  -  1  +  1);	  hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
105	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  16);  [CE]  'catch'  without  'try'  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  16);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  -  16);	  hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  'catch'  without  'try'	51	None	replace
106	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits  +  1);  [CE]  'catch'  without  'try'  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(hexDigits  +  1);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(hexDigits  +  1);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  'catch'  without  'try'	60	None	replace
107	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits  -  1);  [CE]  'catch'  without  'try'  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(hexDigits  -  1);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(hexDigits  -  1);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  'catch'  without  'try'	60	None	replace
108	[BUG]  [BUGGY]  static  final  int  hexDigits  =  str.length();  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  static  final  int  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	static  final  int  hexDigits  =  str.length();	  final    int    hexDigits    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
109	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.charAt(0));  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.charAt(0));	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
110	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(1),  hexDigits);  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(1),  hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(1),  hexDigits);	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
111	[BUG]  [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(exp);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length();  return  createInteger(exp);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length();  return  createInteger(exp);	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length();    return    createInteger(exp);    }    	non-compiled	[CE]  orphaned  case	61	None	replace
112	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(0);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createBigInteger(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createBigInteger(0);	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  orphaned  case	52	None	replace
113	[BUG]  [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  32)  {  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  32)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  16  ||  hexDigits  >  32)  {	  if(hexDigits    <    =    16)    {    	non-compiled	[CE]  orphaned  case	56	None	replace
114	[BUG]  [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  12)  {  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  12)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  16  ||  hexDigits  >  12)  {	  if(hexDigits    <    =    16)    {    	non-compiled	[CE]  orphaned  case	56	None	replace
115	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits)+  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits)+  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits)+  1);	  Integer    hexDigits    =    createInteger(str.substring(0,    hexDigits));    	non-compiled	[CE]  orphaned  case	62	None	replace
116	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits),  16);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits),  16);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  hexDigits),  16);	  Integer    hexDigits    =    createInteger(str.substring(0,    hexDigits));    	non-compiled	[CE]  orphaned  case	62	None	replace
117	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits  +  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits  +  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createInteger(hexDigits  +  1);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  orphaned  case	17	None	replace
118	[BUG]  [BUGGY]  if(hexDigits!=  0)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits!=  0)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits!=  0)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    ==    0)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  orphaned  case	37	None	replace
119	[BUG]  [BUGGY]  final  int  decPos  =  str.length()  -  2;  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  decPos  =  str.length()  -  2;  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  decPos  =  str.length()  -  2;	  final    int    decPos    =    str.length();    	non-compiled	[CE]  orphaned  case	13	None	replace
120	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(0);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.charAt(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.charAt(0);	  char    hexDigits    =    str.length();    	non-compiled	[CE]  not  a  statement	43	None	replace
121	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(hexDigits);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.charAt(hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.charAt(hexDigits);	  char    hexDigits    =    str.length();    	non-compiled	[CE]  not  a  statement	43	None	replace
122	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(hexDigits  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.charAt(hexDigits  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.charAt(hexDigits  -  1);	  char    hexDigits    =    str.length();    	non-compiled	[CE]  not  a  statement	43	None	replace
123	[BUG]  [BUGGY]  if(hexDigits  <  =  16  ||  hexDigits  >  0)  {  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  =  16  ||  hexDigits  >  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  =  16  ||  hexDigits  >  0)  {	  if(hexDigits    <    16    ||    hexDigits    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
124	[BUG]  [BUGGY]  hexDigits  =  str.length()  -  4;  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.length()  -  4;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.length()  -  4;	  hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  not  a  statement	32	None	replace
125	[BUG]  [BUGGY]  final  hexDigits  =  str.length();  [CE]  <identifier>  expected  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  hexDigits  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  hexDigits  =  str.length();	  hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
126	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits  <  0)  {  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits  <  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits  <  0)  {	  if(hexDigits    <    8)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
127	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }	  final    int    hexDigits    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  not  a  statement	48	None	replace
128	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >  0)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  0)  {  final  int  hexDigits  =  str.length();  return  createInteger(str);  }	  final    int    hexDigits    =    str.length();    return    createInteger(str);    	non-compiled	[CE]  not  a  statement	48	None	replace
129	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits  >  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    0)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
130	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  -  2;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  int  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	int  hexDigits  =  str.length()  -  2;	  int    hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  orphaned  case	42	None	replace
131	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }	  if(hexDigits    <    0    ||    expPos    >    0)    {    final    int    expPos    =    str.length();    return    createInteger(str);    }    	non-compiled	[CE]  orphaned  case	55	None	replace
132	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexPos  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexPos  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexPos  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }	  if(hexDigits    <    0    ||    expPos    >    0)    {    final    int    expPos    =    str.length();    return    createInteger(str);    }    	non-compiled	[CE]  orphaned  case	55	None	replace
133	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(hexDigits);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  int  hexDigits  =  createInteger(hexDigits);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	int  hexDigits  =  createInteger(hexDigits);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  orphaned  case	17	None	replace
134	[BUG]  [BUGGY]  Final  int  expPos  =  str.length();  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Final  int  expPos  =  str.length();  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Final  int  expPos  =  str.length();	  final    int    expPos    =    str.length()    -    2;    	non-compiled	[CE]  not  a  statement	49	None	replace
135	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexLen  -  1);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexLen  -  1);	  hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  orphaned  case	34	None	replace
136	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  1)  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  hexDigits  >  1)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  hexDigits  >  1)  {	  if(hexDigits    <    0    ||    hexDigits    >    0)    {    	non-compiled	[CE]  orphaned  case	59	None	replace
137	[BUG]  [BUGGY]  if(hexDigits  <  =  0  ||  hexDigits  >  0)  {  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  =  0  ||  hexDigits  >  0)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  =  0  ||  hexDigits  >  0)  {	  if(hexDigits    <    0    ||    hexDigits    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
138	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(hexLen  -  1);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.charAt(hexLen  -  1);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.charAt(hexLen  -  1);	  char    hexDigits    =    str.length();    	non-compiled	[CE]  orphaned  case	43	None	replace
139	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(hexLen);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  char  hexDigits  =  str.charAt(hexLen);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	char  hexDigits  =  str.charAt(hexLen);	  char    hexDigits    =    str.length();    	non-compiled	[CE]  orphaned  case	43	None	replace
140	[BUG]  [BUGGY]  final  int  expPos  =  str.charAt(0);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.charAt(0);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.charAt(0);	  final    int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  orphaned  case	8	None	replace
141	[BUG]  [BUGGY]  Integer  hexDigits  =  createLong(str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  hexDigits  =  createLong(str);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  hexDigits  =  createLong(str);	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  orphaned  case	52	None	replace
142	[BUG]  [BUGGY]  hexDigits  =  str.length()  -  10;  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.length()  -  10;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.length()  -  10;	  hexDigits    =    str.length()    -    pfxLen;    	non-compiled	[CE]  orphaned  case	32	None	replace
143	[BUG]  [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  1)  {  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  16  ||  hexDigits  >  1)  {  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  16  ||  hexDigits  >  1)  {	  if(hexDigits    <    16    ||    hexDigits    >    0)    {    	non-compiled	[CE]  orphaned  case	64	None	replace
144	[BUG]  [BUGGY]  if(hexDigits  ==  null)  {  final  int  expPos  =  str.length()  -  pfxLen;  return  createInteger(str);  }  [CE]  orphaned  case  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  ==  null)  {  final  int  expPos  =  str.length()  -  pfxLen;  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  null)  {  final  int  expPos  =  str.length()  -  pfxLen;  return  createInteger(str);  }	  final    int    expPos    =    str.length()    -    pfxLen;    return    createInteger(str);    	non-compiled	[CE]  orphaned  case	7	None	replace
145	[BUG]  [BUGGY]  if(hexDigits  <  =  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  =  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  =  16)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    >    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
146	[BUG]  [BUGGY]  Integer  str  =  createInteger(str);  [CE]  orphaned  case  [FE]                    NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(str);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(str);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  orphaned  case	60	None	replace
147	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits,  pfx);  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  Integer  str  =  createInteger(hexDigits,  pfx);  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	Integer  str  =  createInteger(hexDigits,  pfx);	  Integer    str    =    createInteger(hexDigits);    	non-compiled	[CE]  orphaned  case	60	None	replace
148	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  3);  [CE]  orphaned  case  [FE]                  NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  3);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	hexDigits  =  str.charAt(hexDigits  -  3);	  hexDigits    =    str.charAt(hexDigits    +    3);    	non-compiled	[CE]  orphaned  case	53	None	replace
149	[BUG]  [BUGGY]  if(hexDigits  <  =  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  =  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  =  8)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    <    8)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
150	[BUG]  [BUGGY]  final  int  hexDigits  =  createInteger(str);  [CE]  orphaned  case  [FE]                NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  hexDigits  =  createInteger(str);  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  hexDigits  =  createInteger(str);	  final    Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  orphaned  case	16	None	replace
151	[BUG]  [BUGGY]  final  int  expPos  =  str.length()  -  pfxLen  +  1;  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  final  int  expPos  =  str.length()  -  pfxLen  +  1;  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	final  int  expPos  =  str.length()  -  pfxLen  +  1;	  final    int    expPos    =    str.length()    -    pfxLen;    	non-compiled	[CE]  orphaned  case	10	None	replace
152	[BUG]  [BUGGY]  if(hexDigits  <  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  32)  {  //  too  many  for  Long  return  createBigInteger(str);  }	  if(hexDigits    ==    16)    {    //    too    many    for    Long    return    createBigInteger(str);    }    	non-compiled	[CE]  orphaned  case	45	None	replace
153	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [CE]  orphaned  case  [FE]            NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  ==  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }  [BUGGY]      if  (hexDigits  >  16)  {  //  too  many  for  Long    return  createBigInteger(str);  return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  ==  0)  {  final  int  expPos  =  str.length();  return  createInteger(str);  }	  if(hexDigits    >    0)    {    final    int    expPos    =    str.length();    return    createInteger(str);    }    	non-compiled	[CE]  orphaned  case	54	None	replace
154	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(exp);  }  [CE]  orphaned  case  [FE]                      NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(exp);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(exp);  }	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length();    return    createInteger(exp);    }    	non-compiled	[CE]  orphaned  case	61	None	replace
155	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  expPos  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(exp);  }  [CE]  orphaned  case  [FE]                        NumberFormatException      [CONTEXT]      final  String[]  hex_prefixes  =  {     "0x     ",       "0X     ",       "-0x     ",       "-0X     ",       "#     ",       "-#     "};  int  pfxLen  =  0;  for(final  String  pfx  :  hex_prefixes)  {  if  (str.startsWith(pfx))  {  pfxLen  +=  pfx.length();  break;  }  }  if  (pfxLen  >  0)  {  //  we  have  a  hex  number  final  int  hexDigits  =  str.length()  -  pfxLen;      [BUGGY]  if(hexDigits  <  0  ||  expPos  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(exp);  }  [BUGGY]      return  createBigInteger(str);  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  final  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  pfx  str  String[]  hex_prefixes  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  numDecimals  pfxLen  	projects/Lang1/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5	468	469	1	replace	if(hexDigits  <  0  ||  expPos  >  0)  {  final  int  expPos  =  str.length();  return  createInteger(exp);  }	  if(hexDigits    <    0)    {    final    int    expPos    =    str.length();    return    createInteger(exp);    }    	non-compiled	[CE]  orphaned  case	61	None	replace
