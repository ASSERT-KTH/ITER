bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  /  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  /  2);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  /  2);	      StringWriter    writer    =    new    StringWriter(output.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	11	None	replace
2	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(output.length()  /  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(output.length()  /  2);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(output.length()  /  2);	      StringWriter    writer    =    new    StringWriter(output.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	11	None	replace
3	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(write.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(write.length()  *  2);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(write.length()  *  2);	      	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	8	None	replace
4	[BUG]  [BUGGY]  reader  =  writer.read();  [CE]  cannot  find  symbol  reader  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader  =  writer.read();  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.read();	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  reader	7	None	replace
5	[BUG]  [BUGGY]  reader  =  writer.read(input);  [CE]  cannot  find  symbol  reader  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader  =  writer.read(input);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.read(input);	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  reader	7	None	replace
6	[BUG]  [BUGGY]  reader.translate(input,  writer);  [CE]  cannot  find  symbol  reader  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader.translate(input,  writer);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.translate(input,  writer);	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  reader	7	None	replace
7	[BUG]  [BUGGY]  reader  =  writer.toString();  [CE]  cannot  find  symbol  reader  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader  =  writer.toString();  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.toString();	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  reader	7	None	replace
8	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  -  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  -  2);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  -  2);	      StringWriter    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	9	None	replace
9	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length());  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length());	      StringWriter    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	9	None	replace
10	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(writer.length()  /  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(writer.length()  /  2);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(writer.length()  /  2);	      StringWriter    writer    =    new    StringWriter(writer.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	10	None	replace
11	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('n');  }	      writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	13	None	replace
12	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('n');  }  else  {  return  writer.toString();  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  writer.append('n');  }  else  {  return  writer.toString();  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('n');  }  else  {  return  writer.toString();  }	      writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	13	None	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  writer.append('n');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	12	17	add
14	[BUG]  [BUGGY]      writer.append('n');  writer.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  writer.append('n');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	12	17	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
16	[BUG]  [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
17	[BUG]  [BUGGY]      writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer.length()  >  0)  {  writer.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
18	[BUG]  [BUGGY]      writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer.length()  >  0)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
20	[BUG]  [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append( "n   ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append(   "n   ");    writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	14	17	add
22	[BUG]  [BUGGY]      writer.append(   "n   ");  writer.append( "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append( "n   ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append(   "n   ");    writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	14	17	add
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append('n');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append(   "n   ");    writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	14	17	add
24	[BUG]  [BUGGY]      writer.append(   "n   ");  writer.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append('n');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append(   "n   ");    writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	14	17	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append( ".n   ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append(   "n   ");    writer.append( ".n   ");	  	compilable	  [FE]  ComparisonFailure  	14	17	add
26	[BUG]  [BUGGY]      writer.append(   "n   ");  writer.append( ".n   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append( ".n   ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append(   "n   ");    writer.append( ".n   ");	  	compilable	  [FE]  ComparisonFailure  	14	17	add
27	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append( ",n   ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append(   "n   ");    writer.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    	14	17	add
28	[BUG]  [BUGGY]      writer.append(   "n   ");  writer.append( ",n   ");  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append(   "n   ");  writer.append( ",n   ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append(   "n   ");    writer.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    	14	17	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	4	17	add
30	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	4	17	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
32	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
33	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	4	None	add
34	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  If(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  If(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    If(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
35	[BUG]  [BUGGY]  writer.append( "null ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "null ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "null ");	      if(writer!=    null)    {    writer.append(   "n   ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	17	None	replace
36	[BUG]  [BUGGY]  reader.append( "null ");  [CE]  cannot  find  symbol  reader  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader.append( "null ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.append( "null ");	      if(writer!=    null)    {    writer.append(   "n   ");    }    	non-compiled	[CE]  cannot  find  symbol  reader	17	None	replace
37	[BUG]  [BUGGY]  writer.append( "no-string ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "no-string ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "no-string ");	      if(writer!=    null)    {    writer.append(   "n   ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	17	None	replace
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	18	17	add
39	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	18	17	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	18	17	add
41	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	18	17	add
42	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	18	None	add
43	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  ';'  expected	18	None	add
44	[BUG]  [BUGGY]  reader.append('n');  [CE]  cannot  find  symbol  reader  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader.append('n');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.append('n');	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol  reader	19	None	replace
45	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  *  2);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(input.length()  *  2);	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	19	None	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	2	17	add
47	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	2	17	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	2	17	add
49	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	2	17	add
50	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  >=  null)  {  translate(input,  writer);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  >=  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    if(writer  >=  null)  {  translate(input,  writer);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	2	None	add
51	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  If(writer!=  null)  {  translate(input,  writer);  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  If(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    If(writer!=  null)  {  translate(input,  writer);  }	  	non-compiled	[CE]  ';'  expected	2	None	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append(   "n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append(   "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	16	17	add
53	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append(   "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append(   "n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append(   "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	16	17	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	16	17	add
55	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	16	17	add
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	16	17	add
57	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	16	17	add
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
59	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
61	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
63	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "   ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	6	17	add
65	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "   ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "   ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	6	17	add
66	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "   ");  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }	  	compilable	  [FE]  RuntimeException  	6	17	add
67	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "   ");  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [FE]  RuntimeException  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "   ");  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }	  	compilable	  [FE]  RuntimeException  	6	17	add
68	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  >  0;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.length()  >  0;  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  >  0;	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
69	[BUG]  [BUGGY]  reader!=  null?  translate(input):  writer.toString();  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null?  translate(input):  writer.toString();  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null?  translate(input):  writer.toString();	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
70	[BUG]  [BUGGY]  reader!=  null  &&  writer.isEmpty();  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.isEmpty();  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.isEmpty();	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
71	[BUG]  [BUGGY]  writer.append( "mv.translate( ").append(input.charAt(0)));  [CE]  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "mv.translate( ").append(input.charAt(0)));  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "mv.translate( ").append(input.charAt(0)));	      writer.append(   "n   ");    	non-compiled	[CE]  	15	None	replace
72	[BUG]  [BUGGY]  writer.append( "mv.translate( ").append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "mv.translate( ").append(input.charAt(0));  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "mv.translate( ").append(input.charAt(0));	      writer.append(   "n   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	15	None	replace
73	[BUG]  [BUGGY]  writer!=  null  &&  translate(input,  writer);  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer!=  null  &&  translate(input,  writer);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  translate(input,  writer);	  if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
74	[BUG]  [BUGGY]  translate(writer,  input,  ioe);  [CE]  cannot  find  symbol  ioe  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  translate(writer,  input,  ioe);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  ioe);	  translate(writer,    input);    	non-compiled	[CE]  cannot  find  symbol  ioe	1	None	replace
75	[BUG]  [BUGGY]  translate(writer,  input,  writer);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,StringWriter)  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  translate(writer,  input,  writer);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer);	  translate(writer,    input);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,StringWriter)	1	None	replace
76	[BUG]  [BUGGY]  translate(writer,  input,  writer.toString());  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,String)  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  translate(writer,  input,  writer.toString());  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer.toString());	  translate(writer,    input);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,String)	1	None	replace
77	[BUG]  [BUGGY]  translate(writer,  input,  null);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,<null>)  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  translate(writer,  input,  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  null);	  translate(writer,    input);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,<null>)	1	None	replace
78	[BUG]  [BUGGY]  writer.append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append(input.charAt(0));  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.charAt(0));	  writer.append(input);    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	22	None	replace
79	[BUG]  [BUGGY]  write(writer,  input,  ioe);  [CE]  cannot  find  symbol  ioe  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  write(writer,  input,  ioe);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	write(writer,  input,  ioe);	  write(writer,    input);    	non-compiled	[CE]  cannot  find  symbol  ioe	23	None	replace
80	[BUG]  [BUGGY]  Writer  writer  =  writer.write(input,  input);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  Writer  writer  =  writer.write(input,  input);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  writer.write(input,  input);	  write(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	23	None	replace
81	[BUG]  [BUGGY]  write(writer,  input,  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  write(writer,  input,  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	write(writer,  input,  null);	  write(writer,    input);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
82	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(writer,  input);	  write(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	23	None	replace
83	[BUG]  [BUGGY]  Writer.append('n');  [CE]  non-static  method  append(char)  cannot  be  referenced  from  a  static  context  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  Writer.append('n');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer.append('n');	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  non-static  method  append(char)  cannot  be  referenced  from  a  static  context	21	None	replace
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
85	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
87	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n   ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n   ");  }	  	compilable	  [FE]  ComparisonFailure  	20	17	add
88	[BUG]  [BUGGY]  writer  =  new  StringWriter(writer.length()  *  2);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer  =  new  StringWriter(writer.length()  *  2);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(writer.length()  *  2);	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
89	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append( "null ");  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  writer.append( "null ");  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append( "null ");  }	      if(writer!=    null)    {    writer.append(   "n   ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	17	None	replace
90	[BUG]  [BUGGY]  writer.append( "native ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "native ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "native ");	      if(writer!=    null)    {    writer.append(   "n   ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	17	None	replace
91	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	4	17	add
92	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	4	17	add
93	[BUG]  [BUGGY]  writer.append( ", ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( ", ");  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ", ");	  writer.append(input);    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	22	None	replace
94	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(writer.length());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(writer.length());  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(writer.length());	      StringWriter    writer    =    new    StringWriter(writer.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	10	None	replace
95	[BUG]  [BUGGY]  parent().translate(input,  writer);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  parent().translate(input,  writer);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	parent().translate(input,  writer);	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
96	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  >  0);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.length()  >  0);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  >  0);	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
97	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  >>  null)  {  translate(input,  writer);  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  >>  null)  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=    null)    {    translate(input,    writer);    }    if(writer  >>  null)  {  translate(input,  writer);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	2	None	add
98	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
99	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
100	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
101	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
102	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0));  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0));	      StringWriter    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	9	None	replace
103	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  -  1);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  -  1);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  *  2  -  1);	      StringWriter    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	9	None	replace
104	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }	  if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
105	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }	  if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
106	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }	  if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
107	[BUG]  [BUGGY]  writer.append('N');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append('N');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('N');	      writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	13	None	replace
108	[BUG]  [BUGGY]  writer.append('#');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append('#');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('#');	      writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	13	None	replace
109	[BUG]  [BUGGY]  translate(writer,  input,  output);  [CE]  cannot  find  symbol  output  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  translate(writer,  input,  output);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  output);	  translate(writer,    input);    	non-compiled	[CE]  cannot  find  symbol  output	1	None	replace
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
111	[BUG]  [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
113	[BUG]  [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
114	[BUG]  [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >>  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >>  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  >>  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	18	None	add
115	[BUG]  [BUGGY]  reader!=  null  &&  translate(input,  writer);  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  translate(input,  writer);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  translate(input,  writer);	  if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
116	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer.toString());  }  [CE]  no  suitable  method  found  for  translate(CharSequence,String)  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  if(writer!=  null)  {  translate(input,  writer.toString());  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(input,  writer.toString());  }	  if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  no  suitable  method  found  for  translate(CharSequence,String)	3	None	replace
117	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
118	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
119	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
120	[BUG]  [BUGGY]  writer.append( "n ").append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "n ").append(input.charAt(0));  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "n ").append(input.charAt(0));	      	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	8	None	replace
121	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
122	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  }	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
123	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  }	      if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n   ");    }    	non-compiled	[CE]  not  a  statement	21	None	replace
124	[BUG]  [BUGGY]  nisip  =  writer.charAt(writer.length()  -  1);  [CE]  cannot  find  symbol  nisip  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  nisip  =  writer.charAt(writer.length()  -  1);  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	nisip  =  writer.charAt(writer.length()  -  1);	      if(writer!=    null)    {    writer.append(   "n   ");    }    	non-compiled	[CE]  cannot  find  symbol  nisip	17	None	replace
125	[BUG]  [BUGGY]  writer.append('[');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append('[');  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('[');	      writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	13	None	replace
126	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
128	[BUG]  [BUGGY]      writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
130	[BUG]  [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]      writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	        writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	12	17	add
131	[BUG]  [BUGGY]  writer.append( "none ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]    public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);    [BUGGY]  writer.append( "none ");  [BUGGY]    translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "none ");	      writer.append(   "n   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	15	None	replace
