bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
2	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
3	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
4	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
5	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
6	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
7	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	91	None	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	60	17	add
9	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	60	17	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	60	17	add
11	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	60	17	add
12	[BUG]  [BUGGY]  writer.append( "mv.translate( ".append(input.charAt(0)));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "mv.translate( ".append(input.charAt(0)));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "mv.translate( ".append(input.charAt(0)));	  writer.append(   "mv.translate(   ").append(input.charAt(0));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
13	[BUG]  [BUGGY]  writer.append( ".translate( ").append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ".translate( ").append(input.charAt(0));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ".translate( ").append(input.charAt(0));	  writer.append(   "mv.translate(   ").append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	72	None	replace
14	[BUG]  [BUGGY]  writer.append( ",n ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ",n ");  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ",n ");	  writer.append(   ",   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	93	None	replace
15	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(write.length()  /  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(write.length()  /  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(write.length()  /  2);	  StringWriter    writer    =    new    StringWriter(write.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	3	None	replace
16	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  +  input.charAt(0));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  +  input.charAt(0));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  +  input.charAt(0));	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    +    input.charAt(0));    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	102	None	replace
17	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  /  2  +  input.charAt(0));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  /  2  +  input.charAt(0));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  /  2  +  input.charAt(0));	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    +    input.charAt(0));    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	102	None	replace
18	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0),  input.length());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0),  input.length());  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0),  input.length());	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    +    input.charAt(0));    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	102	None	replace
19	[BUG]  [BUGGY]  writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  else  {  reader.append('n');  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  else  {  reader.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  }  else  {  reader.append('n');  }	          writer.append('n');    if(writer.length()    >    0)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
20	[BUG]  [BUGGY]  writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }	          writer.append('n');    writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	128	None	replace
21	[BUG]  [BUGGY]  if(input.length()  >  0)  {  writer.append('n');  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input.length()  >  0)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input.length()  >  0)  {  writer.append('n');  writer.append('n');  }	          writer.append('n');    writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	128	None	replace
22	[BUG]  [BUGGY]  translate(writer,  input,  0);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,int)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  0);	  translate(writer,    input,    ioe);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,int)	74	None	replace
23	[BUG]  [BUGGY]  translate(writer,  input,  false);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,boolean)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  false);	  translate(writer,    input,    ioe);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,boolean)	74	None	replace
24	[BUG]  [BUGGY]  reader  =  new  StringWriter(input.length()  *  2);  [CE]  cannot  find  symbol  reader  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  new  StringWriter(input.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  new  StringWriter(input.length()  *  2);	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  cannot  find  symbol  reader	30	None	replace
25	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	30	None	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }	  	compilable	  [FE]  ComparisonFailure  	84	17	add
27	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }	  	compilable	  [FE]  ComparisonFailure  	84	17	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ",n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ",n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n ");  }	  	compilable	  [FE]  ComparisonFailure  	86	17	add
29	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ",n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ",n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ",n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ",n ");  }	  	compilable	  [FE]  ComparisonFailure  	86	17	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ",n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ",n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	86	17	add
31	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ",n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ",n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ",n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	86	17	add
32	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  ==  0;  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.length()  ==  0;  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  ==  0;	  reader!=    null    &&    writer.length()    >    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
33	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  >=  0;  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.length()  >=  0;  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  >=  0;	  reader!=    null    &&    writer.length()    >    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
34	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  <  0;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.length()  <  0;  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  <  0;	  reader!=    null    &&    writer.length()    >    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ".n     ");  writer.append( "n   ");  writer.append(   ".n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   ".n       ");    writer.append( "n   ");  writer.append(   ".n   ");	  	compilable	  [FE]  ComparisonFailure  	25	17	add
36	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   ".n     ");  writer.append( "n   ");  writer.append(   ".n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ".n     ");  writer.append( "n   ");  writer.append(   ".n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   ".n       ");    writer.append( "n   ");  writer.append(   ".n   ");	  	compilable	  [FE]  ComparisonFailure  	25	17	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ".n     ");  writer.append('n');  writer.append(   ".n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   ".n       ");    writer.append('n');  writer.append(   ".n ");	  	compilable	  [FE]  ComparisonFailure  	25	17	add
38	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   ".n     ");  writer.append('n');  writer.append(   ".n ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ".n     ");  writer.append('n');  writer.append(   ".n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   ".n       ");    writer.append('n');  writer.append(   ".n ");	  	compilable	  [FE]  ComparisonFailure  	25	17	add
39	[BUG]  [BUGGY]  writer.append(input.charAt(0),  input.length());  [CE]  no  suitable  method  found  for  append(char,int)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(input.charAt(0),  input.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.charAt(0),  input.length());	  writer.append(input.charAt(0));    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	78	None	replace
40	[BUG]  [BUGGY]  writer.append(input.substring(0,  input.length()  -  1));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(input.substring(0,  input.length()  -  1));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.substring(0,  input.length()  -  1));	  writer.append(input.charAt(0));    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
41	[BUG]  [BUGGY]  writer.append(input.charAt(0)).append('n');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(input.charAt(0)).append('n');  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.charAt(0)).append('n');	  writer.append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	78	None	replace
42	[BUG]  [BUGGY]  writer.append('-');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('-');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('-');	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	130	None	replace
43	[BUG]  [BUGGY]  if(input!=  null)  {  if(writer!=  null)  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input!=  null)  {  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input!=  null)  {  if(writer!=  null)  {  writer.append('n');  }	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
44	[BUG]  [BUGGY]  if(input  ==  null)  {  if(writer!=  null)  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input  ==  null)  {  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input  ==  null)  {  if(writer!=  null)  {  writer.append('n');  }	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
45	[BUG]  [BUGGY]  if(input!=  null)  {  if(writer!=  null)  {  writer.append('N');  }  [CE]  'catch'  without  'try'  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input!=  null)  {  if(writer!=  null)  {  writer.append('N');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input!=  null)  {  if(writer!=  null)  {  writer.append('N');  }	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
46	[BUG]  [BUGGY]  if(input  ==  null)  {  if(writer!=  null)  {  writer.append('N');  }  [CE]  'catch'  without  'try'  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input  ==  null)  {  if(writer!=  null)  {  writer.append('N');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input  ==  null)  {  if(writer!=  null)  {  writer.append('N');  }	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  'catch'  without  'try'	43	None	replace
47	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '0')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '0')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '0')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '0')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	122	None	replace
48	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '0')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	122	None	replace
49	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '0')  {  writer.append('n');  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '0')  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '0')  {  writer.append('n');	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '0')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	122	None	replace
50	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	101	None	replace
51	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	101	None	replace
52	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }	  	compilable	  [FE]  RuntimeException  	66	17	add
53	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( "   ");  }	  	compilable	  [FE]  RuntimeException  	66	17	add
54	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  RuntimeException  	66	17	add
55	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  RuntimeException  	66	17	add
56	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ".);  }  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ".);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	66	None	add
57	[BUG]  [BUGGY]  writer!=  null  &&  writer.isEmpty();  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.isEmpty();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.isEmpty();	  reader!=    null    &&    writer.isEmpty();    	non-compiled	[CE]  not  a  statement	70	None	replace
58	[BUG]  [BUGGY]  reader!=  null  ||  writer.isEmpty();  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  ||  writer.isEmpty();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  ||  writer.isEmpty();	  reader!=    null    &&    writer.isEmpty();    	non-compiled	[CE]  not  a  statement	70	None	replace
59	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	118	None	replace
60	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '0')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	118	None	replace
61	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	118	None	replace
62	[BUG]  [BUGGY]  writer.append( ";n ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ";n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ";n ");	          writer.append(       "n       ");    writer.append(   ".n       ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	26	None	replace
63	[BUG]  [BUGGY]  writer.append( "[null] ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "[null] ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "[null] ");	          writer.append(       "n       ");    writer.append(   ".n       ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	26	None	replace
64	[BUG]  [BUGGY]  if(input!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	113	None	replace
65	[BUG]  [BUGGY]  if(input!=  null)  {  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input!=  null)  {  writer.append('n');  }	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	113	None	replace
66	[BUG]  [BUGGY]  if(input!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	113	None	replace
67	[BUG]  [BUGGY]  reader.append( "n ");  [CE]  cannot  find  symbol  reader  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.append( "n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.append( "n ");	          if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=    null)    {    writer.append(       "n       ");    }    	non-compiled	[CE]  cannot  find  symbol  reader	53	None	replace
68	[BUG]  [BUGGY]  writer  =  new  StringWriter(input.length()  *  2);  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  new  StringWriter(input.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(input.length()  *  2);	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	41	None	replace
69	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  *  2));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  *  2));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  *  2));	  StringWriter    writer    =    new    StringWriter(output.length()    /    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	2	None	replace
70	[BUG]  [BUGGY]  writer  =  writer.toString();  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.toString();	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  incompatible  types	47	None	replace
71	[BUG]  [BUGGY]  reader  =  new  StringWriter(writer.length()  *  2);  [CE]  cannot  find  symbol  reader  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  new  StringWriter(writer.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  new  StringWriter(writer.length()  *  2);	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  cannot  find  symbol  reader	47	None	replace
72	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	121	None	replace
73	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	121	None	replace
74	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length())!=  'n')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	121	None	replace
75	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('N');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('N');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('N');  }	  writer.append('N');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	107	None	replace
76	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('N');  }  else  {  return  writer.toString();  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('N');  }  else  {  return  writer.toString();  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('N');  }  else  {  return  writer.toString();  }	  writer.append('N');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	107	None	replace
77	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('N');  }  else  {  writer.append( "n ");  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('N');  }  else  {  writer.append( "n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('N');  }  else  {  writer.append( "n ");  }	  writer.append('N');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	107	None	replace
78	[BUG]  [BUGGY]  writer  =  new  StringWriter(writer.length()  /  2);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  new  StringWriter(writer.length()  /  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(writer.length()  /  2);	  writer    =    new    StringWriter(writer.length()    *    2);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
79	[BUG]  [BUGGY]  writer  =  new  StringWriter(writer,  input.length()  *  2);  [CE]  no  suitable  constructor  found  for  StringWriter(StringWriter,int)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  new  StringWriter(writer,  input.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(writer,  input.length()  *  2);	  writer    =    new    StringWriter(writer.length()    *    2);    	non-compiled	[CE]  no  suitable  constructor  found  for  StringWriter(StringWriter,int)	88	None	replace
80	[BUG]  [BUGGY]  write(writer,  input,  0);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  write(writer,  input,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	write(writer,  input,  0);	  write(writer,    input,    ioe);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
81	[BUG]  [BUGGY]  write(writer,  input,  false);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  write(writer,  input,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	write(writer,  input,  false);	  write(writer,    input,    ioe);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
82	[BUG]  [BUGGY]  writer  =  writer.read(input);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.read(input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.read(input);	  reader    =    writer.read(input);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
83	[BUG]  [BUGGY]  Reader  reader  =  writer.read(input);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Reader  reader  =  writer.read(input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Reader  reader  =  writer.read(input);	  reader    =    writer.read(input);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
84	[BUG]  [BUGGY]  reader  =  writer.read(input,  true);  [CE]  cannot  find  symbol  reader  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  writer.read(input,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.read(input,  true);	  reader    =    writer.read(input);    	non-compiled	[CE]  cannot  find  symbol  reader	5	None	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	19	17	add
86	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	19	17	add
87	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
88	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	19	17	add
89	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	19	17	add
90	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  reader.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  cannot  find  symbol  reader  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  reader.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    reader.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol  reader	19	None	add
91	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
92	[BUG]  [BUGGY]  translate(writer,  input,  writer,  ioe);  [CE]  cannot  find  symbol  ioe  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  writer,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer,  ioe);	  translate(writer,    input,    writer);    	non-compiled	[CE]  cannot  find  symbol  ioe	75	None	replace
93	[BUG]  [BUGGY]  translate(writer,  output,  writer);  [CE]  cannot  find  symbol  output  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  output,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  output,  writer);	  translate(writer,    input,    writer);    	non-compiled	[CE]  cannot  find  symbol  output	75	None	replace
94	[BUG]  [BUGGY]  translate(writer,  input,  writer,  null);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,StringWriter,<null>)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  writer,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer,  null);	  translate(writer,    input,    writer);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,StringWriter,<null>)	75	None	replace
95	[BUG]  [BUGGY]  writer.append( "null ",  input);  [CE]  no  suitable  method  found  for  append(String,CharSequence)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "null ",  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "null ",  input);	  writer.append(   "null   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,CharSequence)	35	None	replace
96	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)  ==  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	119	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer  ==  null)  {  translate(input,  writer);  }	  if(writer!=    null)    {    translate(input,    writer);    }    If(writer!=    null)    {    translate(input,    writer);    }    	compilable	  [FE]  AssertionFailedError  	51	17	replace
98	[BUG]  [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer  ==  null)  {  translate(input,  writer);  }	  if(writer!=    null)    {    translate(input,    writer);    }    If(writer!=    null)    {    translate(input,    writer);    }    	compilable	  [FE]  AssertionFailedError  	51	17	replace
99	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input);  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(input);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(input);  }	  if(writer!=    null)    {    translate(input,    writer);    }    If(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	51	None	replace
100	[BUG]  [BUGGY]  Writer  writer  =  new  Writer(writer.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  Writer(writer.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  Writer(writer.length()  *  2);	  if(writer!=    null)    {    translate(input,    writer);    }    If(writer!=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	51	None	replace
101	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('#');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('#');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('#');  }	  writer.append('#');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	108	None	replace
102	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('#');  }  else  {  return  writer.toString();  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('#');  }  else  {  return  writer.toString();  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('#');  }  else  {  return  writer.toString();  }	  writer.append('#');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	108	None	replace
103	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('#');  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('#');  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('#');  }  else  {  throw  new  RuntimeException( " ");  }	  writer.append('#');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	108	None	replace
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	64	17	add
105	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	64	17	add
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  ComparisonFailure  	64	17	add
107	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }	  	compilable	  [FE]  ComparisonFailure  	64	17	add
108	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ".);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(     "     ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException(   "     ");  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ".);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        throw        new        RuntimeException(       "       ");        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	64	None	add
109	[BUG]  [BUGGY]  translate(writer,  input,  null,  writer.toString());  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,<null>,String)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  null,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  null,  writer.toString());	  translate(writer,    input,    null);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,<null>,String)	77	None	replace
110	[BUG]  [BUGGY]  translate(writer,  input,  null,  writer);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,<null>,StringWriter)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  null,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  null,  writer);	  translate(writer,    input,    null);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,<null>,StringWriter)	77	None	replace
111	[BUG]  [BUGGY]  translate(writer,  input,  null,  ioe);  [CE]  cannot  find  symbol  ioe  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  null,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  null,  ioe);	  translate(writer,    input,    null);    	non-compiled	[CE]  cannot  find  symbol  ioe	77	None	replace
112	[BUG]  [BUGGY]  translate(writer,  output,  null);  [CE]  cannot  find  symbol  output  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  output,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  output,  null);	  translate(writer,    input,    null);    	non-compiled	[CE]  cannot  find  symbol  output	77	None	replace
113	[BUG]  [BUGGY]  writer.append( "[none] ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "[none] ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "[none] ");	  writer.append(   "none   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	131	None	replace
114	[BUG]  [BUGGY]  writer.append( "None ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "None ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "None ");	  writer.append(   "none   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	131	None	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	127	17	add
116	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	127	17	add
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	127	17	add
118	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	127	17	add
119	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  reader.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [CE]  cannot  find  symbol  reader  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  reader.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    reader.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol  reader	127	None	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	127	17	add
121	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	127	17	add
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( "n   ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append('n');    writer.append( "n   ");  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	23	17	add
123	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( "n   ");  writer.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( "n   ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append('n');    writer.append( "n   ");  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	23	17	add
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append('n');    writer.append('n');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	23	17	add
125	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append('n');  writer.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append('n');    writer.append('n');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	23	17	add
126	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    n  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( ",n   ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append('n');    writer.append( ",n   ");  writer.append('n');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      n  	23	17	add
127	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( ",n   ");  writer.append('n');  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    n  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( ",n   ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append('n');    writer.append( ",n   ");  writer.append('n');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      n  	23	17	add
128	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	98	None	replace
129	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	98	None	replace
130	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	          writer.append('n');    writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	14	None	replace
131	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
132	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
134	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
136	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
138	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
140	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	46	17	add
141	[BUG]  [BUGGY]  writer.append( "null ").append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "null ").append(input.charAt(0));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "null ").append(input.charAt(0));	  writer.append(   "n   ").append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	120	None	replace
142	[BUG]  [BUGGY]  writer.append( "n ").append(input.charAt(1));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "n ").append(input.charAt(1));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "n ").append(input.charAt(1));	  writer.append(   "n   ").append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	120	None	replace
143	[BUG]  [BUGGY]  writer.append( "null ").append(input.charAt(1));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "null ").append(input.charAt(1));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "null ").append(input.charAt(1));	  writer.append(   "n   ").append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	120	None	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	58	17	add
145	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	58	17	add
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	58	17	add
147	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	58	17	add
148	[BUG]  [BUGGY]  reader.append( "no-string ");  [CE]  cannot  find  symbol  reader  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.append( "no-string ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.append( "no-string ");	  writer.append(   "no-string   ");    	non-compiled	[CE]  cannot  find  symbol  reader	37	None	replace
149	[BUG]  [BUGGY]  writer.append( "no-string ",  input);  [CE]  no  suitable  method  found  for  append(String,CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "no-string ",  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "no-string ",  input);	  writer.append(   "no-string   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,CharSequence)	37	None	replace
150	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  -  1);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  -  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  -  1);	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    -    1);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	103	None	replace
151	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  /  2  -  1);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  /  2  -  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  /  2  -  1);	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    -    1);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	103	None	replace
152	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  -  1));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  -  1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  -  1));	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    -    1);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	103	None	replace
153	[BUG]  [BUGGY]  writer  =  writer.read();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.read();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.read();	  reader    =    writer.read();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
154	[BUG]  [BUGGY]  reader  =  input.read();  [CE]  cannot  find  symbol  reader  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  input.read();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  input.read();	  reader    =    writer.read();    	non-compiled	[CE]  cannot  find  symbol  reader	4	None	replace
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
156	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
158	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
160	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
161	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	31	None	add
162	[BUG]  [BUGGY]  Writer  writer  =  writer.getWriter();  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  writer.getWriter();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  writer.getWriter();	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer    >=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	50	None	replace
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
164	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
166	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
167	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
168	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
169	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
170	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  writer.append('+');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
172	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
173	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(input,  writer);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(input,  writer);	  Writer    writer    =    new    StringWriter(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	82	None	replace
174	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(output,  writer);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(output,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(output,  writer);	  Writer    writer    =    new    StringWriter(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	82	None	replace
175	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input.charAt(0));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input.charAt(0));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(writer,  input.charAt(0));	  Writer    writer    =    new    StringWriter(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	82	None	replace
176	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(writer,  input.length()  *  2);	  Writer    writer    =    new    StringWriter(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	82	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    	compilable	  [FE]  AssertionFailedError  	92	17	replace
178	[BUG]  [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    	compilable	  [FE]  AssertionFailedError  	92	17	replace
179	[BUG]  [BUGGY]  writer.append( "nativeWriter ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "nativeWriter ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "nativeWriter ");	  writer.append(   "native   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	90	None	replace
180	[BUG]  [BUGGY]  writer.append( "native  String ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "native  String ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "native  String ");	  writer.append(   "native   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	90	None	replace
181	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	105	None	replace
182	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  +  1)!=  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  +  1)!=  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  +  1)!=  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	105	None	replace
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( "n   ");  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append( "n   ");  writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	21	17	add
184	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( "n   ");  writer.append( "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( "n   ");  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append( "n   ");  writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	21	17	add
185	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append('n');  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append('n');  writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	21	17	add
186	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append('n');  writer.append( "n   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append('n');  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append('n');  writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	21	17	add
187	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    n      [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( ",n   ");  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append( ",n   ");  writer.append( "n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      n        	21	17	add
188	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( ",n   ");  writer.append( "n   ");  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    n      [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( ",n   ");  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append( ",n   ");  writer.append( "n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      n        	21	17	add
189	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	62	17	add
190	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	62	17	add
191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	62	17	add
192	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	62	17	add
193	[BUG]  [BUGGY]  reader  ==  null?  translate(input):  writer.toString();  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  ==  null?  translate(input):  writer.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  ==  null?  translate(input):  writer.toString();	  reader!=    null?    translate(input):    writer.toString();    	non-compiled	[CE]  not  a  statement	69	None	replace
194	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  +  1)!=  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  +  1)!=  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  +  1)!=  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	104	None	replace
195	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	104	None	replace
196	[BUG]  [BUGGY]  writer.translate(input,  writer);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.translate(input,  writer);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
197	[BUG]  [BUGGY]  writer.translate(input,  input);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.translate(input,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.translate(input,  input);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
198	[BUG]  [BUGGY]  reader.translate(input,  this.writer);  [CE]  cannot  find  symbol  writer  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.translate(input,  this.writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.translate(input,  this.writer);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol  writer	6	None	replace
199	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  ==  0);  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.length()  ==  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  ==  0);	  reader!=    null    &&    writer.length()    >    0);    	non-compiled	[CE]  not  a  statement	96	None	replace
200	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  <  0);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.length()  <  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  <  0);	  reader!=    null    &&    writer.length()    >    0);    	non-compiled	[CE]  not  a  statement	96	None	replace
201	[BUG]  [BUGGY]  reader!=  null  &&  translate(writer,  input);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  translate(writer,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  translate(writer,  input);	  reader!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	115	None	replace
202	[BUG]  [BUGGY]  reader!=  null  &&  translate(write(input,  writer));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  translate(write(input,  writer));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  translate(write(input,  writer));	  reader!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	115	None	replace
203	[BUG]  [BUGGY]  reader!=  null  &&  translate(input,  writer,  writer.toString());  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  translate(input,  writer,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  translate(input,  writer,  writer.toString());	  reader!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	115	None	replace
204	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
205	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
206	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
207	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
209	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append(   "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
210	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
211	[BUG]  [BUGGY]  writer!=  null  &&  translate(writer,  input);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  translate(writer,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  translate(writer,  input);	  writer!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	73	None	replace
212	[BUG]  [BUGGY]  writer!=  null  &&  translate(input,  writer.toString());  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  translate(input,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  translate(input,  writer.toString());	  writer!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	73	None	replace
213	[BUG]  [BUGGY]  writer!=  null  &&  translate(input,  writer.toCharArray());  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  translate(input,  writer.toCharArray());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  translate(input,  writer.toCharArray());	  writer!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	73	None	replace
214	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	123	None	replace
215	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  writer.append('n');  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  writer.append('n');	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	123	None	replace
216	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	123	None	replace
217	[BUG]  [BUGGY]  nisip  =  writer.charAt(writer.length()  *  2  -  1);  [CE]  cannot  find  symbol  nisip  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  nisip  =  writer.charAt(writer.length()  *  2  -  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	nisip  =  writer.charAt(writer.length()  *  2  -  1);	  nisip    =    writer.charAt(writer.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  nisip	124	None	replace
218	[BUG]  [BUGGY]  nisip  =  writer.charAt(input.length()  -  1);  [CE]  cannot  find  symbol  nisip  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  nisip  =  writer.charAt(input.length()  -  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	nisip  =  writer.charAt(input.length()  -  1);	  nisip    =    writer.charAt(writer.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  nisip	124	None	replace
219	[BUG]  [BUGGY]  translate(writer,  input,  writer.toString(),  ioe);  [CE]  cannot  find  symbol  ioe  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  writer.toString(),  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer.toString(),  ioe);	  translate(writer,    input,    writer.toString());    	non-compiled	[CE]  cannot  find  symbol  ioe	76	None	replace
220	[BUG]  [BUGGY]  translate(writer,  output,  writer.toString());  [CE]  cannot  find  symbol  output  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  output,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  output,  writer.toString());	  translate(writer,    input,    writer.toString());    	non-compiled	[CE]  cannot  find  symbol  output	76	None	replace
221	[BUG]  [BUGGY]  translate(writer,  input,  writer.toString(),  null);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,String,<null>)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  writer.toString(),  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer.toString(),  null);	  translate(writer,    input,    writer.toString());    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,String,<null>)	76	None	replace
222	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  4);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  4);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  *  4);	  StringWriter    writer    =    new    StringWriter(input.length());    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	9	None	replace
223	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(in.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(in.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(in.length()  *  2);	  StringWriter    writer    =    new    StringWriter(input.length());    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	9	None	replace
224	[BUG]  [BUGGY]  Writer.append(writer,  'n');  [CE]  no  suitable  method  found  for  append(StringWriter,char)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer.append(writer,  'n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer.append(writer,  'n');	  Writer.append('n');    	non-compiled	[CE]  no  suitable  method  found  for  append(StringWriter,char)	83	None	replace
225	[BUG]  [BUGGY]  Writer.append(writer);  [CE]  no  suitable  method  found  for  append(StringWriter)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer.append(writer);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer.append(writer);	  Writer.append('n');    	non-compiled	[CE]  no  suitable  method  found  for  append(StringWriter)	83	None	replace
226	[BUG]  [BUGGY]  Writer.append('n',  writer);  [CE]  no  suitable  method  found  for  append(char,StringWriter)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer.append('n',  writer);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer.append('n',  writer);	  Writer.append('n');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,StringWriter)	83	None	replace
227	[BUG]  [BUGGY]  Writer.append(writer,  'N');  [CE]  no  suitable  method  found  for  append(StringWriter,char)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer.append(writer,  'N');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer.append(writer,  'N');	  Writer.append('n');    	non-compiled	[CE]  no  suitable  method  found  for  append(StringWriter,char)	83	None	replace
228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	38	17	add
229	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	38	17	add
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	38	17	add
231	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	38	17	add
232	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	38	None	add
233	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  ';'  expected	38	None	add
234	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  *  2);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()  *  2);	  StringWriter    writer    =    new    StringWriter(input.length()    /    2);    	non-compiled	[CE]  ')'  expected	1	None	replace
235	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length())/  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length())/  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(Integer.toString(input.length())/  2);	  StringWriter    writer    =    new    StringWriter(input.length()    /    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	1	None	replace
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	15	17	add
237	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	15	17	add
238	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  'catch'  without  'try'	15	None	add
239	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  reader.append('n');  if(writer!=  null)  {  writer.append('n');  }  [CE]  cannot  find  symbol  reader  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  reader.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    reader.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol  reader	15	None	add
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  if(writer  ==  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  if(writer  ==  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	15	17	add
241	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  if(writer  ==  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  if(writer  ==  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  if(writer  ==  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	15	17	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	40	17	add
243	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	40	17	add
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	40	17	add
245	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	40	17	add
246	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  >=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	40	None	add
247	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  ';'  expected	40	None	add
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	52	17	add
249	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	52	17	add
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer  ==  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer  ==  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	52	17	add
251	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer  ==  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer  ==  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer  ==  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	52	17	add
252	[BUG]  [BUGGY]  writer.append( "[n] ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "[n] ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "[n] ");	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(       "n       ");    }    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".n       ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	85	None	replace
253	[BUG]  [BUGGY]  Writer  writer  =  writer.toString();  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  writer.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  writer.toString();	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	116	None	replace
254	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(output,  writer.toString());  }  [CE]  cannot  find  symbol  output  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(output,  writer.toString());  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(output,  writer.toString());  }	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  cannot  find  symbol  output	116	None	replace
255	[BUG]  [BUGGY]  parent().translate(writer,  input);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  parent().translate(writer,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	parent().translate(writer,  input);	  parent().translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
256	[BUG]  [BUGGY]  parent().translate(input,  writer,  ioe);  [CE]  cannot  find  symbol  ioe  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  parent().translate(input,  writer,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	parent().translate(input,  writer,  ioe);	  parent().translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol  ioe	95	None	replace
257	[BUG]  [BUGGY]  parent().translate(input,  writer,  writer);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  parent().translate(input,  writer,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	parent().translate(input,  writer,  writer);	  parent().translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
258	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	99	None	replace
259	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	99	None	replace
260	[BUG]  [BUGGY]  reader  =  input.toString();  [CE]  cannot  find  symbol  reader  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  input.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  input.toString();	  reader    =    writer.toString();    	non-compiled	[CE]  cannot  find  symbol  reader	7	None	replace
261	[BUG]  [BUGGY]  writer  =  input.toString();  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  input.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  input.toString();	  reader    =    writer.toString();    	non-compiled	[CE]  incompatible  types	7	None	replace
262	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(output.length());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(output.length());  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(output.length());	  StringWriter    writer    =    new    StringWriter(writer.length());    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	94	None	replace
263	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  /  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  /  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(input.length()  /  2);	  Writer    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	45	None	replace
264	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(input.length());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(input.length());  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(input.length());	  Writer    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	45	None	replace
265	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  -  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  -  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(input.length()  -  2);	  Writer    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	45	None	replace
266	[BUG]  [BUGGY]  Writer  writer  =  writer.write(input,  null);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  writer.write(input,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  writer.write(input,  null);	  write(writer,    input,    null);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	81	None	replace
267	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input,  null);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(writer,  input,  null);	  write(writer,    input,    null);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	81	None	replace
268	[BUG]  [BUGGY]  write(writer,  output,  null);  [CE]  cannot  find  symbol  output  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  write(writer,  output,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	write(writer,  output,  null);	  write(writer,    input,    null);    	non-compiled	[CE]  cannot  find  symbol  output	81	None	replace
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
270	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
271	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
272	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
273	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [CE]  'catch'  without  'try'  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	non-compiled	[CE]  'catch'  without  'try'	129	None	add
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
275	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('N');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
276	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('-');  if(writer!=  null)  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
277	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('-');  if(writer!=  null)  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
279	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
281	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
282	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	29	17	add
283	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [FE]  StackOverflowError  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	29	17	add
284	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  >=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	29	None	add
285	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    writer.append('n');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
286	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  writer.append('n');  writer.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    writer.append('n');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
287	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  writer.append('n');  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer.length()  >  0)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer.length()  >  0)  {  writer.append('n');  writer.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
288	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	13	17	add
289	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	13	17	add
290	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  reader.append('n');  writer.append('n');  [CE]  cannot  find  symbol  reader  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  reader.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    reader.append('n');  writer.append('n');	  	non-compiled	[CE]  cannot  find  symbol  reader	13	None	add
291	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [FE]    junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ",n     ");  writer.append( "n   ");  writer.append(   ",n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   ",n       ");    writer.append( "n   ");  writer.append(   ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n        	27	17	add
292	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   ",n     ");  writer.append( "n   ");  writer.append(   ",n   ");  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [FE]    junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ",n     ");  writer.append( "n   ");  writer.append(   ",n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   ",n       ");    writer.append( "n   ");  writer.append(   ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n        	27	17	add
293	[BUG]  [BUGGY]  translate(writer,  output,  input);  [CE]  cannot  find  symbol  output  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  output,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  output,  input);	  translate(writer,    input,    output);    	non-compiled	[CE]  cannot  find  symbol  output	109	None	replace
294	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    'n')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	106	None	replace
295	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)  ==  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    'n')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	106	None	replace
296	[BUG]  [BUGGY]  writer.append( ",null ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ",null ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ",null ");	          writer.append(       "n       ");    writer.append(   ",n       ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	28	None	replace
297	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('[');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('[');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('[');  }	  writer.append('[');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	125	None	replace
298	[BUG]  [BUGGY]  writer.append('[').append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('[').append(input.charAt(0));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('[').append(input.charAt(0));	  writer.append('[');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	125	None	replace
299	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('[');  }  else  {  return  writer.toString();  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('[');  }  else  {  return  writer.toString();  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('[');  }  else  {  return  writer.toString();  }	  writer.append('[');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	125	None	replace
300	[BUG]  [BUGGY]  if(input!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	111	None	replace
301	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
302	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
304	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
305	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
306	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
307	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	non-compiled	[CE]  'catch'  without  'try'	110	None	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
309	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
310	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(   ".n       ");    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	56	17	add
311	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(   ".n       ");    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	56	17	add
312	[BUG]  [BUGGY]  if(writer.length()  >  0)  {  writer.append('n');  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer.length()  >  0)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer.length()  >  0)  {  writer.append('n');  }	          writer.append('n');    if(writer.length()    >    0)    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
313	[BUG]  [BUGGY]  if(writer.length()  >  0  ||  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer.length()  >  0  ||  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer.length()  >  0  ||  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }	          writer.append('n');    if(writer.length()    >    0)    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
314	[BUG]  [BUGGY]  if(writer.length()  >  0  ||  writer.charAt(writer.length()  -  1)  ==  'n')  {  writer.append('n');  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer.length()  >  0  ||  writer.charAt(writer.length()  -  1)  ==  'n')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer.length()  >  0  ||  writer.charAt(writer.length()  -  1)  ==  'n')  {  writer.append('n');  }	          writer.append('n');    if(writer.length()    >    0)    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
315	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
316	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
317	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
318	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
319	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
320	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
321	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
322	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
323	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
324	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
325	[BUG]  [BUGGY]  Writer  writer  =  input.write(input);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  input.write(input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  input.write(input);	  Writer    writer    =    writer.write(input,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	80	None	replace
326	[BUG]  [BUGGY]  Writer  writer  =  output.write(input);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  output.write(input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  output.write(input);	  Writer    writer    =    writer.write(input,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	80	None	replace
327	[BUG]  [BUGGY]  Writer  writer  =  output.write(input,  writer);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  output.write(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  output.write(input,  writer);	  Writer    writer    =    writer.write(input,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	80	None	replace
328	[BUG]  [BUGGY]  Writer  writer  =  this.writer.write(input,  input);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  this.writer.write(input,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  this.writer.write(input,  input);	  Writer    writer    =    writer.write(input,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	80	None	replace
329	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }	  	compilable	  [FE]  ComparisonFailure  	62	17	add
330	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }	  	compilable	  [FE]  ComparisonFailure  	62	17	add
331	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	126	None	replace
332	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '0')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '0')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	122	None	replace
333	[BUG]  [BUGGY]  writers.append('n');  [CE]  cannot  find  symbol  writers  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writers.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writers.append('n');	          writer.append('n');    if(writer.length()    >    0)    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol  writers	17	None	replace
334	[BUG]  [BUGGY]  Reader  reader  =  writer.read();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Reader  reader  =  writer.read();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Reader  reader  =  writer.read();	  reader    =    writer.read();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
335	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  [CE]  'catch'  without  'try'  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');	  	non-compiled	[CE]  'catch'  without  'try'	112	None	add
336	[BUG]  [BUGGY]  Writer  writer  =  createWriter(writer,  input);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  createWriter(writer,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  createWriter(writer,  input);	  write(writer,    input,    ioe);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	79	None	replace
337	[BUG]  [BUGGY]  writer.append( ".translate( ").append(input.charAt(0)));  [CE]  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ".translate( ").append(input.charAt(0)));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ".translate( ").append(input.charAt(0)));	  writer.append(   "mv.translate(   ").append(input.charAt(0)));    	non-compiled	[CE]  	71	None	replace
338	[BUG]  [BUGGY]  reader!=  null  &&  translate(write(writer,  input);  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  translate(write(writer,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  translate(write(writer,  input);	  reader!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  ')'  expected	115	None	replace
339	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	121	None	replace
340	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  writer.append('n');	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	121	None	replace
341	[BUG]  [BUGGY]  reader.append('n',  input);  [CE]  cannot  find  symbol  reader  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.append('n',  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.append('n',  input);	  reader.append('n');    	non-compiled	[CE]  cannot  find  symbol  reader	44	None	replace
342	[BUG]  [BUGGY]  reader!=  null  &&  writer.length()  >=  0);  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.length()  >=  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.length()  >=  0);	  reader!=    null    &&    writer.length()    >    0);    	non-compiled	[CE]  not  a  statement	96	None	replace
343	[BUG]  [BUGGY]  writer.append('['  +  input.charAt(input.length()  -  1));  [CE]  no  suitable  method  found  for  append(int)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('['  +  input.charAt(input.length()  -  1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('['  +  input.charAt(input.length()  -  1));	  writer.append('[');    	non-compiled	[CE]  no  suitable  method  found  for  append(int)	125	None	replace
344	[BUG]  [BUGGY]  writer.append('['  +  input.charAt(input.length()  -  1)+  ']');  [CE]  no  suitable  method  found  for  append(int)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('['  +  input.charAt(input.length()  -  1)+  ']');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('['  +  input.charAt(input.length()  -  1)+  ']');	  writer.append('[');    	non-compiled	[CE]  no  suitable  method  found  for  append(int)	125	None	replace
345	[BUG]  [BUGGY]  reader!=  null?  translate(writer):  input.toString();  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null?  translate(writer):  input.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null?  translate(writer):  input.toString();	  reader!=    null?    translate(input):    writer.toString();    	non-compiled	[CE]  not  a  statement	69	None	replace
346	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
347	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	48	17	add
348	[BUG]  [BUGGY]  nisip  =  writer.charAt(writer.length()  *  1);  [CE]  cannot  find  symbol  nisip  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  nisip  =  writer.charAt(writer.length()  *  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	nisip  =  writer.charAt(writer.length()  *  1);	  nisip    =    writer.charAt(writer.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  nisip	124	None	replace
349	[BUG]  [BUGGY]  nisip  =  writer.charAt(writer.length()  +  1);  [CE]  cannot  find  symbol  nisip  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  nisip  =  writer.charAt(writer.length()  +  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	nisip  =  writer.charAt(writer.length()  +  1);	  nisip    =    writer.charAt(writer.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  nisip	124	None	replace
350	[BUG]  [BUGGY]  writer!=  null  &&  translate(write(input,  writer));  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  translate(write(input,  writer));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  translate(write(input,  writer));	  writer!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  not  a  statement	73	None	replace
351	[BUG]  [BUGGY]  writer!=  null  &&  translate(write(input,  writer);  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  translate(write(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  translate(write(input,  writer);	  writer!=    null    &&    translate(input,    writer);    	non-compiled	[CE]  ')'  expected	73	None	replace
352	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append( "no-string ");  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append( "no-string ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append( "no-string ");  }	          if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=    null)    {    writer.append(   ".n       ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	57	None	replace
353	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(       "       ");    }    if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
354	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( ". ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(       "       ");    }    if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
355	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append('N');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    writer.append('N');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
356	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  writer.append('N');  writer.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append('N');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    writer.append('N');  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
357	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [CE]  'catch'  without  'try'  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  'catch'  without  'try'	127	None	add
358	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  [CE]  'catch'  without  'try'  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  writer.append('n');  if(writer!=  null)  {  writer.append('n');	  	non-compiled	[CE]  'catch'  without  'try'	127	None	add
359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('N');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append('N');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	15	17	add
360	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('N');  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append('N');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append('N');  if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	15	17	add
361	[BUG]  [BUGGY]  reader  =  new  StringReader(input.length()  *  2);  [CE]  cannot  find  symbol  reader  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  new  StringReader(input.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  new  StringReader(input.length()  *  2);	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol  reader	43	None	replace
362	[BUG]  [BUGGY]  writer  =  new  StringWriter(input.length()  *  3);  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  new  StringWriter(input.length()  *  3);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(input.length()  *  3);	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	43	None	replace
363	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=  null)  {  writer.append( ".n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	52	17	add
364	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=  null)  {  writer.append( ".n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	52	17	add
365	[BUG]  [BUGGY]  reader  =  writer.read(buffer,  input);  [CE]  cannot  find  symbol  reader  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  writer.read(buffer,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.read(buffer,  input);	  reader    =    writer.read(input);    	non-compiled	[CE]  cannot  find  symbol  reader	5	None	replace
366	[BUG]  [BUGGY]  reader  =  writer.read(buffer);  [CE]  cannot  find  symbol  reader  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  writer.read(buffer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.read(buffer);	  reader    =    writer.read(input);    	non-compiled	[CE]  cannot  find  symbol  reader	5	None	replace
367	[BUG]  [BUGGY]  writer.append(input.charAt(0)).append( "n ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(input.charAt(0)).append( "n ");  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.charAt(0)).append( "n ");	  writer.append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	78	None	replace
368	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(writer.length()  +  1);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(writer.length()  +  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(writer.length()  +  1);	  StringWriter    writer    =    new    StringWriter(writer.length());    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	94	None	replace
369	[BUG]  [BUGGY]  writer.append('#'  +  input.charAt(input.length()  -  1));  [CE]  no  suitable  method  found  for  append(int)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('#'  +  input.charAt(input.length()  -  1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('#'  +  input.charAt(input.length()  -  1));	  writer.append('#');    	non-compiled	[CE]  no  suitable  method  found  for  append(int)	108	None	replace
370	[BUG]  [BUGGY]  writer.append('#').append(CharSequence.valueOf(input));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('#').append(CharSequence.valueOf(input));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('#').append(CharSequence.valueOf(input));	  writer.append('#');    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
371	[BUG]  [BUGGY]  writer.append('#').append( "n ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('#').append( "n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('#').append( "n ");	  writer.append('#');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	108	None	replace
372	[BUG]  [BUGGY]  writer.append( ", ");  if(writer!=  null)  {  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ", ");  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ", ");  if(writer!=  null)  {  writer.append('n');  }	          writer.append('n');    writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	128	None	replace
373	[BUG]  [BUGGY]  writer  =  writer.substring(0,  writer.length()  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.substring(0,  writer.length()  -  1);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.substring(0,  writer.length()  -  1);	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer    >>    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
374	[BUG]  [BUGGY]  writer  =  writer.substring(0,  writer.length()  -  2);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.substring(0,  writer.length()  -  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.substring(0,  writer.length()  -  2);	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer    >>    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
375	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
376	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	110	17	add
377	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	105	None	replace
378	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
379	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
380	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  '0')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	118	None	replace
381	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(Integer.toString(input.length()));	  StringWriter    writer    =    new    StringWriter(input.length()    -    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	8	None	replace
382	[BUG]  [BUGGY]  reader.translate(input,  ioe);  [CE]  cannot  find  symbol  ioe  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.translate(input,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.translate(input,  ioe);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol  ioe	6	None	replace
383	[BUG]  [BUGGY]  reader.translate(input,  null);  [CE]  cannot  find  symbol  reader  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.translate(input,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.translate(input,  null);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
384	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append( "n ");  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append( "n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append( "n ");  }	          writer.append('n');    writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	14	None	replace
385	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append('n');  writer.append('n');  }  else  {  writer.append('n');  }	          writer.append('n');    writer.append('n');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	14	None	replace
386	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(1));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(1));	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    +    input.charAt(0));    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	102	None	replace
387	[BUG]  [BUGGY]  reader  =  new  StringWriter(writer.toString());  [CE]  cannot  find  symbol  reader  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  new  StringWriter(writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  new  StringWriter(writer.toString());	  reader    =    writer.toString();    	non-compiled	[CE]  cannot  find  symbol  reader	7	None	replace
388	[BUG]  [BUGGY]  if(writer!=  null)  {  writer.append( ".null ");  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  writer.append( ".null ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  writer.append( ".null ");  }	  if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	89	None	replace
389	[BUG]  [BUGGY]  writer.append( ".no-string ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ".no-string ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ".no-string ");	  writer.append(   "no-string   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	37	None	replace
390	[BUG]  [BUGGY]  writer.append( "no-string  value ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "no-string  value ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "no-string  value ");	  writer.append(   "no-string   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	37	None	replace
391	[BUG]  [BUGGY]  writer.append( "  - ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "  - ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "  - ");	          writer.append(       "n       ");    writer.append(   ".n       ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	26	None	replace
392	[BUG]  [BUGGY]  writer.append( "mv.translate( ").append(input.charAt(1));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "mv.translate( ").append(input.charAt(1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "mv.translate( ").append(input.charAt(1));	  writer.append(   "mv.translate(   ").append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	72	None	replace
393	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }	  	compilable	  [FE]  ComparisonFailure  	58	17	add
394	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   "n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( ".n ");  }	  	compilable	  [FE]  ComparisonFailure  	58	17	add
395	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	117	None	replace
396	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	60	17	add
397	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	60	17	add
398	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	40	17	add
399	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	40	17	add
400	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  '/')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
401	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
402	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  '/')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	123	None	replace
403	[BUG]  [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	104	None	replace
404	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())!=  'n')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	98	None	replace
405	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  -  1)!=  'n')  {  translate(input,  writer);	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	98	None	replace
406	[BUG]  [BUGGY]  Writer.append('n',  input);  [CE]  no  suitable  method  found  for  append(char,CharSequence)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer.append('n',  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer.append('n',  input);	  Writer.append('n');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,CharSequence)	83	None	replace
407	[BUG]  [BUGGY]  reader!=  null  &&  translate(input,  writer.toString());  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  translate(input,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  translate(input,  writer.toString());	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  not  a  statement	116	None	replace
408	[BUG]  [BUGGY]  Writer  writer  =  createWriter(input,  writer.toString());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  createWriter(input,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  createWriter(input,  writer.toString());	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	116	None	replace
409	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
410	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    if(writer!=  null)  {  writer.append( "n   ");  }  if(writer!=  null)  {  writer.append( ".n   ");  }	  	compilable	  [FE]  ComparisonFailure  	54	17	add
411	[BUG]  [BUGGY]  writer.append('N').append( "n ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('N').append( "n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('N').append( "n ");	  writer.append('N');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	107	None	replace
412	[BUG]  [BUGGY]  writer.append('N').append('n');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('N').append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('N').append('n');	  writer.append('N');    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	107	None	replace
413	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0));  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(input.length()  *  2  +  input.charAt(0));	  Writer    writer    =    new    StringWriter(input.length()    *    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	45	None	replace
414	[BUG]  [BUGGY]  if(writer  ==  null)  {  writer.append('n');  }  else  {  return  writer.toString();  }  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  writer.append('n');  }  else  {  return  writer.toString();  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer  ==  null)  {  writer.append('n');  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    writer.append('n');    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	12	None	replace
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(input  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    If(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	compilable	  [FE]  AssertionFailedError  	34	17	replace
416	[BUG]  [BUGGY]  if(input  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(input  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(input  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    If(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	compilable	  [FE]  AssertionFailedError  	34	17	replace
417	[BUG]  [BUGGY]  writer.append( "native ",  input);  [CE]  no  suitable  method  found  for  append(String,CharSequence)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "native ",  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "native ",  input);	  writer.append(   "native   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,CharSequence)	90	None	replace
418	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  If(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  If(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    If(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	non-compiled	[CE]  ';'  expected	29	None	add
419	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length())  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	101	None	replace
420	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	84	17	add
421	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append(   ".n     ");  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".n       ");    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	84	17	add
422	[BUG]  [BUGGY]  State  state  =  writer.getState();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  State  state  =  writer.getState();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	State  state  =  writer.getState();	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer    >=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
423	[BUG]  [BUGGY]  Writer  writer  =  createWriter(writer);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  createWriter(writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  createWriter(writer);	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer    >=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	33	None	replace
424	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  StackOverflowError  	46	17	add
425	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  StackOverflowError  	46	17	add
426	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input	  	non-compiled	[CE]  ')'  expected	46	None	add
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	19	17	add
428	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append( "n ");  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	19	17	add
429	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  [CE]  'catch'  without  'try'  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
430	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	38	17	add
431	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	38	17	add
432	[BUG]  [BUGGY]  Writer  writer  =  createWriter(writer,  input,  null);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  createWriter(writer,  input,  null);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  createWriter(writer,  input,  null);	  write(writer,    input,    null);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	81	None	replace
433	[BUG]  [BUGGY]  writer  =  new  StringWriter(input.length()  *  4);  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  new  StringWriter(input.length()  *  4);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(input.length()  *  4);	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	41	None	replace
434	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [CE]  'catch'  without  'try'  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    if(writer!=  null)  {  writer.append('n');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('+');  }	  	non-compiled	[CE]  'catch'  without  'try'	112	None	add
435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
436	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  else  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  writer.append('+');  }  writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    writer.append('+');    }    writer.append('n');  if(writer!=  null)  {  writer.append('+');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	112	17	add
437	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(       "       ");    }    if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    	compilable	  [FE]  RuntimeException  	67	17	replace
438	[BUG]  [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer  ==  null)  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(       "       ");    }    if(writer    ==    null)    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "       ");    }    	compilable	  [FE]  RuntimeException  	67	17	replace
439	[BUG]  [BUGGY]  reader  =  writer.read(Input.valueOf(input));  [CE]  cannot  find  symbol  reader  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader  =  writer.read(Input.valueOf(input));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader  =  writer.read(Input.valueOf(input));	  reader    =    writer.read(input);    	non-compiled	[CE]  cannot  find  symbol  reader	5	None	replace
440	[BUG]  [BUGGY]  writer.append( "none ",  input);  [CE]  no  suitable  method  found  for  append(String,CharSequence)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "none ",  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "none ",  input);	  writer.append(   "none   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,CharSequence)	131	None	replace
441	[BUG]  [BUGGY]  writer.append( ". ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( ". ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( ". ");	          writer.append(       "n       ");    writer.append(   ".n       ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	26	None	replace
442	[BUG]  [BUGGY]  reader!=  null  &&  writer.trim().length()  >  0);  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.trim().length()  >  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.trim().length()  >  0);	  reader!=    null    &&    writer.length()    >    0);    	non-compiled	[CE]  not  a  statement	96	None	replace
443	[BUG]  [BUGGY]  reader!=  null  &&  writer.toString().length()  >  0);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.toString().length()  >  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.toString().length()  >  0);	  reader!=    null    &&    writer.length()    >    0);    	non-compiled	[CE]  not  a  statement	96	None	replace
444	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( ".n   ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append('n');    writer.append( ".n   ");  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	23	17	add
445	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( ".n   ");  writer.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append('n');  writer.append( ".n   ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append('n');    writer.append( ".n   ");  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	23	17	add
446	[BUG]  [BUGGY]  writer.append(Integer.toHexString(input));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(Integer.toHexString(input));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(Integer.toHexString(input));	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	111	None	replace
447	[BUG]  [BUGGY]  writer.append(input.substring(1));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(input.substring(1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.substring(1));	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
448	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '0')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '0')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '0')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	118	None	replace
449	[BUG]  [BUGGY]  writer.append(input.charAt(0)));  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(input.charAt(0)));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(input.charAt(0)));	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(       "n       ");    }    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   "n       ");    }    	non-compiled	[CE]  ';'  expected	59	None	replace
450	[BUG]  [BUGGY]  translate(writer,  input,  writer.toString(),  true);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,String,boolean)  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  writer.toString(),  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  writer.toString(),  true);	  translate(writer,    input,    writer.toString());    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,String,boolean)	76	None	replace
451	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '0')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '0')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	126	None	replace
452	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	105	None	replace
453	[BUG]  [BUGGY]  reader.append('n',  '-');  [CE]  cannot  find  symbol  reader  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.append('n',  '-');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.append('n',  '-');	  reader.append('n');    	non-compiled	[CE]  cannot  find  symbol  reader	44	None	replace
454	[BUG]  [BUGGY]  writer.append('['  +  input.charAt(0));  [CE]  no  suitable  method  found  for  append(int)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('['  +  input.charAt(0));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('['  +  input.charAt(0));	  writer.append('[');    	non-compiled	[CE]  no  suitable  method  found  for  append(int)	125	None	replace
455	[BUG]  [BUGGY]  writer.append('[').append(result);  [CE]  cannot  find  symbol  result  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('[').append(result);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('[').append(result);	  writer.append('[');    	non-compiled	[CE]  cannot  find  symbol  result	125	None	replace
456	[BUG]  [BUGGY]  writer  =  writer.replace('n',  'r');  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.replace('n',  'r');  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.replace('n',  'r');	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer    >=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
457	[BUG]  [BUGGY]  writer  =  writer.substring(0,  writer.length()  -  input.length());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  writer.substring(0,  writer.length()  -  input.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  writer.substring(0,  writer.length()  -  input.length());	  if(writer!=    null)    {    translate(input,    writer);    }    if(writer    >=    null)    {    translate(input,    writer);    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
458	[BUG]  [BUGGY]  writer.append( "  => ").append(input.charAt(0));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "  => ").append(input.charAt(0));  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "  => ").append(input.charAt(0));	  writer.append(   "n   ").append(input.charAt(0));    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	120	None	replace
459	[BUG]  [BUGGY]  writer.append(Integer.toHexString(input.charAt(0)));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(Integer.toHexString(input.charAt(0)));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(Integer.toHexString(input.charAt(0)));	          writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	130	None	replace
460	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(text.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(text.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(text.length()  *  2);	  StringWriter    writer    =    new    StringWriter(output.length()    /    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	2	None	replace
461	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	121	None	replace
462	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	100	None	replace
463	[BUG]  [BUGGY]  nisip  =  writer.charAt(writer.length()  *  2);  [CE]  cannot  find  symbol  nisip  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  nisip  =  writer.charAt(writer.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	nisip  =  writer.charAt(writer.length()  *  2);	  nisip    =    writer.charAt(writer.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol  nisip	124	None	replace
464	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '0')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '0')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '0')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '0')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	122	None	replace
465	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  +  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  +  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  +  2);	  StringWriter    writer    =    new    StringWriter(input.length()    -    2);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	8	None	replace
466	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	21	17	add
467	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   "n     ");  writer.append( "n   ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   "n       ");    writer.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	21	17	add
468	[BUG]  [BUGGY]  writer  =  new  StringWriter(writer.length());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer  =  new  StringWriter(writer.length());  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer  =  new  StringWriter(writer.length());	  writer    =    new    StringWriter(writer.length()    *    2);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
469	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '/')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	101	None	replace
470	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	98	None	replace
471	[BUG]  [BUGGY]  translate(writer,  input,  true);  [CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,boolean)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  translate(writer,  input,  true);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	translate(writer,  input,  true);	  translate(writer,    input,    ioe);    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,CharSequence,boolean)	74	None	replace
472	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  'n')  {  translate(input,  writer);  }  else  {  throw  new  RuntimeException( " ");  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    'n')    {    translate(input,    writer);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	99	None	replace
473	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [FE]    junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ",n     ");  writer.append('n');  writer.append(   ",n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append(       "n       ");        writer.append(   ",n       ");    writer.append('n');  writer.append(   ",n ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n        	27	17	add
474	[BUG]  [BUGGY]          writer.append(     "n     ");    writer.append(   ",n     ");  writer.append('n');  writer.append(   ",n ");  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [FE]    junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append(     "n     ");    writer.append(   ",n     ");  writer.append('n');  writer.append(   ",n ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append(       "n       ");        writer.append(   ",n       ");    writer.append('n');  writer.append(   ",n ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n        	27	17	add
475	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  writer.append( "n');  writer.append('n');  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append( "n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    writer.append( "n');  writer.append('n');	  	non-compiled	[CE]  unclosed  string  literal	13	None	add
476	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append( "n ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    writer.append( "n ");  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
477	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  writer.append( "n ");  writer.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append( "n ");  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    writer.append( "n ");  writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
478	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        writer.append('n');    writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
479	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  writer.append('n');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    writer.append('n');	  	compilable	  [FE]  ComparisonFailure  	13	17	add
480	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n');  }  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer  ==  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer    ==    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n');  }	  	non-compiled	[CE]  unclosed  string  literal	40	None	add
481	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  StackOverflowError  	48	17	add
482	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  StackOverflowError  	48	17	add
483	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input	  	non-compiled	[CE]  ')'  expected	48	None	add
484	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer  ==  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer    ==    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,  writer);  }  if(writer  ==  null)  {  translate(input,	  	non-compiled	[CE]  ')'  expected	48	None	add
485	[BUG]  [BUGGY]  writer.append(',');  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(',');  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(',');	  writer.append(   ",   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	93	None	replace
486	[BUG]  [BUGGY]  writer.append( "msg.no-string ");  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append( "msg.no-string ");  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append( "msg.no-string ");	  writer.append(   "no-string   ");    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	37	None	replace
487	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
488	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
489	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
490	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  StackOverflowError  	91	17	add
491	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        if(writer!=    null)    {    translate(input,    writer);    }    if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,  writer);  }  if(writer!=  null)  {  translate(input,	  	non-compiled	[CE]  ')'  expected	46	None	add
492	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    n      [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( ",n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=  null)  {  writer.append( ",n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      n        	52	17	add
493	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( ",n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n    n      [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append(     "n     ");    }    if(writer!=  null)  {  writer.append(     "n     ");  }  if(writer!=  null)  {  writer.append( ",n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append(       "n       ");        }        if(writer!=    null)    {    writer.append(       "n       ");    }    if(writer!=  null)  {  writer.append( ",n   ");  }  if(writer!=  null)  {  writer.append( "n   ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  unescape(String)  failed:  expected  'n      n        	52	17	add
494	[BUG]  [BUGGY]  reader!=  null  &&  writer.trim().length()  >  0;  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.trim().length()  >  0;  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.trim().length()  >  0;	  reader!=    null    &&    writer.length()    >    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
495	[BUG]  [BUGGY]  writer.append(Integer.toString(input.length()  -  1));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(Integer.toString(input.length()  -  1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(Integer.toString(input.length()  -  1));	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(       "n       ");    }    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	61	None	replace
496	[BUG]  [BUGGY]  writer.append(Integer.toString(input.length()));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(Integer.toString(input.length()));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(Integer.toString(input.length()));	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(       "n       ");    }    if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append(   ".       ");    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	61	None	replace
497	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append( "n');  if(writer!=  null)  {  writer.append('n');  }  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  writer.append( "n');  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    writer.append( "n');  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  unclosed  string  literal	15	None	add
498	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  writer.append('n');  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)!=  '/')  {  writer.append('n');  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)!=    '/')    {    writer.append('n');    }    	non-compiled	[CE]  not  a  statement	123	None	replace
499	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  [CE]  'catch'  without  'try'  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  writer.append('n');  }  writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    writer.append('n');    }    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');	  	non-compiled	[CE]  'catch'  without  'try'	110	None	add
500	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '/')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '/')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  '/')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    '/')    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  not  a  statement	117	None	replace
501	[BUG]  [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append(writer);  if(writer!=  null)  {  writer.append('n');  }  [CE]  no  suitable  method  found  for  append(StringWriter)  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    writer.append('n');  if(writer!=  null)  {  writer.append('n');  }  writer.append('n');  writer.append(writer);  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        writer.append('n');    if(writer!=    null)    {    writer.append('n');    }    writer.append('n');  writer.append(writer);  if(writer!=  null)  {  writer.append('n');  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(StringWriter)	127	None	add
502	[BUG]  [BUGGY]  writer.append('#',  input);  [CE]  no  suitable  method  found  for  append(char,CharSequence)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('#',  input);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('#',  input);	  writer.append('#');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,CharSequence)	108	None	replace
503	[BUG]  [BUGGY]  writer.append(Integer.toHexString(input.length()  -  1));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(Integer.toHexString(input.length()  -  1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(Integer.toHexString(input.length()  -  1));	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	43	None	replace
504	[BUG]  [BUGGY]  writer.append(Integer.toHexString(input.length()));  [CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement  [FE]                ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append(Integer.toHexString(input.length()));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append(Integer.toHexString(input.length()));	          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    If(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    	non-compiled	[CE]  exception  IOException  is  never  thrown  in  body  of  corresponding  try  statement	43	None	replace
505	[BUG]  [BUGGY]  reader!=  null?  translate(writer):  writer.toString();  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null?  translate(writer):  writer.toString();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null?  translate(writer):  writer.toString();	  reader!=    null?    translate(input):    writer.toString();    	non-compiled	[CE]  not  a  statement	69	None	replace
506	[BUG]  [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  'n')  {  translate(input,  writer);  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  'n')  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.charAt(writer.length()  *  2)  ==  'n')  {  translate(input,  writer);  }	  reader!=    null    &&    writer.charAt(writer.length()    -    1)    ==    'n')    {    translate(input,    writer);    }    	non-compiled	[CE]  not  a  statement	106	None	replace
507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
508	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
509	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
510	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer  ==  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer    ==    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	31	1	add
511	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input,  charSequence);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input,  charSequence);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(writer,  input,  charSequence);	  Writer    writer    =    new    StringWriter(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	82	None	replace
512	[BUG]  [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input.length());  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]                      ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  Writer  writer  =  new  StringWriter(writer,  input.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	Writer  writer  =  new  StringWriter(writer,  input.length());	  Writer    writer    =    new    StringWriter(writer,    input);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	82	None	replace
513	[BUG]  [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n');  }  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('n');  }  if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                if(writer!=        null)        {        writer.append('n');        }        else        {        writer.append('n');        }        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('n');    }    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append( "n');  }	  	non-compiled	[CE]  unclosed  string  literal	38	None	add
514	[BUG]  [BUGGY]  writer.append('N',  input.charAt(input.length()  -  1));  [CE]  no  suitable  method  found  for  append(char,char)  [FE]        ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('N',  input.charAt(input.length()  -  1));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('N',  input.charAt(input.length()  -  1));	  writer.append('N');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,char)	107	None	replace
515	[BUG]  [BUGGY]  writer.append('N',  input.charAt(input.length()  -  1)));  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('N',  input.charAt(input.length()  -  1)));  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('N',  input.charAt(input.length()  -  1)));	  writer.append('N');    	non-compiled	[CE]  ';'  expected	107	None	replace
516	[BUG]  [BUGGY]  writer.append('N',  input.length()  *  2);  [CE]  no  suitable  method  found  for  append(char,int)  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  writer.append('N',  input.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	writer.append('N',  input.length()  *  2);	  writer.append('N');    	non-compiled	[CE]  no  suitable  method  found  for  append(char,int)	107	None	replace
517	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
518	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
520	[BUG]  [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=        null)        {        translate(input,        writer);        }        else        {        return        writer.toString();        }        if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=  null)  {  translate(input,  writer);  }  else  {  return  writer.toString();  }  if(writer!=  null)  {  translate(input,  writer);  }	  	compilable	  [FE]  ComparisonFailure  	29	17	add
521	[BUG]  [BUGGY]  reader!=  null  &&  writer.isSequence();  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.isSequence();  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.isSequence();	  reader!=    null    &&    writer.isEmpty();    	non-compiled	[CE]  not  a  statement	70	None	replace
522	[BUG]  [BUGGY]  reader!=  null  &&  writer.trim().length()  ==  0;  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader!=  null  &&  writer.trim().length()  ==  0;  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader!=  null  &&  writer.trim().length()  ==  0;	  reader!=    null    &&    writer.isEmpty();    	non-compiled	[CE]  not  a  statement	70	None	replace
523	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  1);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  1);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(input.length()  *  2  +  1);	  StringWriter    writer    =    new    StringWriter(input.length()    *    2    -    1);    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	103	None	replace
524	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(reader.length()  *  2);  [CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  StringWriter  writer  =  new  StringWriter(reader.length()  *  2);  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	StringWriter  writer  =  new  StringWriter(reader.length()  *  2);	  StringWriter    writer    =    new    StringWriter(writer.length());    	non-compiled	[CE]  variable  writer  is  already  defined  in  method  translate(CharSequence)	94	None	replace
525	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	add	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
526	[BUG]  [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]          writer.append('n');    if(writer!=  null)  {  writer.append('n');  }  else  {  writer.append('-');  }  writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }  [BUGGY]      translate(input,  writer);  return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	                writer.append('n');        if(writer!=    null)    {    writer.append('n');    }    else    {    writer.append('-');    }    writer.append('-');  if(writer!=  null)  {  writer.append('-');  }  else  {  writer.append('-');  }	  	compilable	  [FE]  ComparisonFailure  	129	17	add
527	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(writer,  input.toString());  }  [CE]  no  suitable  method  found  for  translate(StringWriter,String)  [FE]          ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(writer,  input.toString());  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(writer,  input.toString());  }	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  no  suitable  method  found  for  translate(StringWriter,String)	116	None	replace
528	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(write(input,  writer.toString()));  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(write(input,  writer.toString()));  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(write(input,  writer.toString()));  }	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
529	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(input,  writer.toString(),  input);  }  [CE]  no  suitable  method  found  for  translate(CharSequence,String,CharSequence)  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(input,  writer.toString(),  input);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(input,  writer.toString(),  input);  }	  if(writer!=    null)    {    translate(input,    writer.toString());    }    	non-compiled	[CE]  no  suitable  method  found  for  translate(CharSequence,String,CharSequence)	116	None	replace
530	[BUG]  [BUGGY]  reader.translate(input,  input);  [CE]  cannot  find  symbol  reader  [FE]            ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.translate(input,  input);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.translate(input,  input);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
531	[BUG]  [BUGGY]  reader.translate(input,  output);  [CE]  cannot  find  symbol  output  [FE]              ComparisonFailure      [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  reader.translate(input,  output);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	reader.translate(input,  output);	  reader.translate(input,    writer);    	non-compiled	[CE]  cannot  find  symbol  output	6	None	replace
532	[BUG]  [BUGGY]  if(writer!=  null)  {  translate(output,  writer);  }  else  {  return  writer.toString();  }  [CE]  cannot  find  symbol  output  [FE]    ComparisonFailure    [CONTEXT]      public  final  String  translate(CharSequence  input)  {  if  (input  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(input.length()  *  2);      [BUGGY]  if(writer!=  null)  {  translate(output,  writer);  }  else  {  return  writer.toString();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  throw  new  RuntimeException(ioe);  }  }  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  String  CharSequence  input  [VARIABLES]  boolean  StringWriter  writer  CharSequence  input  IOException  ioe  	projects/Lang17/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	0.24253562503633297	59	59	1	replace	if(writer!=  null)  {  translate(output,  writer);  }  else  {  return  writer.toString();  }	  if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    if(writer!=    null)    {    translate(input,    writer);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  cannot  find  symbol  output	30	None	replace
