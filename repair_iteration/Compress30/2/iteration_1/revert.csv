projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133initBlock();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133init();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("".equals(in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=blockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?true:false;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=false;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalStateException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=in.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&inUse;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressBlockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_PART_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){this.in=in;this.decompressConcatenated=decompressConcatenated;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.isEnabled()){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.length>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}else{thrownewIllegalArgumentException("");}
