projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133initBlock();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133init();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("".equals(in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=blockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?true:false;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=false;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalStateException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=in.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&inUse;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressBlockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_PART_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){this.in=in;this.decompressConcatenated=decompressConcatenated;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.isEnabled()){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.length>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){init();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBooleanValue())){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.length>0)||(in==null&&in.length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.length>0)||(in!=null&&in.length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.read()>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.length>0)||(in!=null&&in.length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBytes().length>0)||(in==null&&in.getByteArray().length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBytes().length>0)||(in==null&&in.getByteCount()>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133init(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated||inUse;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&blockSize100k;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&currentState;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&inUse+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy?in.readInt():in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=BZip2CompressorInputStream.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy,in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?null:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=blockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_CRC:BZip2CompressorInputStream.DECOMPRESSED_CRC;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null&&in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,this.decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,DECOMPRESSION);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133System.arraycopy(temp_charArray2,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){System.arraycopy(temp_charArray2,0,temp_charArray2d,0,}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{in.close();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalArgumentException("").getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated+2;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated/1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated*1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated+4;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalStateException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalStateException("".equals(in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in>=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=decompressConcatenated){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray,0,temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[Lens.length+1];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.getBooleanValue())){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.read()>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.getBytes().length>0)||(in!=null&&in.getByteArray().length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.getBytes().length>0)||(in!=null&&in.getByteCount()>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.getBytes().length>0)||(in!=null&&in.getBytes().length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in==null&&in.length()>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=in,decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.toHexString(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.toString(Integer.toString(in));
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.toString(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.parseInt(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBooleanValue())){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.length>0)||(in==null&&in.length>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.read()>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBytes().length>0)||(in==null&&in.getByteArray().length>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBytes().length>0)||(in==null&&in.getBytes().length>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.getBytes().length>0)||(in==null&&in.getByteCount()>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(in!=null&&in.readLine()>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){System.arraycopy(temp_charArray2,0,temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,this.decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,this.decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,decompressConcatenated,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,decompressConcatenated,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,decompressConcatenated,blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_in();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_instance();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_xy(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(this.in,this.decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){System.arraycopy(temp_charArray2,0,temp_charArray2d,0,}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?false:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?true:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:decompressConcatenated+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null||this.in.isEnabled()){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133init(false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.isEnabled()){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.isEnabled()){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=in.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=_in.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in,in.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in.openStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in.readLine();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=inputStream.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.isEnabled())){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.length>0)||(this.in!=null&&this.in.length>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.length>0)||(this.in==null&&this.in.length>0)){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.equals(in))){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?Boolean.FALSE:Boolean.TRUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?Integer.TRUE:Integer.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated|Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:Boolean.TRUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised?Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null||this.in.length>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.length>0){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&in.length>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null||this.in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null||this.in==null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?NO_RAND_PART_A_STATE:RAND_PART_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?START_BLOCK_STATE:RAND_PART_A_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_PART_C_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:RAND_PART_A_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:RAND_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_A_STATE:START_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133((BZip2CompressorInputStream)in).setEncoding(getAndMoveToFrontDecode_yy);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133((BZip2CompressorInputStream)in).setEncoding(getAndMoveToFrontDecode_yy());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133((BZip2CompressorInputStream)in).init();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated||BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=newBZip2CompressorInputStream(in,decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=RAND_PART_A_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=RAND_PART_C_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=RAND_PART_B_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=true;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_yy+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=decompressConcatenated?getAndMoveToFrontDecode_yy:getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_yy||getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_yy?null:getAndMoveToFrontDecode_yy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=decompressConcatenated?getAndMoveToFrontDecode_yy:null;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated|BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy,in.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy?in.readIn():in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=BZip2CompressorInputStream.readIn(in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=in;this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){if(this.in!=null){this.in=in;this.decompressConcatenated=decompressConcatenated;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){this.in=in;this.decompressConcatenated=decompressConcatenated;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133in=in;this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){this.in=in;this.decompressConcatenated=decompressConcatenated;}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){if(this.in!=null){this.in=in;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,0,temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[Lens.length()];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){init();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){System.arraycopy(temp_charArray,0,temp_charArray2d,0,}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[Lens.length()];System.arraycopy(temp_char,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.blockRandomised){this.blockRandomised=false;}else{this.blockRandomised=true;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.blockRandomised){this.blockRandomised=false;}else{System.arraycopy(in,0,this.blockRandomised,0,this.blockRandomised);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.blockRandomised){this.blockRandomised=false;}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.blockRandomised){this.blockRandomised=false;}else{System.arraycopy(in,0,this.blockRandomised,0,this.blockSize100k);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.blockRandomised){this.blockRandomised=false;}else{System.arraycopy(data,0,this.blockRandomised,0,data.length);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BZip2Compressor.DECOMPRESSED;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray2,0,temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in==null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("").equals(in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException(""+Integer.toString(in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException(""+Integer.toHexString(in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,cftab);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,DECOMPRESSION);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.selector);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("").getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalStateException("").getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?false:false;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?false:true;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:false;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.isEnabled())){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.getBooleanValue())){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133||(this.in!=null&&this.in.length>0)||(in.length>0)){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){init();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,0);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,this.recvDecodingTables_pos);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[Lens.length()];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in>=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_int();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_inn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_xy();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){if(in!=null){for(inti=0,len=in.length;i<len;++i){System.arraycopy(temp_charArray2,0,temp_}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length()];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length()];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in>=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalStateException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?true:null;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?Boolean.TRUE:Boolean.FALSE+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=BZip2Compressor.instance.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=BZip2Compressor.in.readInt();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated-1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){init();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){init();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null&&this.in.length>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null||this.in.length>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=DECOMPRESSED_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalStateException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:blockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?null:in;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalArgumentException("".equals(in.getBytes()));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalArgumentException("".equals(in.getByteArray()));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=BZip2CompressorInputStream.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=BZip2Compressor.in.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BUFFER;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray.length+1];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_xy;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=getAndMoveToFrontDecode_yy+2;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){this.in=in;this.decompressConcatenated=decompressConcatenated;}else{BZip2CompressorInputStreamin=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated+1;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.MAX_VALUE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.toString(Integer.MAX_VALUE);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.toHexString(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESS
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.START_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=RAND_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BZip2BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.toBooleanObject(true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.isBoolean(decompressConcatenated);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.toBooleanObject(false);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.toBooleanObjectLitBounds(true);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.booleanValue();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_BLOCK_STATE:RAND_PART_A_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&in.isEnabled()){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.canEnabled()){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalStateException("").getMessage();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&inISO;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){in=newBZip2CompressorInputStream(in,this.decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){initBlock();}else{thrownewIllegalArgumentException("").getMessage();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null||this.in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in>=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){this.in=in;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_charArray
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1]
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temps.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(decompressConcatenated){if(in!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[lens.length+1];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}else{thrownewIllegalArgumentException("".);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=out.getInputStream();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised:decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.US_ASCII;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.BASE_RANGE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){initBlock();}else{thrownewIllegalArgumentException("").getMessage();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}else{thrownewIllegalArgumentException("".);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(this.in,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,1);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=temp_charArray.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=temp_charArray.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray.length()];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray!=null){for(inti=0,len=temp_charArray.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray.length()];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised|=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=in;this.decompressConcatenated=decompressConcatenated;}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy();this.in=in;this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133This.in=in;this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=this.in;this.decompressConcatenated=decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==decompressConcatenated){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=super.blockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BZip2Compressor.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length+1];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arraycopy(temp_char
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133while(in==null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133while(in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){thrownewIllegalArgumentException("".equals(in.getBytes()));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=newchar[getAndMoveToFrontDecode_yy];
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.selector=decompressConcatenated?getAndMoveToFrontDecode_yy:RAND_PART_A_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION,in);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=temp_charArray.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2.length!=0){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.in=Integer.toString(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray!=null){for(inti=0,len=temp_charArray.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length+1];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray.length+1];System.arraycopy(temp_charArray,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised?BZip2CompressorInputStream.DECOMPRESSION:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?RAND_PART_B_STATE:BZip2CompressorInputStream.DECOMPRESSED_BLOCK;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,this.seqToUnseq);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in,this.su_rNToGo);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.toBooleanObject(this.blockSize100k);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=BooleanUtils.toBooleanObject();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,this.decompressConcatenated,this.blockRandomised);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in==null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in<=this.in){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in.isEnabled()){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null){thrownewIllegalStateException("".equals(in.getBytes()));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133while(in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in.length==0){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in.length<2){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.length>0){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null||this.in!=null){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=_in.readIn();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.size()>0){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.length<2){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null||this.in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133while(this.in!=null){thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null){thrownewIllegalStateException("".equalsIgnoreCase(this.in));}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){init();}else{thrownewIllegalStateException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133while(this.in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in==null){thrownewIllegalArgumentException("".);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=buildBlockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=defaultBlockRandomised;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in>=null){initBlock();}else{thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=in.readUTF();
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length()];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray.length()];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length;i<len;++i){char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133char[][]temp_charArray2d=newchar[lens.length()];System.arraycopy(temp_char,0,temp_charArray2d,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[][]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newBZip2CompressorInputStream(in,decompressConcatenated,baseUse);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated&&inUSeq;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=getAndMoveToFrontDecode_yy(in.getBytes());
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){initBlock();}else{initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null&&in!=null){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in.isEnabled()){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in!=null||in.length<2){thrownewIllegalArgumentException("");}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in!=null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null||in==null){init();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp_charArray2,0,
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy(temp
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arra
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133InputStreamin=newInputStreamInputStream(in,decompressConcatenated,data.length);
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?ROUTE_PART_A_STATE:ROUTE_PART_BLOCK_STATE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(temp_charArray2d!=null){for(inti=0,len=in.length();i<len;++i){char[]temp_charArray2d=newchar[temp_charArray2.length+1];System.arraycopy
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?BZip2Compressor.DECOMPRESSION:BZip2Compressor.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_BLOCK:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.decompressConcatenated=decompressConcatenated?BZip2CompressorInputStream.DECOMPRESSED_CONCATENATION:BZip2CompressorInputStream.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcaten
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in,decompressConcatenated);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(in==null){in=newBZip2CompressorInputStream(in);}else{in=newBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.isEnabled()||this.decompressConcatenated){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133if(this.in!=null&&this.in.isEnabled()||this.blockRandomised){initBlock();}
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?BZip2Compressor.DECOMPRESSION:BZip2Compressor.DECOMPRESSION;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised=decompressConcatenated?super.decompressConcatenated:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised?null:decompressConcatenated;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised&&decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java133this.blockRandomised|=decompressConcatenated?Boolean.TRUE:Boolean.FALSE;
