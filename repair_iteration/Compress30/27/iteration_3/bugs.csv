bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
2	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize!=  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize!=  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize!=  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
3	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >>  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >>  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >>  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
4	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
5	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  ==  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  ==  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  ==  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
6	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
7	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    ==    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
8	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  >=  '9')  {	  if(blockSize    ==    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
9	[BUG]  [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
10	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  if(blockSize!=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  if(blockSize  >  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  &&  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    ==    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
21	[BUG]  [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    ==    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
22	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >=    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  int  len  =  this.in.read()  -  blockSize;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read()  -  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read()  -  blockSize;	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  int  len  =  this.in.read()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read()  +  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read()  +  blockSize;	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  int  len  =  this.in.read()  &  blockSize;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read()  &  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read()  &  blockSize;	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  int  len  =  this.in.read()  -  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read()  -  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read()  -  1;	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  int  len  =  this.in.read()  *  blockSize;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read()  *  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read()  *  blockSize;	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  if(blockSize  >>  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize    >=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
30	[BUG]  [BUGGY]  if(blockSize!=  '0'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  &&  blockSize  <  =  '9')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
31	[BUG]  [BUGGY]  if(blockSize  [Delete]  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  [Delete]  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  [Delete]  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
32	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize,  blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize,  blockSize);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
33	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize100k);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
34	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize,  this.bsLive);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize,  this.bsLive);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
35	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize,  this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize,  this.blockSize);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
36	[BUG]  [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    '9'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
37	[BUG]  [BUGGY]  if(blockSize  >  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    '9'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
38	[BUG]  [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '9'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
39	[BUG]  [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {	  if(blockSize    <    '9'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
40	[BUG]  [BUGGY]  if(blockSize  >=  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    '9'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
41	[BUG]  [BUGGY]  if(blockSize!=  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  &&  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
42	[BUG]  [BUGGY]  if(blockSize  ==  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '0'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  &&  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
43	[BUG]  [BUGGY]  if(blockSize  >=  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '0'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  &&  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
44	[BUG]  [BUGGY]  if(blockSize  <  0  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  0  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  0  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
45	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  &&  blockSize  >  '9')  {	  if(blockSize    <    =    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
46	[BUG]  [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
47	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
48	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
51	[BUG]  [BUGGY]  int  c  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read(blockSize);	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
52	[BUG]  [BUGGY]  int  c  =  this.in.read()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read()  +  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read()  +  blockSize;	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
53	[BUG]  [BUGGY]  int  c  =  this.in.read(blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read(blockSize,  this.bsLive);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read(blockSize,  this.bsLive);	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
54	[BUG]  [BUGGY]  int  c  =  this.in.read(blockSize,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read(blockSize,  0,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read(blockSize,  0,  this.in.read());	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
55	[BUG]  [BUGGY]  char  c  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  char  c  =  this.in.read();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	char  c  =  this.in.read();	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
56	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    ==    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
57	[BUG]  [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    ==    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
58	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  'Z')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
59	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
60	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  'Z')  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
61	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize!=  'Z')  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize!=  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize!=  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
62	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  'Z')  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
63	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
64	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  'z')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  'z')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  'z')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  'Z')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  'Z')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  'Z')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
73	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  'Z')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
75	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(blockSize);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
76	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(blockSize,  this.in.read());	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  int  bsBuff  =  this.in.readShort();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.readShort();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.readShort();	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read()  +  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read()  +  blockSize;	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  0,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(blockSize,  0,  this.in.read());	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
80	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  0,  blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(blockSize,  0,  blockSize);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
81	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
82	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
83	[BUG]  [BUGGY]  if(blockSize!=  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  if(blockSize  ==  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    ==    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
85	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >>  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >>  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >>  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
87	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
88	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  if(blockSize  <  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
91	[BUG]  [BUGGY]  if(blockSize  <  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
93	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
94	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
95	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '0'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
96	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  >=  '9')  {	  if(blockSize    >    '0'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
97	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  ==  '9')  {	  if(blockSize    >    '0'    ||    blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
98	[BUG]  [BUGGY]  int  blockSize  =  this.in.read()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read()  -  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read()  -  1;	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
99	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read(this.blockSize100k);	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
100	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read(this.bsBuff);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read(this.bsBuff);	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
101	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read(this.blockSize);	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  int  blockSize  =  this.in.read()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read()  +  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read()  +  1;	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
103	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(this.blockSize);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
104	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(this.blockSize100k);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
105	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.readInt();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.readInt();	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
106	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(this.bsBuff);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(this.bsBuff);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
107	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.readFully();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.readFully();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.readFully();	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
108	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.readUTF();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.readUTF();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.readUTF();	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
109	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
110	[BUG]  [BUGGY]  int  bsLive  =  this.in.read()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read()  +  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read()  +  blockSize;	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
111	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize,  this.in.read());	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
112	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize,  0,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize,  0,  this.in.read());	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
113	[BUG]  [BUGGY]  byte  bsLive  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  byte  bsLive  =  this.in.read();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	byte  bsLive  =  this.in.read();	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
114	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize,  0,  blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize,  0,  blockSize);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
115	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  'z')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
116	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
117	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  'z')  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
118	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
119	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize!=  'z')  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize!=  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize!=  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
120	[BUG]  [BUGGY]  if(blockSize  >  '0'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  &&  blockSize  <  =  '9')  {	  if(blockSize    >    '0'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
121	[BUG]  [BUGGY]  if(blockSize  <  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  &&  blockSize  >  '9')  {	  if(blockSize    >    '0'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
122	[BUG]  [BUGGY]  if(blockSize  >  '0'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '0'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
123	[BUG]  [BUGGY]  if(blockSize  <  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
124	[BUG]  [BUGGY]  if(blockSize  >=  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
125	[BUG]  [BUGGY]  if(blockSize  <  0  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  0  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  0  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
126	[BUG]  [BUGGY]  if(blockSize  >>  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
127	[BUG]  [BUGGY]  if(blockSize!=  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
128	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize!=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
129	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
130	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  <  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  <  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  <  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
131	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  <  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
132	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
133	[BUG]  [BUGGY]  ||  blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  ||  blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	||  blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
134	[BUG]  [BUGGY]  if(blockSize!=  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
135	[BUG]  [BUGGY]  if(blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
136	[BUG]  [BUGGY]  ||  blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  ||  blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	||  blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
137	[BUG]  [BUGGY]  int  size  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(blockSize);	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
138	[BUG]  [BUGGY]  int  size  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(this.blockSize);	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
139	[BUG]  [BUGGY]  int  size  =  this.in.read()  -  blockSize;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read()  -  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read()  -  blockSize;	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
140	[BUG]  [BUGGY]  int  size  =  this.in.read()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read()  +  blockSize;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read()  +  blockSize;	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
141	[BUG]  [BUGGY]  int  size  =  this.in.read()  -  1;  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read()  -  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read()  -  1;	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
142	[BUG]  [BUGGY]  int  size  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(this.blockSize100k);	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
143	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
144	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  0)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
145	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  1)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  1)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
146	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  16)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  16)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  16)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
147	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
148	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  0)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
149	[BUG]  [BUGGY]  int  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.readInt();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.readInt();	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
150	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt()  -  1;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readInt()  -  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt()  -  1;	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
151	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readUTF();  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readUTF();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readUTF();	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
152	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt()  +  1;  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readInt()  +  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt()  +  1;	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
153	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readInt(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt(this.blockSize100k);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
154	[BUG]  [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  ||  blockSize  <  =  '9')  {	  if(blockSize    ==    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
155	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize,  this.bsLive);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize,  this.bsLive);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize,  this.bsLive);	  int    len    =    this.in.read(blockSize);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
156	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize,  0,  blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize,  0,  blockSize);	  int    len    =    this.in.read(blockSize);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
157	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
158	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
159	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
160	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
161	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
162	[BUG]  [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
163	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
164	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    ==    '9')    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
165	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
167	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  if(blockSize  >>  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
169	[BUG]  [BUGGY]  if(blockSize!=  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
170	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
171	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  ==  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
172	[BUG]  [BUGGY]  if(blockSize  <  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  &&  blockSize  >  '9')  {	  if(blockSize    >    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
173	[BUG]  [BUGGY]  if(blockSize  >  '1'  &&  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  &&  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  &&  blockSize  >=  '9')  {	  if(blockSize    >    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
174	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
175	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  <  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
176	[BUG]  [BUGGY]  ||  blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  ||  blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	||  blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    <    =    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
177	[BUG]  [BUGGY]  if(blockSize  <  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    <    =    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
178	[BUG]  [BUGGY]  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(blockSize    <    =    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
179	[BUG]  [BUGGY]  if(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(blockSize    <    =    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
180	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
181	[BUG]  [BUGGY]  if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
182	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
183	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
184	[BUG]  [BUGGY]  if(this.blockSize  >  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(this.blockSize  >  '0'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(this.blockSize  >  '0'  ||  blockSize  >  '9')  {	  if(this.blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
185	[BUG]  [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
186	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
187	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize!=  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize!=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize!=  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
188	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >>  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >>  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >>  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
189	[BUG]  [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
190	[BUG]  [BUGGY]  if(blockSize  <  =  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
191	[BUG]  [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >=  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
192	[BUG]  [BUGGY]  if(blockSize  >  '9'  ||  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  ||  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  ||  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
193	[BUG]  [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  ==  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
194	[BUG]  [BUGGY]  if(blockSize  <  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
195	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read(this.blockSize);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
196	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read(this.blockSize100k);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
197	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read()  -  1;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.read()  -  1;  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read()  -  1;	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
198	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
199	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  <  =  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
200	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
201	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >=  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >=  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >=  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
202	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
203	[BUG]  [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
204	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  ==  '9')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
205	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  >=  '9')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
206	[BUG]  [BUGGY]  int  size  =  this.in.read(blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(blockSize  -  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(blockSize  -  1);	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
207	[BUG]  [BUGGY]  int  size  =  this.in.read(blockSize,  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(blockSize,  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(blockSize,  1);	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
208	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  10)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  10)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  10)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
209	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
210	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize!=    '9')    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
211	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
212	[BUG]  [BUGGY]  if(this.blockSize  <  =  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(this.blockSize  <  =  '0'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(this.blockSize  <  =  '0'  ||  blockSize  >  '9')  {	  if(this.blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
213	[BUG]  [BUGGY]  if(this.blockSize100k  <  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(this.blockSize100k  <  '0'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(this.blockSize100k  <  '0'  ||  blockSize  >  '9')  {	  if(this.blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
214	[BUG]  [BUGGY]  if(blockSize  >  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
215	[BUG]  [BUGGY]  if(blockSize  >=  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
216	[BUG]  [BUGGY]  if(blockSize  ==  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
217	[BUG]  [BUGGY]  if(blockSize  ==  '0'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '0'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  &&  blockSize  <  =  '9')  {	  if(blockSize    ==    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
218	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    ==    '9')    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
219	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
220	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >=    'a'    &&    blockSize    <    =    'z')    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
221	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize  -  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize  -  1);	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
222	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize,  0);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize,  0);	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
223	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize,  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize,  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize,  1);	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
224	[BUG]  [BUGGY]  if(blockSize!=  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
225	[BUG]  [BUGGY]  if(blockSize!=  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
226	[BUG]  [BUGGY]  if(blockSize!=  '9'  ||  blockSize  ==  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '9'  ||  blockSize  ==  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '9'  ||  blockSize  ==  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
227	[BUG]  [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
228	[BUG]  [BUGGY]  int  c  =  this.in.read(blockSize,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read(blockSize,  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read(blockSize,  1);	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
229	[BUG]  [BUGGY]  int  c  =  this.in.readFully();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.readFully();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.readFully();	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
230	[BUG]  [BUGGY]  int  c  =  this.in.read(blockSize,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read(blockSize,  false);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read(blockSize,  false);	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
231	[BUG]  [BUGGY]  if(blockSize  ==  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    ==    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
232	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(blockSize,  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(blockSize,  1);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
233	[BUG]  [BUGGY]  char  bsBuff  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  char  bsBuff  =  this.in.read();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	char  bsBuff  =  this.in.read();	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
234	[BUG]  [BUGGY]  int  bsBuff  =  this.in.readFully();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.readFully();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.readFully();	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
235	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readInt(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt(blockSize);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
236	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(this.blockSize);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readInt(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt(this.blockSize);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
237	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt(0);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.readInt(0);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt(0);	  Integer    blockSize    =    this.in.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
238	[BUG]  [BUGGY]  if(blockSize  >>  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '1'  &&  blockSize  >  '9')  {	  if(blockSize!=    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize,  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize,  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize,  1);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
240	[BUG]  [BUGGY]  char  bsLive  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  char  bsLive  =  this.in.read();  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	char  bsLive  =  this.in.read();	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
241	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize,  4);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize,  4);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize,  4);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
242	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(blockSize,  2);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(blockSize,  2);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(blockSize,  2);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
243	[BUG]  [BUGGY]  if(blockSize  >=  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
244	[BUG]  [BUGGY]  if(blockSize  ==  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize    >    '9'    &&    blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
245	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.read(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read(blockSize);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
246	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(MAX_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.read(MAX_BLOCK_STATE);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read(MAX_BLOCK_STATE);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
247	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  Integer  blockSize  =  this.in.read(this.bsBuff);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read(this.bsBuff);	  Integer    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
248	[BUG]  [BUGGY]  if(blockSize  >>  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '0'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '0'  &&  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
249	[BUG]  [BUGGY]  if(blockSize!=  '0'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
250	[BUG]  [BUGGY]  if(blockSize!=  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
251	[BUG]  [BUGGY]  if(blockSize!=  '0'  &&  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  &&  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  &&  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize!=    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
252	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
253	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bytes);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read(this.bytes);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read(this.bytes);	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
254	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.bits);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read(this.bits);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read(this.bits);	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
255	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize  -  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize  -  1);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
256	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize  +  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize  +  1);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
257	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(blockSize);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
258	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(this.bytes);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(this.bytes);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(this.bytes);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
259	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(this.bits);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(this.bits);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(this.bits);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
260	[BUG]  [BUGGY]  if(blockSize  >>  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >=    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
261	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'z')    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
262	[BUG]  [BUGGY]  if(blockSize  >  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  ||  blockSize  >=  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
263	[BUG]  [BUGGY]  while(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  while(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	while(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
264	[BUG]  [BUGGY]  while(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  while(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	while(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(blockSize    ==    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
265	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
266	[BUG]  [BUGGY]  int  c  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  c  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read(this.blockSize);	  int    c    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
267	[BUG]  [BUGGY]  if(blockSize!=  '0'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '0'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  ||  blockSize  <  =  '9')  {	  if(blockSize!=    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
268	[BUG]  [BUGGY]  if(this.blockSize  <  '0'  ||  this.blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(this.blockSize  <  '0'  ||  this.blockSize  >  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(this.blockSize  <  '0'  ||  this.blockSize  >  '9')  {	  if(this.blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
269	[BUG]  [BUGGY]  if(blockSize  >>  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >>  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >>  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
270	[BUG]  [BUGGY]  int  size  =  this.in.read(this.blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(this.blockSize,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(this.blockSize,  this.in.read());	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
271	[BUG]  [BUGGY]  int  size  =  this.in.read(this.blockSize,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  size  =  this.in.read(this.blockSize,  0,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read(this.blockSize,  0,  this.in.read());	  int    size    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
272	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
273	[BUG]  [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
274	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize,  this.computedCRC);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize,  this.computedCRC);	  int    len    =    this.in.read(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
275	[BUG]  [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
276	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9'    ||    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
277	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(this.blockSize);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
278	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(this.blockSize100k);	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
279	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(this.blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(this.blockSize,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(this.blockSize,  this.in.read());	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
280	[BUG]  [BUGGY]  int  bsLive  =  this.in.read(this.blockSize,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsLive  =  this.in.read(this.blockSize,  0,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read(this.blockSize,  0,  this.in.read());	  int    bsLive    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
281	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  '0'  &&  blockSize  <  =  '9')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  &&  blockSize  <  =  '9')  {	  if(blockSize    <    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
282	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(this.blockSize,  this.in.read());  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize,  this.in.read());	  int    len    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
283	[BUG]  [BUGGY]  if(blockSize  <  =  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  =  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    <    =    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
284	[BUG]  [BUGGY]  while(blockSize  <  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  while(blockSize  <  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	while(blockSize  <  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(blockSize    <    =    0)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
285	[BUG]  [BUGGY]  int  blockSize  =  this.in.read(this.blockBuffer);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  blockSize  =  this.in.read(this.blockBuffer);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read(this.blockBuffer);	  int    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
286	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  len  =  this.in.read(blockSize,  this.computedCRC);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize,  this.computedCRC);	  int    len    =    this.in.read(blockSize);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
287	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    'Z')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
288	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(this.blockSize);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
289	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize100k);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read(this.blockSize100k);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
290	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read(this.blockSize,  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  int[][]  blockSize  =  this.in.read(this.blockSize,  1);  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read(this.blockSize,  1);	  int[][]    blockSize    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
291	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'f')  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'f')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'f')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
292	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  ==  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  ==  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  <  =  '9'  ||  blockSize  ==  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize!=    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
293	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();      [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [BUGGY]      throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
