bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  if(blockSize  <  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    >    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  0)  {	  if(blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  if(blockSize  >  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '1'  &&  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  &&  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '1'  &&  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  &&  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  int  blockSize  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  blockSize  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  blockSize  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  int  len  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  len  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  int[][]  blockSize  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int[][]  blockSize  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int[][]  blockSize  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  bsBuff  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsBuff  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  int  size  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  size  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  size  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  Integer  blockSize  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  Integer  blockSize  =  this.in.readInt();  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  Integer  blockSize  =  this.in.readInt();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	Integer  blockSize  =  this.in.readInt();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  >=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize  ==  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '1'  ||  blockSize  >  '9'  ||  blockSize!=  '9')  {	  if(blockSize    <    '1'    ||    blockSize    >    '9'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  if(blockSize!=  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize!=  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(blockSize  <  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  if(blockSize  >  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  ||  blockSize  <  =  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '9'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  if(blockSize  >=  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >=  '0'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >=  '0'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'Z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  'z')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  '0'  ||  blockSize  >  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  ||  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >=  'a'  &&  blockSize  <  =  'z')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  <  =  '9'  ||  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '1'  ||  blockSize  >  '9'  ||  blockSize  <  =  '9')  {	  if(blockSize    >    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  '0'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '0'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
52	[BUG]  [BUGGY]  if(blockSize  >  '0'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '0'  &&  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  &&  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  if(blockSize!=  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize!=  '0'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize!=  '1'  &&  blockSize  <  =  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  <  =  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '0'  ||  blockSize  >  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  if(blockSize!=  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize!=  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  if(blockSize  ==  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  if(blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  if(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  int  len  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  len  =  this.in.read(blockSize);  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(blockSize);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  int  bsLive  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  bsLive  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  bsLive  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >=  '9')  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '1'  &&  blockSize  >=  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '1'  &&  blockSize  >=  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  ==  '1'  &&  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  ==  '1'  &&  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize!=  '1'  &&  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '1'  &&  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  >  '9'  &&  blockSize  <  =  '1'  &&  blockSize  >  '9')  {	  if(blockSize    <    =    '1'    &&    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize  <  =  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize  <  =  '0'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '0'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  if(this.blockSize  <  '0'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(this.blockSize  <  '0'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(this.blockSize  <  '0'  ||  blockSize  >  '9')  {	  if(blockSize    <    '0'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
68	[BUG]  [BUGGY]  int  c  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  c  =  this.in.read();  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  c  =  this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  int  len  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  int  len  =  this.in.read(this.blockSize);  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	int  len  =  this.in.read(this.blockSize);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  if(blockSize!=  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    int  magic1  =  this.in.read();  int  magic2  =  this.in.read();  if  (magic0  !=  'B'  ||  magic1  !=  'Z'  ||  magic2  !=  'h')  {  throw  new  IOException(isFirstStream  ?     "Stream  is  not  in  the  BZip2  format   "  :     "Garbage  after  a  valid  BZip2  stream   ");  }  int  blockSize  =  this.in.read();    [BUGGY]  if(blockSize!=  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {  [BUGGY]    throw  new  IOException(   "BZip2  block  size  is  invalid   ");  }  this.blockSize100k  =  blockSize  -  '0';  this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	246	246	1	replace	if(blockSize!=  '9'  ||  blockSize  <  '1'  ||  blockSize  >  '9')  {	  if(blockSize    >    '9'    ||    blockSize    <    '1'    ||    blockSize    >    '9')    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
