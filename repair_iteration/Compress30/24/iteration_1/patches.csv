bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  setupBlockBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupBlockBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK_STATE();	  return    setupBlockB();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  return  setupBlockB2();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupBlockB2();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB2();	  return    setupBlockB();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  return  setupBlockBlank();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupBlockBlank();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBlank();	  return    setupBlockB();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  return  setupSize100k()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSize100k()  /  START_BLOCK_STATE;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  /  START_BLOCK_STATE;	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  return  setupSize100k()  &  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSize100k()  &  START_BLOCK_STATE;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  &  START_BLOCK_STATE;	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  return  setupSize100k(currentState);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSize100k(currentState);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState);	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandPartB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPartB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandPartB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  if(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	if(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  return  setupBlockBlock();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupBlockBlock();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBlock();	  return    setupStandardBlock();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  return  setupRandBlock();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBlock();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlock();	  return    setupStandardBlock();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  return  setupStandardBLOCK();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK();	  return    setupStandardBlock();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK_STATE()  +  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE()  +  1;	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK_STATE()  -  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE()  -  1;	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK_STATE(currentState);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(currentState);	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  return  setupStepBlock();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBlock();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlock();	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBLOCK_STATE()  +  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE()  +  1;	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBLOCK_STATE()  -  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE()  -  1;	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  return  setupStandardBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBLOCK_STATE()  -  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK_STATE()  -  1;	  return    setupStandardBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  return  setupStandardBLOCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBLOCK_STATE()  +  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK_STATE()  +  1;	  return    setupStandardBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  return  setupStartBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStartBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartBLOCK_STATE();	  return    setupSTARTBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  return  setupStARTBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStARTBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStARTBLOCK_STATE();	  return    setupStART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandPartB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB();	  return    setupStART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStART_BLOCK_STATE()  +  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE()  +  1;	  return    setupStART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStART_BLOCK_STATE()  -  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE()  -  1;	  return    setupStART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStART_BLOCK_STATE(currentState);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(currentState);	  return    setupStART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK();	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  return  setupRandBLOCK(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK(START_BLOCK_STATE);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(START_BLOCK_STATE);	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  return  setupRandBLOCK(currentState);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK(currentState);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(currentState);	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  return  setupSTRINGBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSTRINGBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTRINGBLOCK_STATE();	  return    setupSTARTBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  return  setupStandardBlank();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBlank();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlank();	  return    setupStART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  return  setupSizeBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSizeBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBLOCK_STATE();	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  return  setupSizeBlock();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSizeBlock();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlock();	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  return  setupBlockBLOCK();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupBlockBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK();	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  return  setupSizeBLOCK();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSizeBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBLOCK();	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  return  setupSizeBlank();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSizeBlank();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlank();	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  return  setupStandardBLOCK(currentState);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBLOCK(currentState);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK(currentState);	  return    setupStandardBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  return  setupStandardBlockB();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBlockB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB();	  return    setupBlockB();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  return  setupStartBLOCK();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStartBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartBLOCK();	  return    setupSTART_BLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  return  setupStepBLOCK();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBLOCK();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK();	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(START_BLOCK_STATE);	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  return  setupStepBLOCK(currentState);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBLOCK(currentState);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(currentState);	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  return  setupStepBlockBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStepBlockBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBLOCK_STATE();	  return    setupStepBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  return  setupStandardBlockBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBlockBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockBLOCK_STATE();	  return    setupStandardBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  return  setupSize100k()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSize100k()  -  1;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  -  1;	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  return  setupSize100k()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupSize100k()  &  blockSize100k;  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  &  blockSize100k;	  return    setupSize100k();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartC();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartC();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartB();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  return  setupRandBlockBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBlockBLOCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockBLOCK_STATE();	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  return  setupRandBoCK_STATE();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBoCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBoCK_STATE();	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().intValue();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupRandBLOCK_STATE().intValue();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().intValue();	  return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  return  setupStandardBlCK_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBlCK_STATE();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlCK_STATE();	  return    setupStandardBlock();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  return  setupStandardBlk();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStandardBlk();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlk();	  return    setupStandardBlock();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  return  setupBlockB(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupBlockB(START_BLOCK_STATE);  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(START_BLOCK_STATE);	  return    setupBlockB();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  return  setupStatistics();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:    [BUGGY]  return  setupStatistics();  [BUGGY]      case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics();	  return    setupSTARTBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
