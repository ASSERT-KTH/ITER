bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE  +  1;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  switch(currentState)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  EOF;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  EOF;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  EOF;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  1;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  RETURN_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  RETURN_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  RETURN_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  OS_ROOT_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  OS_ROOT_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  OS_ROOT_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  return  setupStepBlockBLOCK();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBLOCK();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
8	[BUG]  [BUGGY]  return  setupStepBlockBlank();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockBlank();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBlank();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
9	[BUG]  [BUGGY]  return  setupStepBlockBLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockBLOCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBLOCK_STATE(currentState);	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
10	[BUG]  [BUGGY]  return  setupRandPartB()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartB()  &  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB()  &  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
11	[BUG]  [BUGGY]  return  setupSize100k()  -  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  -  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  -  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
12	[BUG]  [BUGGY]  return  setupRandPartC()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartC()  &  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartC()  &  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
13	[BUG]  [BUGGY]  return  setupBlockBLOCK_STATE()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBLOCK_STATE()  &  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK_STATE()  &  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
14	[BUG]  [BUGGY]  return  setupSize100k()  +  blockSize100k;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  +  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  +  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
15	[BUG]  [BUGGY]  return  setupSize100k()  /  blockSize100k;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  /  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  /  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
16	[BUG]  [BUGGY]  return  setupStepBlock()  &  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlock()  &  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlock()  &  START_BLOCK_STATE;	  return    setupStepBlock();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  return  setupStepBlock()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlock()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlock()  /  START_BLOCK_STATE;	  return    setupStepBlock();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  return  setupStepBlock()  -  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlock()  -  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlock()  -  START_BLOCK_STATE;	  return    setupStepBlock();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  return  setupStepBlk();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlk();	  return    setupStepBlock();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
20	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE(currentState)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE(currentState)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE(currentState)-  1;	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE(currentState  -  1);	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
22	[BUG]  [BUGGY]  return  setupStepBlock_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlock_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlock_STATE();	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
23	[BUG]  [BUGGY]  return  setupRandBlock_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlock_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlock_STATE();	  return    setupRandBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  return  setRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setRandBLOCK_STATE();	  return    setupRandBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  Return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Return  setupRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Return  setupRandBLOCK_STATE();	  return    setupRandBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandPartC();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupSize100k();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupSize100k();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupSize100k();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandPartA();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  Case  START_BLOCK_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Case  START_BLOCK_STATE:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Case  START_BLOCK_STATE:  return  setupRandPartC();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupState();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupState();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupState();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartD();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartD();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandPartD();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  return  setupRandBlank();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlank();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlank();	  return    setupSizeBlank();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  return  setupSizeBlank()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBlank()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlank()  -  1;	  return    setupSizeBlank();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
34	[BUG]  [BUGGY]  return  setupRandBlockB();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockB();	  return    setupStandardBlockB();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
35	[BUG]  [BUGGY]  return  setupStandardBlockC();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockC();	  return    setupStandardBlockB();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
36	[BUG]  [BUGGY]  return  setupRandPartB()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartB()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB()  -  1;	  return    setupStandardBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  return  setupStandardBlock_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlock_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlock_STATE();	  return    setupStandardBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
38	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
39	[BUG]  [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
40	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandBLOCK();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
41	[BUG]  [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandBLOCK();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
43	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandPartC();	  switch(currentState)    {    case    EOF:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
44	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupBLOCK_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
45	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandPartA();	  switch(currentState)    {    case    EOF:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  EOF:  return  setupRandPartB();	  switch(currentState)    {    case    EOF:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  return  setupStepBLOCK()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK()  /  START_BLOCK_STATE;	  return    setupStepBLOCK();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
48	[BUG]  [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartA();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
49	[BUG]  [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartA();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartA();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
50	[BUG]  [BUGGY]  return  setupBlockBlCK_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBlCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBlCK_STATE();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
51	[BUG]  [BUGGY]  return  setupRandBlCK_STATE();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlCK_STATE();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
52	[BUG]  [BUGGY]  return  setupStandardBlck_STATE();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlck_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlck_STATE();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
53	[BUG]  [BUGGY]  return  setupBlankBlCK_STATE();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlankBlCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlankBlCK_STATE();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
54	[BUG]  [BUGGY]  return  setupStandardBlCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlCK_STATE()  -  1;	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
55	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(currentState)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(currentState)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(currentState)-  1;	  return    setupRandBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
56	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(currentState  -  1);	  return    setupRandBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
57	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().length  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().length  -  1;	  return    setupRandBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
58	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  +  1;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
59	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  +  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  +  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  +  START_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  *  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  *  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  *  START_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  =  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  =  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE  =  START_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  return  setupBlockBlk();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBlk();	  return    setupBlockB2();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
63	[BUG]  [BUGGY]  return  setupStandardBLOCK(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK(START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK(START_BLOCK_STATE);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
64	[BUG]  [BUGGY]  return  setupBlockBLOCK(currentState);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBLOCK(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK(currentState);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
65	[BUG]  [BUGGY]  return  setupStandardBLOCK(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK(currentState,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK(currentState,  START_BLOCK_STATE);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
66	[BUG]  [BUGGY]  return  setupSTART_BLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTART_BLOCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTART_BLOCK_STATE(currentState);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
67	[BUG]  [BUGGY]  return  setupStandardBLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK_STATE(currentState);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
68	[BUG]  [BUGGY]  return  setStepBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setStepBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setStepBLOCK_STATE();	  return    setupStepBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  Return  setupStepBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Return  setupStepBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Return  setupStepBLOCK_STATE();	  return    setupStepBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
70	[BUG]  [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartC();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  return  setupStatistics()  &  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatistics()  &  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics()  &  START_BLOCK_STATE;	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
73	[BUG]  [BUGGY]  return  setupStatistics()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatistics()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics()  /  START_BLOCK_STATE;	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
74	[BUG]  [BUGGY]  return  setupStatistics(),  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatistics(),  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics(),  START_BLOCK_STATE;	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
75	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(no_RAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(no_RAND_PART_A_STATE);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
76	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(EOF);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(EOF);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
77	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(no_rAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(no_rAND_PART_A_STATE);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
78	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(0L);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(0L);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(0L);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
79	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(this.blockSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(this.blockSize100k);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
80	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(currentState,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(currentState,  START_BLOCK_STATE);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
81	[BUG]  [BUGGY]  return  setupBlank();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlank();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlank();	  return    setupStandardBlank();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
82	[BUG]  [BUGGY]  return  setupSizeBlock()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBlock()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlock()  /  START_BLOCK_STATE;	  return    setupSizeBlock();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  return  setupRandBlk();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlk();	  return    setupRandBlock();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
84	[BUG]  [BUGGY]  return  setupStepBLOCK(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(currentState,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(currentState,  START_BLOCK_STATE);	  return    setupStepBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
85	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE(currentState);	  return    setupStepBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
86	[BUG]  [BUGGY]  return  setupStepBLOCK(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(this.blockSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(this.blockSize100k);	  return    setupStepBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
87	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(),  START_BLOCK_STATE.intValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(),  START_BLOCK_STATE.intValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(),  START_BLOCK_STATE.intValue();	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
88	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().longValue();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().longValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().longValue();	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
89	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().floatValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().floatValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().floatValue();	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
90	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().doubleValue();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().doubleValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().doubleValue();	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
91	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().reset();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().reset();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().reset();	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
92	[BUG]  [BUGGY]  return  setupRandBlockBLOCK_STATE(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockBLOCK_STATE(no_RAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockBLOCK_STATE(no_RAND_PART_A_STATE);	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
93	[BUG]  [BUGGY]  return  setupRandBlockBlk();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockBlk();	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
94	[BUG]  [BUGGY]  return  setupRandBlockB_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockB_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockB_STATE();	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
95	[BUG]  [BUGGY]  return  setupRandBlockBLOCK();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockBLOCK();	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
96	[BUG]  [BUGGY]  return  setupStARTBLOCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStARTBLOCK_STATE()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStARTBLOCK_STATE()  +  1;	  return    setupStARTBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
97	[BUG]  [BUGGY]  return  setupSize100k()  *  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  *  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  *  START_BLOCK_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
98	[BUG]  [BUGGY]  return  setupSize100k()  +  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  +  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  +  START_BLOCK_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  return  setupRandPartC()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartC()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartC()  /  START_BLOCK_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
100	[BUG]  [BUGGY]  return  setupRandPartB()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartB()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB()  /  START_BLOCK_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
101	[BUG]  [BUGGY]  return  setupSize100k(currentState)/  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState)/  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState)/  START_BLOCK_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
102	[BUG]  [BUGGY]  return  setupRandPartC()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartC()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartC()  -  1;	  return    setupStART_BLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
103	[BUG]  [BUGGY]  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartC();	  return    setupStART_BLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
104	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(currentState)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(currentState)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(currentState)-  1;	  return    setupStART_BLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
105	[BUG]  [BUGGY]  return  setupBlk();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlk();	  return    setupStandardBlk();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
106	[BUG]  [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
107	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
108	[BUG]  [BUGGY]  switch(this.currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(this.currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(this.currentState)  {  case  EOF:  return  setupRandBLOCK_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
109	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE()  +  1;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
110	[BUG]  [BUGGY]  case  EOF:  return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  EOF:  return  setupRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  EOF:  return  setupRandBLOCK_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
111	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE().intValue();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE().intValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE().intValue();	  return    setupStART_BLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
112	[BUG]  [BUGGY]  return  setupStart_BLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStart_BLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStart_BLOCK_STATE();	  return    setupStART_BLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
113	[BUG]  [BUGGY]  return  setupSTRING_BLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTRING_BLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTRING_BLOCK_STATE();	  return    setupStART_BLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
114	[BUG]  [BUGGY]  ||  currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||  currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||  currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
115	[BUG]  [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  NO_RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  NO_RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  NO_RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
116	[BUG]  [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState  ==  NO_RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState  ==  NO_RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||(currentState  ==  START_BLOCK_STATE  &&  currentState  ==  NO_RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
117	[BUG]  [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
118	[BUG]  [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState  ==  RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState  ==  RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||(currentState  ==  START_BLOCK_STATE  &&  currentState  ==  RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
119	[BUG]  [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  RAND_PART_A_STATE))  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
120	[BUG]  [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  NO_RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  NO_RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||(currentState  ==  START_BLOCK_STATE  &&  currentState!=  NO_RAND_PART_C_STATE))  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
121	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartC();	  switch(currentState)    {    case    RAND_PART_A_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
122	[BUG]  [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandPartB();	  switch(currentState)    {    case    RAND_PART_A_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
123	[BUG]  [BUGGY]  return  setupStepBLOCK(STRING_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(STRING_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(STRING_BLOCK_STATE);	  return    setupStepBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
124	[BUG]  [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(START_BLOCK_STATE,  START_BLOCK_STATE);	  return    setupStepBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
125	[BUG]  [BUGGY]  return  setupStepBLOCK(EOF);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(EOF);	  return    setupStepBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
126	[BUG]  [BUGGY]  return  setupRandBLOCK(STRING_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(STRING_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(STRING_BLOCK_STATE);	  return    setupRandBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
127	[BUG]  [BUGGY]  return  setupRandBLOCK(EOF);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(EOF);	  return    setupRandBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
128	[BUG]  [BUGGY]  return  setupRandBLOCK(NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(NO_RAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(NO_RAND_PART_A_STATE);	  return    setupRandBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
129	[BUG]  [BUGGY]  return  setupRandBLOCK(TRINT_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(TRINT_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(TRINT_BLOCK_STATE);	  return    setupRandBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
130	[BUG]  [BUGGY]  return  setupRandPartB()  &  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartB()  &  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB()  &  START_BLOCK_STATE;	  return    setupSize100k()    &    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
131	[BUG]  [BUGGY]  return  setupRandPartC()  &  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartC()  &  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartC()  &  START_BLOCK_STATE;	  return    setupSize100k()    &    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
132	[BUG]  [BUGGY]  return  setupSize100k()  -  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  -  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  -  START_BLOCK_STATE;	  return    setupSize100k()    &    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
133	[BUG]  [BUGGY]  return  setupSize100k()  &  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  &  NO_RAND_PART_A_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  &  NO_RAND_PART_A_STATE;	  return    setupSize100k()    &    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
134	[BUG]  [BUGGY]  return  setupBlockB(currentState);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(currentState);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
135	[BUG]  [BUGGY]  return  setupBlockB(0,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB(0,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(0,  START_BLOCK_STATE);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
136	[BUG]  [BUGGY]  return  setupSize100k(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(START_BLOCK_STATE);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
137	[BUG]  [BUGGY]  return  setupBlockB(EOF);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB(EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(EOF);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
138	[BUG]  [BUGGY]  return  setupBlockB(START_BLOCK_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB(START_BLOCK_STATE,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(START_BLOCK_STATE,  START_BLOCK_STATE);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
139	[BUG]  [BUGGY]  return  setupRandBLOCK(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(currentState,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(currentState,  START_BLOCK_STATE);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
140	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(no_RAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(no_RAND_PART_A_STATE);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
141	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(no_rAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(no_rAND_PART_A_STATE);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
142	[BUG]  [BUGGY]  return  setupBlockBlank()  &  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBlank()  &  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBlank()  &  START_BLOCK_STATE;	  return    setupBlockBlank();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
143	[BUG]  [BUGGY]  return  setupStandardBlockBlank();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockBlank();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockBlank();	  return    setupBlockBlank();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
144	[BUG]  [BUGGY]  return  setupBlockBLOCK(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBLOCK(START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK(START_BLOCK_STATE);	  return    setupBlockBLOCK();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
145	[BUG]  [BUGGY]  return  setupStandardBlockBLOCK();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockBLOCK();	  return    setupBlockBLOCK();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
146	[BUG]  [BUGGY]  return  setupStartBlock();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStartBlock();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartBlock();	  return    setupStartBLOCK();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
147	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  return  setupRandBLOCK_STATE();  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  return  setupRandBLOCK_STATE();  }	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
148	[BUG]  [BUGGY]  ||  currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  ||  currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	||  currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
149	[BUG]  [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	while(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
150	[BUG]  [BUGGY]  int  currentState  =  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  int  currentState  =  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	int  currentState  =  START_BLOCK_STATE;	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
151	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_C_STATE)  {  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  if(currentState  ==  NO_RAND_PART_C_STATE)  {  return  setupRandBLOCK_STATE();  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	if(currentState  ==  NO_RAND_PART_C_STATE)  {  return  setupRandBLOCK_STATE();  }	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
152	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(EOF);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(EOF);	  return    setupRandBLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
153	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(currentState,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(currentState,  START_BLOCK_STATE);	  return    setupRandBLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
154	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(0,  currentState);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(0,  currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(0,  currentState);	  return    setupRandBLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
155	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartC();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartC();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
156	[BUG]  [BUGGY]  return  setupStandardBlockBLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockBLOCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockBLOCK_STATE(currentState);	  return    setupStandardBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
157	[BUG]  [BUGGY]  return  setupStandardBlockBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockBLOCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockBLOCK_STATE()  -  1;	  return    setupStandardBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
158	[BUG]  [BUGGY]  return  setupSize100k(currentState,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState,  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState,  START_BLOCK_STATE);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
159	[BUG]  [BUGGY]  return  setupBlockBLOCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBLOCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK_STATE(currentState);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
160	[BUG]  [BUGGY]  return  setupSize100k(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(this.blockSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(this.blockSize100k);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
161	[BUG]  [BUGGY]  return  setupSizeBlock_STATE();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBlock_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlock_STATE();	  return    setupSizeBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
162	[BUG]  [BUGGY]  return  setupSizeBLOCK(currentState);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBLOCK(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBLOCK(currentState);	  return    setupSizeBLOCK();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
163	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandB();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandB();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
164	[BUG]  [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandB();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
165	[BUG]  [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(this.currentState)  {  case  START_BLOCK_STATE:  return  setupRandB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandB();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
166	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandB();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandB();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
167	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_PART_A_STATE:  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_PART_A_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_PART_A_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
168	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
169	[BUG]  [BUGGY]  switch(currentState)  {  case  NO_RAND_PART_A_STATE:  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  NO_RAND_PART_A_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  NO_RAND_PART_A_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
170	[BUG]  [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(this.currentState)  {  case  START_BLOCK_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(this.currentState)  {  case  START_BLOCK_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
171	[BUG]  [BUGGY]  switch(currentState)  {  case  ROUTE_BLOCK_STATE:  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  ROUTE_BLOCK_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  ROUTE_BLOCK_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
172	[BUG]  [BUGGY]  return  setupStandardBLOCK_STATE(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK_STATE(no_RAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK_STATE(no_RAND_PART_A_STATE);	  return    setupStandardBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
173	[BUG]  [BUGGY]  return  setupStandardBLOCK_STATE(no_RAND_PART_A_STATE)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK_STATE(no_RAND_PART_A_STATE)+  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK_STATE(no_RAND_PART_A_STATE)+  1;	  return    setupStandardBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
174	[BUG]  [BUGGY]  return  setupRandPartB().length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartB().length  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB().length  -  1;	  return    setupSize100k()    -    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
175	[BUG]  [BUGGY]  return  setupRandBoCK_STATE()  /  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBoCK_STATE()  /  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBoCK_STATE()  /  START_BLOCK_STATE;	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
176	[BUG]  [BUGGY]  return  setupStandardBoCK_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBoCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBoCK_STATE();	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
177	[BUG]  [BUGGY]  return  setupRandBoCK_STATE()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBoCK_STATE()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBoCK_STATE()  +  1;	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
178	[BUG]  [BUGGY]  return  setupRandBoCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBoCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBoCK_STATE()  -  1;	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
179	[BUG]  [BUGGY]  return  setupRandBoCK_STATE(currentState);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBoCK_STATE(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBoCK_STATE(currentState);	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
180	[BUG]  [BUGGY]  return  setupBlockBoCK_STATE();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBoCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBoCK_STATE();	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
181	[BUG]  [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(START_BLOCK_STATE)-  1;	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
182	[BUG]  [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE());  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(START_BLOCK_STATE());	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
183	[BUG]  [BUGGY]  switch(currentState  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState  &  START_BLOCK_STATE)  {  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState  &  START_BLOCK_STATE)  {	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
184	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_PART_B_STATE:  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_PART_B_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_PART_B_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
185	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_PART_C_STATE:  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_PART_C_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_PART_C_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
186	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(this.blockSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(this.blockSize100k);	  return    setupRandBLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
187	[BUG]  [BUGGY]  return  setupBlockBLOCK()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBLOCK()  &  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK()  &  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
188	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE()  &  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE()  &  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
189	[BUG]  [BUGGY]  return  setupRandBLOCK()  &  blockSize100k;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK()  &  blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK()  &  blockSize100k;	  return    setupSize100k()    &    blockSize100k;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
190	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(null);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(null);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
191	[BUG]  [BUGGY]  return  setupSTART_BLOCK_STATE(EOF);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTART_BLOCK_STATE(EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTART_BLOCK_STATE(EOF);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
192	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(currentState  -  1);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
193	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(currentState  +  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(currentState  +  1);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
194	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  }	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
195	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  break;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  break;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBLOCK_STATE();  break;	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
196	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_B_STATE)  {  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  if(currentState  ==  NO_RAND_PART_B_STATE)  {  return  setupRandBLOCK_STATE();  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	if(currentState  ==  NO_RAND_PART_B_STATE)  {  return  setupRandBLOCK_STATE();  }	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
197	[BUG]  [BUGGY]  return  setupRandBLOCK(EOF_ROOT_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(EOF_ROOT_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(EOF_ROOT_BLOCK_STATE);	  return    setupRandBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
198	[BUG]  [BUGGY]  return  setupStartB();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartB();	  return    setupStartBLOCK();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
199	[BUG]  [BUGGY]  return  setupSTART_BLOCK();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTART_BLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTART_BLOCK();	  return    setupStartBLOCK();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
200	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
201	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupStandardB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupStandardB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupStandardB();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
202	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartB()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartB()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandPartB()  +  1;	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
203	[BUG]  [BUGGY]  Case  START_BLOCK_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Case  START_BLOCK_STATE:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Case  START_BLOCK_STATE:  return  setupRandPartB();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
204	[BUG]  [BUGGY]  return  setupStdBoCK_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStdBoCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStdBoCK_STATE();	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
205	[BUG]  [BUGGY]  return  setupSandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSandBLOCK_STATE();	  return    setupStARTBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
206	[BUG]  [BUGGY]  return  setupStepBLOCK(EOF_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(EOF_RAND_PART_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(EOF_RAND_PART_A_STATE);	  return    setupStepBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
207	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBoCK_STATE();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandBoCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandBoCK_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
208	[BUG]  [BUGGY]  return  setupSize100k()  |  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  |  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  |  START_BLOCK_STATE;	  return    setupSize100k()    &    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
209	[BUG]  [BUGGY]  return  setupStandardBlockB()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockB()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB()  +  1;	  return    setupStandardBlockB();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
210	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandB();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandB();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandB();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
211	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandB()  +  1;	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandB();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
212	[BUG]  [BUGGY]  return  setupSizeBlk();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlk();	  return    setupSizeBLOCK();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
213	[BUG]  [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(START_BLOCK_STATE)+  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(START_BLOCK_STATE)+  1;	  return    setupStepBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
214	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE().intValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE().intValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE().intValue();	  return    setupStepBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
215	[BUG]  [BUGGY]  return  setupSTARTBLOCK();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTARTBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTARTBLOCK();	  return    setupStandardBLOCK();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
216	[BUG]  [BUGGY]  return  setupSize100k(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState  -  1);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
217	[BUG]  [BUGGY]  return  setupSize100k(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState  +  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState  +  1);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
218	[BUG]  [BUGGY]  return  setupSize100k(blockSize100k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(blockSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(blockSize100k);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
219	[BUG]  [BUGGY]  return  setupStandardBLOCK(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK(currentState  -  1);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
220	[BUG]  [BUGGY]  return  setupStandardBLOCK(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK(currentState  +  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK(currentState  +  1);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
221	[BUG]  [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  RAND_BLOCK_STATE:  return  setupRandPartA();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandPartA();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
222	[BUG]  [BUGGY]  return  setupStepBlockB();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockB();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
223	[BUG]  [BUGGY]  return  setupStepBlockB2();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockB2();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockB2();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
224	[BUG]  [BUGGY]  return  setupStepBlockBt();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockBt();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBt();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
225	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().intValue()  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().intValue()  +  1;	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
226	[BUG]  [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  if(currentState  ==  NO_RAND_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	if(currentState  ==  NO_RAND_PART_A_STATE)  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
227	[BUG]  [BUGGY]  return  setupRandBLOCK(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(currentState  -  1);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
228	[BUG]  [BUGGY]  return  setupRandBLOCK(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(currentState  +  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(currentState  +  1);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
229	[BUG]  [BUGGY]  return  setupSTART_BLOCK(currentState);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTART_BLOCK(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTART_BLOCK(currentState);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
230	[BUG]  [BUGGY]  return  setupStandardBlockB_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockB_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB_STATE();	  return    setupStandardBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
231	[BUG]  [BUGGY]  return  setupStandardBlockBlk();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockBlk();	  return    setupStandardBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
232	[BUG]  [BUGGY]  return  setupStandardBlockB2();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockB2();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB2();	  return    setupStandardBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
233	[BUG]  [BUGGY]  return  setupStandardBlockB(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockB(START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB(START_BLOCK_STATE);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
234	[BUG]  [BUGGY]  return  setupStepBLOCK(currentState  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(currentState  -  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(currentState  -  1);	  return    setupStepBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
235	[BUG]  [BUGGY]  return  setupStepBLOCK(currentState  &  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(currentState  &  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(currentState  &  START_BLOCK_STATE);	  return    setupStepBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
236	[BUG]  [BUGGY]  return  setupStepBLOCK(currentState  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(currentState  +  1);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(currentState  +  1);	  return    setupStepBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
237	[BUG]  [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  EOF:  return  setupRandBLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
238	[BUG]  [BUGGY]  return  setupStateBlockBlock();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStateBlockBlock();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStateBlockBlock();	  return    setupBlockBlock();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
239	[BUG]  [BUGGY]  return  setupSize200k();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize200k();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize200k();	  return    setupSize100k()    -    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
240	[BUG]  [BUGGY]  return  setupSize100k()  /  RAND_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  /  RAND_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  /  RAND_BLOCK_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
241	[BUG]  [BUGGY]  return  setupSize100k()  /  START_BLOCK_STATE  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  /  START_BLOCK_STATE  +  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  /  START_BLOCK_STATE  +  1;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
242	[BUG]  [BUGGY]  return  setupSize100k()  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  /  2;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  /  2;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
243	[BUG]  [BUGGY]  return  setupSTRandBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSTRandBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSTRandBLOCK_STATE();	  return    setupSTRINGBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
244	[BUG]  [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBlock();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBlock();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  START_BLOCK_STATE:  return  setupRandBlock();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
245	[BUG]  [BUGGY]  return  setupStandardBlak();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlak();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlak();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
246	[BUG]  [BUGGY]  return  setupStandardBlCK();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlCK();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
247	[BUG]  [BUGGY]  return  setupStepB();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepB();	  return    setupStepBLOCK();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
248	[BUG]  [BUGGY]  return  setupRandBlockB2();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockB2();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockB2();	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
249	[BUG]  [BUGGY]  return  setupStatistics()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatistics()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics()  -  1;	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
250	[BUG]  [BUGGY]  return  setupBlockStatistics();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockStatistics();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockStatistics();	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
251	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  EOF_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  EOF_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  EOF_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
252	[BUG]  [BUGGY]  return  setupState();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupState();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupState();	  return    setupBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
253	[BUG]  [BUGGY]  return  setupStringBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStringBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStringBLOCK_STATE();	  return    setupSTRINGBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
254	[BUG]  [BUGGY]  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartA();	  return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
255	[BUG]  [BUGGY]  return  setupRandPartB2();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandPartB2();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandPartB2();	  return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
256	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPart_B_STATE();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPart_B_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandPart_B_STATE();	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
257	[BUG]  [BUGGY]  return  setupStandardBlank()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlank()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlank()  -  1;	  return    setupStandardBlank();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
258	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartS();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupRandPartS();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  START_BLOCK_STATE:  return  setupRandPartS();	  case    START_BLOCK_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
259	[BUG]  [BUGGY]  return  setupStandardBlockB()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockB()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB()  -  1;	  return    setupStandardBlockB();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
260	[BUG]  [BUGGY]  return  setupStandardBlockB().length;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlockB().length;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlockB().length;	  return    setupStandardBlockB();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
261	[BUG]  [BUGGY]  return  setupStatisticsBlock();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatisticsBlock();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatisticsBlock();	  return    setupBlockBlank();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
262	[BUG]  [BUGGY]  return  setupStandardBLOCK_STATE().intValue();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK_STATE().intValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK_STATE().intValue();	  return    setupStandardBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
263	[BUG]  [BUGGY]  Return  setupStandardBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Return  setupStandardBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Return  setupStandardBLOCK_STATE();	  return    setupStandardBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
264	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE(null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE(null);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE(null);	  return    setupRandBLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
265	[BUG]  [BUGGY]  return  setupBlockB3();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB3();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB3();	  return    setupBlockB2();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
266	[BUG]  [BUGGY]  return  setupBlockBL();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBL();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBL();	  return    setupBlockB2();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
267	[BUG]  [BUGGY]  return  setupRandBLOCK_STATE().intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK_STATE().intValue()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK_STATE().intValue()  -  1;	  return    setupRandBLOCK_STATE().intValue();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
268	[BUG]  [BUGGY]  return  setupStandardBLOCK(currentState  &  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBLOCK(currentState  &  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBLOCK(currentState  &  START_BLOCK_STATE);	  return    setupStandardBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
269	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE(stackSize100k)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE(stackSize100k)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE(stackSize100k)-  1;	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
270	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE().length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE().length  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE().length  -  1;	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
271	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE(stackToUnseq)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE(stackToUnseq)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE(stackToUnseq)-  1;	  return    setupStepBLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
272	[BUG]  [BUGGY]  return  setupStandardBlk_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlk_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlk_STATE();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
273	[BUG]  [BUGGY]  return  setupStandardBlack_STATE();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlack_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlack_STATE();	  return    setupStandardBlCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
274	[BUG]  [BUGGY]  return  setupStepBLOCK_STATE().cloneTree();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK_STATE().cloneTree();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK_STATE().cloneTree();	  return    setupStepBLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
275	[BUG]  [BUGGY]  return  setupSizeBlockBLOCK_STATE();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBlockBLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlockBLOCK_STATE();	  return    setupSizeBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
276	[BUG]  [BUGGY]  return  setupSizeBlockB();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSizeBlockB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSizeBlockB();	  return    setupSizeBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
277	[BUG]  [BUGGY]  return  setupRandBLOCK(currentState  &  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(currentState  &  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(currentState  &  START_BLOCK_STATE);	  return    setupRandBLOCK(currentState);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
278	[BUG]  [BUGGY]  return  setupStartBLOCK(currentState);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStartBLOCK(currentState);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartBLOCK(currentState);	  return    setupStartBLOCK();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
279	[BUG]  [BUGGY]  return  setupStART_BLOCK();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK();	  return    setupStartBLOCK();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
280	[BUG]  [BUGGY]  return  setupStepBlockBoCK_STATE();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockBoCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBoCK_STATE();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
281	[BUG]  [BUGGY]  return  setupStepBlockB_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockB_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockB_STATE();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
282	[BUG]  [BUGGY]  return  setupStepBlockBlk();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlockBlk();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlockBlk();	  return    setupStepBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
283	[BUG]  [BUGGY]  return  setupRandBLOCK(rand_part_A_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(rand_part_A_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(rand_part_A_STATE);	  return    setupRandBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
284	[BUG]  [BUGGY]  return  setupStepBlock().blockSize100k;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBlock().blockSize100k;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBlock().blockSize100k;	  return    setupStepBlock();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
285	[BUG]  [BUGGY]  return  setupBlockBt();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBt();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBt();	  return    setupBlockBlock();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
286	[BUG]  [BUGGY]  return  setupStARTBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStARTBLOCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStARTBLOCK_STATE()  -  1;	  return    setupStARTBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
287	[BUG]  [BUGGY]  return  setupStepBLOCK(seqToUnseq);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(seqToUnseq);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(seqToUnseq);	  return    setupStepBLOCK();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
288	[BUG]  [BUGGY]  return  setupStepBLOCK(stackSize100k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(stackSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(stackSize100k);	  return    setupStepBLOCK();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
289	[BUG]  [BUGGY]  return  setupStepBLOCK(true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(true);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(true);	  return    setupStepBLOCK();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
290	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF_BLOCK_STATE:  return  setupRandBLOCK();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF_BLOCK_STATE:  return  setupRandBLOCK();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF_BLOCK_STATE:  return  setupRandBLOCK();	  switch(currentState)    {    case    START_BLOCK_STATE:    return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
291	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(currentState,  EOF);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(currentState,  EOF);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(currentState,  EOF);	  return    setupStART_BLOCK_STATE(currentState);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
292	[BUG]  [BUGGY]  Switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  EOF:  return  START_BLOCK_STATE;	  switch(currentState)    {    case    EOF:    return    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
293	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE(no_RAND_PART_A_STATE)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE(no_RAND_PART_A_STATE)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE(no_RAND_PART_A_STATE)-  1;	  return    setupStART_BLOCK_STATE()    -    1;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
294	[BUG]  [BUGGY]  return  setupStART_BLOCK_STATE();  case  START_BLOCK_STATE:  return  setupStART_BLOCK_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStART_BLOCK_STATE();  case  START_BLOCK_STATE:  return  setupStART_BLOCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStART_BLOCK_STATE();  case  START_BLOCK_STATE:  return  setupStART_BLOCK_STATE();	  return    setupStART_BLOCK_STATE()    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
295	[BUG]  [BUGGY]  return  setupSize100k(currentState)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState)-  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState)-  1;	  return    setupSize100k()    -    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
296	[BUG]  [BUGGY]  return  setupBlockBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockBLOCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockBLOCK_STATE()  -  1;	  return    setupSize100k()    -    1;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
297	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPart_B_STATE;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPart_B_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandPart_B_STATE;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
298	[BUG]  [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPart_A_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  switch(currentState)  {  case  EOF:  return  setupRandPart_A_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	switch(currentState)  {  case  EOF:  return  setupRandPart_A_STATE;	  switch(currentState)    {    case    EOF:    return    setupRandBLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
299	[BUG]  [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	while(currentState  ==  START_BLOCK_STATE)  {  return  setupRandBLOCK_STATE();  }	  if(currentState    ==    START_BLOCK_STATE)    {    return    setupRandBLOCK_STATE();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
300	[BUG]  [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandPartA();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  EOF:  return  setupRandPartA();	  switch(currentState)    {    case    EOF:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
301	[BUG]  [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  EOF:  return  setupRandPartC();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  EOF:  return  setupRandPartC();	  switch(currentState)    {    case    EOF:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
302	[BUG]  [BUGGY]  Switch(currentState)  {  case  RAND_PART_A_STATE:  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  RAND_PART_A_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  RAND_PART_A_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
303	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  RAND_PART_A_STATE:	  switch(currentState)    {    case    START_BLOCK_STATE:    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
304	[BUG]  [BUGGY]  return  setupStatistics(),  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatistics(),  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics(),  START_BLOCK_STATE);	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
305	[BUG]  [BUGGY]  return  setupStatistics()  &&  currentState  ==  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStatistics()  &&  currentState  ==  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStatistics()  &&  currentState  ==  START_BLOCK_STATE;	  return    setupStatistics();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
306	[BUG]  [BUGGY]  return  setupRandBoCK_STATE().intValue();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBoCK_STATE().intValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBoCK_STATE().intValue();	  return    setupRandBoCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
307	[BUG]  [BUGGY]  return  setupStandardBlk()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStandardBlk()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStandardBlk()  -  1;	  return    setupStandardBlk();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
308	[BUG]  [BUGGY]  return  setupSize100k(currentState  &  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState  &  START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState  &  START_BLOCK_STATE);	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
309	[BUG]  [BUGGY]  return  setupSize100k(currentState)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k(currentState)+  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k(currentState)+  1;	  return    setupSize100k(currentState);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
310	[BUG]  [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	while(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  }	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
311	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	throw  new  IllegalStateException( " ");	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
312	[BUG]  [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	while(currentState  ==  START_BLOCK_STATE)  {  throw  new  IllegalStateException( " ");	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
313	[BUG]  [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  currentState  =  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  while(currentState  ==  START_BLOCK_STATE)  {  currentState  =  START_BLOCK_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	while(currentState  ==  START_BLOCK_STATE)  {  currentState  =  START_BLOCK_STATE;	  if(currentState    ==    START_BLOCK_STATE)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
314	[BUG]  [BUGGY]  return  setupRandBLOCK(stackSize100k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCK(stackSize100k);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCK(stackSize100k);	  return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
315	[BUG]  [BUGGY]  return  setupRandBLOCKS();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBLOCKS();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBLOCKS();	  return    setupRandBLOCK();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
316	[BUG]  [BUGGY]  return  setupStartBLOCK_STATE().intValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStartBLOCK_STATE().intValue();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartBLOCK_STATE().intValue();	  return    setupStartBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
317	[BUG]  [BUGGY]  return  setupStartBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStartBLOCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStartBLOCK_STATE()  -  1;	  return    setupStartBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
318	[BUG]  [BUGGY]  return  setupBlockB(STRING_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB(STRING_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(STRING_BLOCK_STATE);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
319	[BUG]  [BUGGY]  return  setupBlockB(OSG_START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupBlockB(OSG_START_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupBlockB(OSG_START_BLOCK_STATE);	  return    setupBlockB(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
320	[BUG]  [BUGGY]  Switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  Switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	Switch(currentState)  {  case  RAND_PART_A_STATE:  return  setupRandPartB();	  switch(currentState)    {    case    RAND_PART_A_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
321	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartB();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	case  RAND_PART_A_STATE:  return  setupRandPartB();	  switch(currentState)    {    case    RAND_PART_A_STATE:    return    setupRandPartB();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
322	[BUG]  [BUGGY]  return  setupStepBLOCK(ROOT_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(ROOT_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(ROOT_BLOCK_STATE);	  return    setupStepBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
323	[BUG]  [BUGGY]  return  setupStepBLOCK(TRINT_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupStepBLOCK(TRINT_BLOCK_STATE);  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupStepBLOCK(TRINT_BLOCK_STATE);	  return    setupStepBLOCK(START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
324	[BUG]  [BUGGY]  return  setupSize100k()  /  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupSize100k()  /  RAND_PART_A_STATE;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupSize100k()  /  RAND_PART_A_STATE;	  return    setupSize100k()    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
325	[BUG]  [BUGGY]  return  setupRandBlockBoCK_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockBoCK_STATE();  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockBoCK_STATE();	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
326	[BUG]  [BUGGY]  return  setupRandBlockBLOCK_STATE()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {  switch  (currentState)  {  case  EOF:  return  -1;  case  START_BLOCK_STATE:      [BUGGY]  return  setupRandBlockBLOCK_STATE()  -  1;  [BUGGY]        case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	202	202	1	replace	return  setupRandBlockBLOCK_STATE()  -  1;	  return    setupRandBlockBLOCK_STATE();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
