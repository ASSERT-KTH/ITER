bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  6;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  6;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  6;	  this.blockSize100k    =    blockSize    /    3;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  1;	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  +  '9';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  +  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  blockSize  +  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  +  '0'  +  blockSize  +  '9';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  +  '0'  +  blockSize  +  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  +  '0'  +  blockSize  +  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  2;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  2;	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
6	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  blockSize  +  '9';  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  blockSize  +  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  *  '0'  +  blockSize  +  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
7	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  4;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  4;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  +  4;	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  <  =  '9';  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  <  =  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  <  =  '9';	  this.blockSize100k    =    blockSize    -    '0'    &&    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  >=  '9';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  >=  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  >=  '9';	  this.blockSize100k    =    blockSize    -    '0'    &&    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  &&  blockSize  >  '9';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  &&  blockSize  >  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  &&  blockSize  >  '9';	  this.blockSize100k    =    blockSize    -    '0'    &&    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  ==  '9';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  ==  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  ==  '9';	  this.blockSize100k    =    blockSize    -    '0'    &&    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize!=  '9';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize!=  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  &&  blockSize!=  '9';	  this.blockSize100k    =    blockSize    -    '0'    &&    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  4;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  4;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  4;	  this.blockSize100k    =    blockSize    /    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
14	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  8;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  8;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  8;	  this.blockSize100k    =    blockSize    /    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
15	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  *  '0'  +  1;	  this.blockSize100k    =    blockSize    /    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
16	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  *  1  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  *  1  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  *  1  +  1;	  this.blockSize100k    =    blockSize    /    '0'    +    1;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
17	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  8  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  8  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  8  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
18	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  +  '0';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
19	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  4  +  '0';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  4  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  4  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
20	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  2  +  '0';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  2  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  2  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
21	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  100k  +  '0';  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  100k  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  100k  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
22	[BUG]  [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	While(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
23	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
24	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
25	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  is  not  in  the  BZip2  format ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
26	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.in.read());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.in.read());  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.in.read());	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
27	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.in);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.in);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.in);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
28	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in,  blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in,  blockSize);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
29	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize100k);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize100k);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
30	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  blockSize);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
31	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.in,  0,  temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.in,  0,  temp_charArray2d,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.in,  blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.in,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2d,  0,  this.in,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.in,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.in,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2d,  0,  this.in,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2,  0,  this.in,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2,  0,  this.in,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2,  0,  this.in,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(this.in,  0,  this.temp_charArray2,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.in,  0,  this.temp_charArray2,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.in,  0,  this.temp_charArray2,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
38	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  10;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  10;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  10;	  this.blockSize100k    =    blockSize    /    '0'    +    2;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
39	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  6;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  6;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  6;	  this.blockSize100k    =    blockSize    /    '0'    +    2;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
40	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_BLOCK_STATE;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  RAND_BLOCK_STATE;	  this.blockSize100k    =    blockSize    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
41	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_PART_C_STATE;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_PART_C_STATE;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  RAND_PART_C_STATE;	  this.blockSize100k    =    blockSize    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
42	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_PART_A_STATE;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  RAND_PART_A_STATE;	  this.blockSize100k    =    blockSize    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
43	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_PART_B_STATE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_PART_B_STATE;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  RAND_PART_B_STATE;	  this.blockSize100k    =    blockSize    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
44	[BUG]  [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Thread.currentThread().interrupt();	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ",  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ",  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ",  blockSize);  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	While(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
52	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
53	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
54	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  2)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
56	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.close();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
58	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.skipBlock();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.skipBlock();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  this.in.skipBlock();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
59	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.available();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.available();  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.available();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
60	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  throw  new  IOException( " ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  throw  new  IOException( " ");  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
61	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  4  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  4  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  4  +  1;	  this.blockSize100k    =    blockSize    /    4;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  3;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  3;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  3;	  this.blockSize100k    =    blockSize    -    '0'    +    3;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
64	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
69	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	for(int  i  =  0,  len  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
71	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  1,  len  =  this.in.read();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
72	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  length;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blocksSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blocksSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.read();  i  <  blocksSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
74	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  *  '9';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  *  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  *  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  >  '9';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  >  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  blockSize  >  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  +  '0'  +  blockSize  >  '9';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  +  '0'  +  blockSize  >  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  +  '0'  +  blockSize  >  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  blockSize  >  '9';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  blockSize  >  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  *  '0'  +  blockSize  >  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  <  '9';  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  <  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  <  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  /  '9';  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  /  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  /  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
80	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(blockSize);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
81	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize100k);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(this.blockSize100k);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
82	[BUG]  [BUGGY]  byte  bsBuff  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  byte  bsBuff  =  this.in.read();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	byte  bsBuff  =  this.in.read();	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(blockSize100k);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(blockSize100k);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(blockSize100k);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
84	[BUG]  [BUGGY]  int  bsBuff  =  this.in.readShort();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.readShort();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.readShort();	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
85	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(this.bsBuff);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(this.bsBuff);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
86	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  80.0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  80.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  80.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  90.0;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  90.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  90.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  40.0;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  40.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  40.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
89	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  20.0;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  20.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  20.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  70.0;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  70.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  70.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  50.0;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  50.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  50.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
97	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
98	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
99	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
100	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  +  '0'  +  blockSize  -  '9';  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  +  '0'  +  blockSize  -  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  +  '0'  +  blockSize  -  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    -    '9';    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
101	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  +  blockSize  -  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  +  blockSize  -  1;	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    -    '9';    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
102	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  -  '9';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  -  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  blockSize  -  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    -    '9';    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
103	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  blockSize  -  '9';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  *  '0'  +  blockSize  -  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  *  '0'  +  blockSize  -  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    -    '9';    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
104	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_xy(blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_xy(blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_xy(blockSize);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
105	[BUG]  [BUGGY]  int  bsLive  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsLive  =  getAndMoveToFrontDecode_yy();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsLive  =  getAndMoveToFrontDecode_yy();	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
106	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode();	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
107	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  *  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  *  2;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  *  2;	  this.blockSize100k    =    blockSize    -    '0'    *    2;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
108	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  4;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  4;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  *  4;	  this.blockSize100k    =    blockSize    -    '0'    *    2;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
109	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  8;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  8;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  *  8;	  this.blockSize100k    =    blockSize    -    '0'    *    2;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
110	[BUG]  [BUGGY]  this.in.read(blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.read(blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.read(blockSize);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
111	[BUG]  [BUGGY]  this.in.read(this.bsBuff,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.read(this.bsBuff,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.read(this.bsBuff,  blockSize);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
112	[BUG]  [BUGGY]  this.in.close();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.close();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.close();	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
113	[BUG]  [BUGGY]  this.in.write(blockSize,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.write(blockSize,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.write(blockSize,  0,  blockSize);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
114	[BUG]  [BUGGY]  this.in.read(this.data);  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.read(this.data);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.read(this.data);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
115	[BUG]  [BUGGY]  this.in.read(this.bsBuff);  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.read(this.bsBuff);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.read(this.bsBuff);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
116	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
117	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
118	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
119	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  this.in.read();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  this.in.read();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  this.in.read();	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  <  '9';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  <  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  <  '9';	  this.blockSize100k    =    blockSize    -    '0'    ||    blockSize    <    '9';    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
122	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  ||  blockSize  <  =  '9';  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  ||  blockSize  <  =  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  ||  blockSize  <  =  '9';	  this.blockSize100k    =    blockSize    -    '0'    ||    blockSize    <    '9';    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
123	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  <  '9';  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  <  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  <  '9';	  this.blockSize100k    =    blockSize    -    '0'    ||    blockSize    <    '9';    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
124	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  2  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  2  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  2  +  1;	  this.blockSize100k    =    blockSize    /    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
125	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  5;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  5;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  5;	  this.blockSize100k    =    blockSize    -    6;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
126	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  %  '0'  ||  blockSize  >  '9';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  %  '0'  ||  blockSize  >  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  %  '0'  ||  blockSize  >  '9';	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
127	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  /  '9';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  blockSize  /  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  blockSize  /  '9';	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
128	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +(blockSize  >  '9'?  blockSize  :  '0');  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +(blockSize  >  '9'?  blockSize  :  '0');  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +(blockSize  >  '9'?  blockSize  :  '0');	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
129	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  1024L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  1024L;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  1024L;	  this.blockSize100k    =    blockSize    /    1024;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
130	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  1000;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  1000;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  1000;	  this.blockSize100k    =    blockSize    /    1024;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
131	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  1024  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  1024  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  1024  +  1;	  this.blockSize100k    =    blockSize    /    1024;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  blockSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  for(int  i  =  0;  i  <  blockSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  blockSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
133	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  blocksize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  blocksize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  blocksize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
134	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.blockSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.blockSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.blockSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
136	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
137	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.data,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(this.data,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(this.data,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
138	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
139	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  isFirstStream);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  isFirstStream);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  isFirstStream);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  temp_charArray2d);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  temp_charArray2d);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
142	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  this.in.read());  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  this.in.read());  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  0,  this.in.read());	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
144	[BUG]  [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
145	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  1L;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  1L;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  1L;	  this.blockSize100k    =    blockSize    -    1L;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
146	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  1B;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  1B;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  1B;	  this.blockSize100k    =    blockSize    -    1L;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  blockSize;  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  for(int  i  =  0;  i  <  blockSize;  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  blockSize;  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
148	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
149	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  this.in.close();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  this.in.close();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  i++)  {  this.in.close();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
150	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  blocksize;  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  blocksize;  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  blocksize;  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
151	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  blockedSize;  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  blockedSize;  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  blockedSize;  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
152	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  this.in  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  this.in  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  this.in  =  this.in.read();  i  <  blockSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
153	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
154	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray1d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray1d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray1d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
155	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  >>  '9';  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  >>  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  &&  blockSize  >>  '9';	  this.blockSize100k    =    blockSize    -    '0'    &&    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
156	[BUG]  [BUGGY]  int  bsLive  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsLive  =  this.in.read();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsLive  =  this.in.read();	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
157	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1;  i  <  blockSize;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1;  i  <  blockSize;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  1;  i  <  blockSize;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
158	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  10000.0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  10000.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  10000.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
159	[BUG]  [BUGGY]  wires.add( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  wires.add( "BZip2  block  size  is  invalid ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	wires.add( "BZip2  block  size  is  invalid ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
160	[BUG]  [BUGGY]  nisipToJava2D(blockSize,  this.in.read(),  blockSize))  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  nisipToJava2D(blockSize,  this.in.read(),  blockSize))  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	nisipToJava2D(blockSize,  this.in.read(),  blockSize))  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
161	[BUG]  [BUGGY]  nisipToJava2D(blockSize,  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  nisipToJava2D(blockSize,  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	nisipToJava2D(blockSize,  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
162	[BUG]  [BUGGY]  nisipToJava2D(blockSize)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  nisipToJava2D(blockSize)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	nisipToJava2D(blockSize)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
163	[BUG]  [BUGGY]  nisipToJava2D(blockSize,  this.in.read(),  blockSize))  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  nisipToJava2D(blockSize,  this.in.read(),  blockSize))  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	nisipToJava2D(blockSize,  this.in.read(),  blockSize))  {  throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
164	[BUG]  [BUGGY]  nisipToJava2D(blockSize,  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  nisipToJava2D(blockSize,  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	nisipToJava2D(blockSize,  this.in.read())  {  throw  new  IOException( "BZip2  block  size  is  invalid ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
165	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.in,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.in,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.in,  blockSize);  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
166	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.in,  this.in.read());  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.in,  this.in.read());  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.in.read();  ++i)  {  System.arraycopy(this.in,  0,  this.in,  this.in.read());  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
167	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.out.read();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.out.read();  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.out.read();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    this.in.read();    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
168	[BUG]  [BUGGY]  this.in  =  this.in.read();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in  =  this.in.read();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in  =  this.in.read();	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
169	[BUG]  [BUGGY]  this.in.setLength(0);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.setLength(0);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.setLength(0);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
170	[BUG]  [BUGGY]  this.in.skip();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.skip();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.skip();	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
171	[BUG]  [BUGGY]  this.in.write(blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.write(blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.write(blockSize);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
172	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
173	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '1'  +  blockSize  -  '9';  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '1'  +  blockSize  -  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '1'  +  blockSize  -  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    -    '9';    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
174	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  *  10  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  *  10  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  *  10  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
175	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  7  +  '0';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  7  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  7  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2,  0,  this.temp_charArray2d,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2,  0,  this.temp_charArray2d,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2,  0,  this.temp_charArray2d,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.temp_charArray2d,  blockSize);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.temp_charArray2d,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2d,  0,  this.temp_charArray2d,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
181	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  blockSize  =  this.in.read();  i  <  blockSize;  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  blockSize  =  this.in.read();  i  <  blockSize;  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  blockSize  =  this.in.read();  i  <  blockSize;  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
182	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.blockSize;  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.blockSize;  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0;  i  <  this.blockSize;  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
183	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '1'  +  blockSize  +  '9';  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '1'  +  blockSize  +  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '1'  +  blockSize  +  '9';	  this.blockSize100k    =    blockSize    -    '0'    +    blockSize    +    '9';    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
184	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  10  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  10  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  10  +  1;	  this.blockSize100k    =    blockSize    /    10;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
185	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
186	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
187	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  <  =  '9';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  <  =  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  <  =  '9';	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
188	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  >=  '9';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  >=  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  ||  blockSize  >=  '9';	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
189	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +(blockSize  >  '9');  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +(blockSize  >  '9');  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +(blockSize  >  '9');	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
190	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
191	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  blockSize,  temp_charArray2d);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  blockSize,  temp_charArray2d);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  blockSize,  temp_charArray2d);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
193	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  *  START_BLOCK_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  *  START_BLOCK_STATE;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  *  START_BLOCK_STATE;	  this.blockSize100k    =    blockSize    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
194	[BUG]  [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy(blockSize):  getAndMoveToFrontDecode_yy(blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy(blockSize):  getAndMoveToFrontDecode_yy(blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy(blockSize):  getAndMoveToFrontDecode_yy(blockSize);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
195	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize  +  1);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize  +  1);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
196	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  1);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  1);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
197	[BUG]  [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy(blockSize):  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy(blockSize):  getAndMoveToFrontDecode_yy;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy(blockSize):  getAndMoveToFrontDecode_yy;	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
198	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
199	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  this.bsLive,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  this.bsLive,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  this.bsLive,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  1,  blockSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  1,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  1,  blockSize);	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
201	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
202	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  this.in.read())  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
203	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
204	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
205	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
206	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
207	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  /  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  /  2;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  /  2;	  this.blockSize100k    =    blockSize    -    '0'    *    2;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
208	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  2  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  2  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  *  2  +  1;	  this.blockSize100k    =    blockSize    -    '0'    *    2;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
209	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  safeThan  <  =  false)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	safeThan  <  =  false)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
210	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  1)  {  throw  new  IOException( "BZip2  block  size  is  invalid.   ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
211	[BUG]  [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  getAndMoveToFrontDecode_yy();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  getAndMoveToFrontDecode_yy();	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
212	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_int();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_int();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_int();	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
213	[BUG]  [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  getAndMoveToFrontDecode_yy;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  getAndMoveToFrontDecode_yy;	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
214	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_peek();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_peek();  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_peek();	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
215	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  8  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  8  +  1;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  8  +  1;	  this.blockSize100k    =    blockSize    /    8;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
216	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(this.blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(this.blockSize);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
217	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.charArray2d);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(this.charArray2d);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(this.charArray2d);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
218	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.bytes);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(this.bytes);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(this.bytes);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
219	[BUG]  [BUGGY]  int  bsBuff  =  this.in.read(this.buffer);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  int  bsBuff  =  this.in.read(this.buffer);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	int  bsBuff  =  this.in.read(this.buffer);	  int    bsBuff    =    this.in.read();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
220	[BUG]  [BUGGY]  if(isFirstStream  &&  isFirstStream)  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream  &&  isFirstStream)  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream  &&  isFirstStream)  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
221	[BUG]  [BUGGY]  if(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
222	[BUG]  [BUGGY]  while(isFirstStream  &&  isFirstStream)  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  isFirstStream)  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  isFirstStream)  {  throw  new  IOException( "BZip2  format  is  not  in  the  BZip2  format ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
223	[BUG]  [BUGGY]  while(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream)  {  throw  new  IOException( "Stream  is  not  in  the  BZip2  format   ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
224	[BUG]  [BUGGY]  aughtException( "BZip2  is  not  in  the  BZip2  format ");  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  aughtException( "BZip2  is  not  in  the  BZip2  format ");  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	aughtException( "BZip2  is  not  in  the  BZip2  format ");	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    is    not    in    the    BZip2    format   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
225	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
226	[BUG]  [BUGGY]  if(!isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(!isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(!isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
227	[BUG]  [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
228	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  blockSize  =  this.in.read();  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  blockSize  =  this.in.read();  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  blockSize  =  this.in.read();  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
229	[BUG]  [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  blockSize100k;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  blockSize100k;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  isFirstStream?  getAndMoveToFrontDecode_yy()  :  blockSize100k;	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
230	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in.read());  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in.read());  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.in.read());	  Integer    bsLive    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
231	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.data.length,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  System.arraycopy(this.temp_charArray2d,  0,  this.data.length,  0,  blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	System.arraycopy(this.temp_charArray2d,  0,  this.data.length,  0,  blockSize);	  System.arraycopy(this.in,    0,    this.temp_charArray2d,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
233	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1;  i  <  blockSize;  i++)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  1;  i  <  blockSize;  i++)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  1;  i  <  blockSize;  i++)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0;    i    <    blockSize;    i++)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
234	[BUG]  [BUGGY]  if(this.in!=  null)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
235	[BUG]  [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
236	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  this.blockSize,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  this.blockSize,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  this.blockSize,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
237	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  100000;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  100000;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  100000;	  this.blockSize100k    =    blockSize    /    1024;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
238	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  ||  blockSize  >=  '9';  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  ||  blockSize  >=  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  ||  blockSize  >=  '9';	  this.blockSize100k    =    blockSize    -    '0'    ||    blockSize    <    '9';    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
239	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  9  +  '0';  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  9  +  '0';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  9  +  '0';	  this.blockSize100k    =    blockSize    /    10    +    '0';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
240	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.computedCombinedCRC);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.computedCombinedCRC);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.computedCombinedCRC);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
241	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.blockSize);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.blockSize);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(this.blockSize);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
242	[BUG]  [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.computedCRC);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.computedCRC);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	Integer  bsLive  =  getAndMoveToFrontDecode_yy(blockSize,  this.computedCRC);	  Integer    bsLive    =    getAndMoveToFrontDecode_yy(blockSize);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
243	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  3;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  -  '0'  *  3;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  -  '0'  *  3;	  this.blockSize100k    =    blockSize    -    '0'    +    3;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
244	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  1000.0;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  1000.0;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  1000.0;	  this.blockSize100k    =    blockSize    /    100.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
245	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  2  +  '0'  ||  blockSize  >  '9';  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  2  +  '0'  ||  blockSize  >  '9';  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  2  +  '0'  ||  blockSize  >  '9';	  this.blockSize100k    =    blockSize    /    '0'    ||    blockSize    >    '9';    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
246	[BUG]  [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.in,  blockSize);  }  else  {  System.arraycopy(temp_charArray2,  0,  this.in,  temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2,    0,    this.in,    temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
247	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  9;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  '0'  +  9;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  '0'  +  9;	  this.blockSize100k    =    blockSize    /    '0'    +    2;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
248	[BUG]  [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  temp_charArray2d,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  this.in.read();  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    temp_charArray2d,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
249	[BUG]  [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_BLOCK_C_STATE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.blockSize100k  =  blockSize  /  RAND_BLOCK_C_STATE;  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.blockSize100k  =  blockSize  /  RAND_BLOCK_C_STATE;	  this.blockSize100k    =    blockSize    /    START_BLOCK_STATE;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
250	[BUG]  [BUGGY]  this.in.read(this.seqToUnseq);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.read(this.seqToUnseq);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.read(this.seqToUnseq);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
251	[BUG]  [BUGGY]  this.in.read(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  this.in.read(this.blockSize100k);  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	this.in.read(this.blockSize100k);	  this.in.read();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
252	[BUG]  [BUGGY]  while(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
253	[BUG]  [BUGGY]  parent  ==  null  ||  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  parent  ==  null  ||  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	parent  ==  null  ||  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
254	[BUG]  [BUGGY]  parent  ==  null  &&  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  parent  ==  null  &&  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	parent  ==  null  &&  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
255	[BUG]  [BUGGY]  while(!isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(!isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(!isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid. ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid.   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
256	[BUG]  [BUGGY]  parent  ==  null  ||  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  parent  ==  null  ||  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	parent  ==  null  ||  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
257	[BUG]  [BUGGY]  parent  ==  null  &&  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  parent  ==  null  &&  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	parent  ==  null  &&  isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
258	[BUG]  [BUGGY]  while(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
259	[BUG]  [BUGGY]  while(!isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(!isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(!isFirstStream)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
260	[BUG]  [BUGGY]  while(isFirstStream  &&  blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  while(isFirstStream  &&  blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	while(isFirstStream  &&  blockSize  <  =  0)  {  throw  new  IOException( "BZip2  block  size  is  invalid ");  }	  if(isFirstStream)    {    throw    new    IOException(   "BZip2    block    size    is    invalid   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
261	[BUG]  [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.available();  i  <  len;  ++i)  {  this.in.read();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.available();  i  <  len;  ++i)  {  this.in.read();  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  for(int  i  =  0,  len  =  this.in.available();  i  <  len;  ++i)  {  this.in.read();  }	  if(this.in!=    null)    {    for(int    i    =    0,    len    =    this.in.read();    i    <    len;    ++i)    {    this.in.read();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
262	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
263	[BUG]  [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(isFirstStream  ||  isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  else  {  System.arraycopy(temp_charArray2d,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
264	[BUG]  [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      throw  new  IOException(isFirstStream  ?       "Stream  is  not  in  the  BZip2  format     "  :       "Garbage  after  a  valid  BZip2  stream     ");  }  int  blockSize  =  this.in.read();  if  ((blockSize  <  '1')  ||  (blockSize  >  '9'))  {  throw  new  IOException(     "BZip2  block  size  is  invalid     ");  }      [BUGGY]  if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }  [BUGGY]        this.bsLive  =  0;  this.computedCombinedCRC  =  0;  return  true;  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  init  [RETURN_TYPE]  boolean  boolean  isFirstStream  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  magic0  magic1  magic2  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  isFirstStream  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	250	250	1	replace	if(this.in!=  null)  {  if(isFirstStream)  {  System.arraycopy(temp_charArray2d,  0,  this.data,  0,  blockSize);  }	  if(isFirstStream)    {    System.arraycopy(temp_charArray2d,    0,    this.data,    0,    blockSize);    }    else    {    System.arraycopy(temp_charArray2d,    0,    blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
