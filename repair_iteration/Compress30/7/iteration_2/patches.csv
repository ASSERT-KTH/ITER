bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  0,  len);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offs,  0,  len);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(cftab,  offs,  dest,  0,  len  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  offs,  dest,  0,  len  +  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  offs,  dest,  0,  len  +  1);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(cftab,  offsets,  dest,  0,  len);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  offsets,  dest,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  offsets,  dest,  0,  len);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(cftab,  offs,  n,  dest,  0,  len);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  offs,  n,  dest,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  offs,  n,  dest,  0,  len);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(cftab,  offs,  dest,  0,  len  -  offs);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  offs,  dest,  0,  len  -  offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  offs,  dest,  0,  len  -  offs);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
6	[BUG]  [BUGGY]  aughtException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
7	[BUG]  [BUGGY]  aughtException( "len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
8	[BUG]  [BUGGY]  safeAdd(destOffs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeAdd(destOffs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeAdd(destOffs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
9	[BUG]  [BUGGY]  aughtables.add(dest.length,  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtables.add(dest.length,  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtables.add(dest.length,  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
10	[BUG]  [BUGGY]  if(offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len)  {	  if(offs    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  if(offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  0)  {	  if(offs    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
12	[BUG]  [BUGGY]  if(offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len)  {	  if(offs    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
13	[BUG]  [BUGGY]  if(offs  <  offs)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs)  {	  if(offs    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  0,  offs);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  0,  offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  0,  offs);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(data,  0,  dest,  0,  len);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(data,  0,  dest,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(data,  0,  dest,  0,  len);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  0,  len  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  0,  len  +  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  0,  len  +  1);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  0,  len  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  0,  len  -  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  0,  len  -  1);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  0,  len);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  0,  len);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  0,  len);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offs,  0,  len);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
20	[BUG]  [BUGGY]  if(offs!=  null  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  len  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
21	[BUG]  [BUGGY]  if(offs!=  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  offs  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
22	[BUG]  [BUGGY]  if(offs!=  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  offs  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
23	[BUG]  [BUGGY]  if(destOffs  ==  offs  &&  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  &&  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  &&  this.in!=  null)  {	  if(this.in!=    null    &&    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
24	[BUG]  [BUGGY]  if(destOffs!=  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs!=  null  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs!=  null  ||  this.in  ==  null)  {	  if(this.in!=    null    &&    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  len  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  len  +  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  destOffs,  offs,  len  +  1);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(data,  0,  destOffs,  offs,  len);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(data,  0,  destOffs,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(data,  0,  destOffs,  offs,  len);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  len,  cftab);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  len,  cftab);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  destOffs,  offs,  len,  cftab);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  nInUse);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  nInUse);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  destOffs,  offs,  nInUse);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  len  -  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  len  -  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  destOffs,  offs,  len  -  1);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offsets,  len);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offsets,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  destOffs,  offsets,  len);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
38	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  len)  {	  if(destOffs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
39	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs!=  0)  {	  if(destOffs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
40	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  >=  0)  {	  if(destOffs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
41	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(destOffs    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
42	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  ==  null)  {	  if(destOffs    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  destOffs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  destOffs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  destOffs  ==  null)  {	  if(destOffs    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
44	[BUG]  [BUGGY]  if(destOffs  ==  offs  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  ||  this.in  ==  null)  {	  if(destOffs    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
45	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  offs  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
46	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  <  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  <  len  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
47	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  >  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  >  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  >  len  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
48	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  dest.length  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  dest.length  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  dest.length  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
49	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  len  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  len  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  len  ||  len  >  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
50	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  len  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  len  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  len  ||  len  >=  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
51	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  0)  {	  if(this.in    ==    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs  <  0)  {	  if(this.in    ==    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  >  dest.length)  {	  if(len    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
55	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  >  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  >  destOffs)  {	  if(len    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
56	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  len)  {	  if(len    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
57	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  len)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  len)  {	  if(len    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
58	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  <  len)  {	  if(len    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
59	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  dest.length)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
60	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  >=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  >=  dest.length)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
61	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  destOffs)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  destOffs)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
62	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  >  offs)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  >  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  >  offs)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
63	[BUG]  [BUGGY]  if(offs  ==  0  ||  len!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len!=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len!=  dest.length)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
64	[BUG]  [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
65	[BUG]  [BUGGY]  safeThan  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThan  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThan  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len  +  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offs,  len  +  1);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len,  cftab);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len,  cftab);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offs,  len,  cftab);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(data,  0,  dest,  offs,  len);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(data,  0,  dest,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(data,  0,  dest,  offs,  len);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offsets,  len);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offsets,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offsets,  len);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len  -  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offs,  len  -  1);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  len,  0);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offs,  len,  0);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
72	[BUG]  [BUGGY]  if(this.in!=  null  ||  offs  <  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  offs  <  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  offs  <  0  ||  len  >=  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
73	[BUG]  [BUGGY]  if(this.in!=  null  ||  offs  <  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  offs  <  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  offs  <  0  ||  len  ==  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
74	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  0  ||  len  >  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
75	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  0  ||  offs  >  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  len  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  len  +  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offs,  len  +  1);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offsets,  len);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offsets,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offsets,  len);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  len  -  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  len  -  1);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offs,  len  -  1);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  unzftab,  offs,  len);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  unzftab,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  unzftab,  offs,  len);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  n);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  n);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offs,  n);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
81	[BUG]  [BUGGY]  if(len  ==  destOffs)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  destOffs)  {	  if(destOffs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
82	[BUG]  [BUGGY]  if(destOffs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  len)  {	  if(destOffs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
83	[BUG]  [BUGGY]  if(len  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  dest.length)  {	  if(destOffs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
84	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  ==  0)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
85	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  ==  0)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
86	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in!=  null)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
87	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  ==  0)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
93	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  0  ||  offs  >=  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
94	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  destOffs  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  destOffs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  0  ||  destOffs  <  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
95	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  0  ||  offs  <  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
96	[BUG]  [BUGGY]  if(offs  ==  offs  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  this.in!=  null)  {	  if(data    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
97	[BUG]  [BUGGY]  if(in  ==  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(in  ==  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(in  ==  null  ||  this.in!=  null)  {	  if(data    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
98	[BUG]  [BUGGY]  if(data!=  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(data!=  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(data!=  null  ||  this.in!=  null)  {	  if(data    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
99	[BUG]  [BUGGY]  if(data  ==  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(data  ==  null  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(data  ==  null  ||  this.in  ==  null)  {	  if(data    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
100	[BUG]  [BUGGY]  if(len  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  >  0)  {	  if(destOffs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
101	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
102	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  offs!=  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
103	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in!=  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
104	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  len!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  len!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  len!=  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
105	[BUG]  [BUGGY]  if(destOffs  >=  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  0  ||  this.in!=  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
106	[BUG]  [BUGGY]  if(destOffs  <  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  this.in!=  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
107	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  0  ||  offs  <  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
108	[BUG]  [BUGGY]  if(offs  ==  destOffs)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  destOffs)  {	  if(destOffs    ==    offs)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
109	[BUG]  [BUGGY]  if(destOffs  ==  offs  +  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  +  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  +  len)  {	  if(destOffs    ==    offs)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
110	[BUG]  [BUGGY]  if(destOffs  <  offs)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  offs)  {	  if(destOffs    ==    offs)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
111	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
112	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  offs.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  offs.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
113	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
114	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs.length  <  len)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs.length  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs.length  <  len)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
115	[BUG]  [BUGGY]  if(destOffs  ==  offs  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  ||  len  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
116	[BUG]  [BUGGY]  if(offs!=  0  ||  this.in!=  null  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  this.in!=  null  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  this.in!=  null  ||  offs  <  0)  {	  if(this.in!=    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
117	[BUG]  [BUGGY]  if(offs!=  null  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  offs  <  0)  {	  if(this.in!=    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
118	[BUG]  [BUGGY]  if(offs!=  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  len  <  0)  {	  if(this.in!=    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
119	[BUG]  [BUGGY]  if(destOffs  >=  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  0  ||  len  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
120	[BUG]  [BUGGY]  if(len  >=  0  ||  destOffs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  >=  0  ||  destOffs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  >=  0  ||  destOffs  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
121	[BUG]  [BUGGY]  if(offs  >=  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  0  ||  len  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
122	[BUG]  [BUGGY]  if(destOffs  ==  offs  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  ||  len  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
123	[BUG]  [BUGGY]  if(len!=  0  ||  destOffs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  destOffs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  destOffs  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
124	[BUG]  [BUGGY]  if(offs!=  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  len  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
125	[BUG]  [BUGGY]  if(offs  ==  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  this.in!=  null)  {	  if(this.in    ==    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
126	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs!=  null)  {	  if(this.in    ==    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
127	[BUG]  [BUGGY]  if(offs  ==  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  this.in  ==  null)  {	  if(this.in    ==    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
128	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  ==  null)  {	  if(this.in    ==    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
129	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs!=  null)  {	  if(this.in    ==    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
130	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs  ==  null)  {	  if(this.in    ==    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
131	[BUG]  [BUGGY]  if(in  ==  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(in  ==  null  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(in  ==  null  ||  this.in  ==  null)  {	  if(this.in    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
138	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  destOffs)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  destOffs)  {	  if(this.in    ==    null    ||    len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
139	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in  ==  null  ||  len  <  offs)  {	  if(this.in    ==    null    ||    len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
140	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null  ||  len  <  offs)  {	  if(this.in    ==    null    ||    len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
141	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
142	[BUG]  [BUGGY]  if(in  ==  null  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(in  ==  null  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(in  ==  null  ||  offs  <  0)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
143	[BUG]  [BUGGY]  if(data  ==  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(data  ==  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(data  ==  null  ||  len  <  0)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
144	[BUG]  [BUGGY]  if(len  ==  0  ||  in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  in  ==  null)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
145	[BUG]  [BUGGY]  if(in  ==  null  ||  len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(in  ==  null  ||  len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(in  ==  null  ||  len  <  =  0)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
146	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  <  0)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
147	[BUG]  [BUGGY]  if(offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  0)  {	  if(destOffs    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
148	[BUG]  [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  dest.length;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  dest.length;  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  dest.length;  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
149	[BUG]  [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  dest.length;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  dest.length;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")  <  dest.length;	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
150	[BUG]  [BUGGY]  aughtException( "len( "  +  offs  + ")  <  dest.length;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len( "  +  offs  + ")  <  dest.length;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len( "  +  offs  + ")  <  dest.length;	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
151	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >=  len)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
152	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null  ||  offs  >=  len)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
153	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  >=  offs)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  >=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  >=  offs)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
154	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs  >=  len)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
155	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs!=  0)  {	  if(this.in    ==    null    ||    len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
156	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  <  0  ||  offs  >  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
157	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  <  0  ||  len  <  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
158	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
159	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  0  ||  offs  <  0  ||  len  <  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
160	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  0  ||  offs  >  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
161	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs.length  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs.length  ==  0)  {	  if(destOffs    ==    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
162	[BUG]  [BUGGY]  if(offs  ==  null  ||  destOffs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  destOffs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  destOffs  ==  null)  {	  if(destOffs    ==    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
163	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  =  dest.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  =  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  =  dest.length)  {	  if(destOffs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
164	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  destOffs  <  len)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  destOffs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  destOffs  <  len)  {	  if(destOffs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
165	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  >=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  >=  dest.length)  {	  if(destOffs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
166	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  dest.length)  {	  if(destOffs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
167	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in  ==  null  ||  len  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
168	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in  ==  null  ||  offs  >=  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
169	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in  ==  null  ||  offs!=  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
170	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  len)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
171	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in  ==  null  ||  offs  <  dest.length)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
172	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  ==  offs)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  ==  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  ==  offs)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
173	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
174	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
175	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  ==  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  ==  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  ==  dest.length)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
176	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
177	[BUG]  [BUGGY]  if(destOffs  ==  offs  &&  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  &&  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  &&  len  <  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
178	[BUG]  [BUGGY]  if(destOffs  ==  offs  ||  len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  ||  len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  ||  len  <  =  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
179	[BUG]  [BUGGY]  if(len  ==  offs  ||  destOffs  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  offs  ||  destOffs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  offs  ||  destOffs  <  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
180	[BUG]  [BUGGY]  if(offs  ==  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  len  <  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
181	[BUG]  [BUGGY]  if(destOffs  ==  offs  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  ||  len  >=  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
182	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  0  ||  offs  >  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
183	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  destOffs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  destOffs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  0  ||  destOffs  >  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
184	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  this.in)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
185	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  >  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
186	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  =  this.in)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  =  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  =  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
187	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  >=  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  >=  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  >=  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
188	[BUG]  [BUGGY]  if(offs  ==  null  ||  len!=  this.in)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len!=  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len!=  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
189	[BUG]  [BUGGY]  if(len  ==  null  ||  offs  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  null  ||  offs  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  null  ||  offs  >  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
190	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >  dest.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
191	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  <  len)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
192	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  <  dest.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
193	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >=  dest.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
194	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >  destOffs)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
195	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >  destOffs.length)  {  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >  destOffs.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >  destOffs.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
196	[BUG]  [BUGGY]  if(len  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  0)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
197	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  >  nInUse)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  offs  >  nInUse)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  offs  >  nInUse)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
198	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  offs  >  len)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
199	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  <  0)  {	  if(offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
200	[BUG]  [BUGGY]  if(len  ==  0  ||  destOffs  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  destOffs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  destOffs  ==  0)  {	  if(destOffs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
201	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  ==  0)  {	  if(destOffs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
202	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  len  <  0)  {	  if(destOffs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_char  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_char  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_char	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
209	[BUG]  [BUGGY]  if(offs  ==  null  ||  len!=  offs)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len!=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len!=  offs)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
210	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs!=  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs!=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null  ||  offs!=  len)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
211	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs!=  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs!=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs!=  len)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
212	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs!=  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs!=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs!=  len)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
213	[BUG]  [BUGGY]  if(offs  ==  null  ||  len!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len!=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len!=  dest.length)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
214	[BUG]  [BUGGY]  if(offs!=  len  ||  this.in!=  null  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  ||  this.in!=  null  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  ||  this.in!=  null  ||  offs  <  len)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
215	[BUG]  [BUGGY]  if(offs!=  len  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  ||  offs  <  len)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
216	[BUG]  [BUGGY]  if(offs!=  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  len  <  dest.length)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
217	[BUG]  [BUGGY]  if(offs!=  null  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  offs  <  len)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
218	[BUG]  [BUGGY]  int  nInUse  =  read0().length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read0().length;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read0().length;	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
219	[BUG]  [BUGGY]  int  nInUse  =  read0().intValue();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read0().intValue();  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read0().intValue();	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
220	[BUG]  [BUGGY]  int  nInUse  =  read1();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read1();  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read1();	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
221	[BUG]  [BUGGY]  int  nInUse  =  read0()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read0()  +  1;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read0()  +  1;	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
222	[BUG]  [BUGGY]  int  nInUse  =  read0()  +  offs;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read0()  +  offs;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read0()  +  offs;	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
223	[BUG]  [BUGGY]  int  nInUse  =  read(0);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read(0);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read(0);	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
224	[BUG]  [BUGGY]  if(destOffs  ==  null  &&  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  &&  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  &&  this.in!=  null)  {	  if(this.in!=    null    &&    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
225	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  ==  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
226	[BUG]  [BUGGY]  if(offs  <  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  ==  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
227	[BUG]  [BUGGY]  if(offs  <  len  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  len  ==  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
228	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  ==  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
229	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
230	[BUG]  [BUGGY]  if(destOffs  <  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  offs  >  len)  {	  if(destOffs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
231	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  0  ||  offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  0  ||  offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  0  ||  offs  >=  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
232	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  0  ||  offs  <  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
233	[BUG]  [BUGGY]  if(offs  ==  null  ||  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  offs  <  0  ||  len  <  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
234	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  len  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  len  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  len  ||  offs  <  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
235	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  1  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  1  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  1  ||  offs  <  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
236	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  ==  len)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
237	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  =  0)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
238	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  >=  0)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
239	[BUG]  [BUGGY]  if(offs!=  null  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  len  <  0  ||  offs  >  0)  {	  if(this.in!=    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
240	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  0  ||  offs  >=  0)  {	  if(this.in!=    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
241	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  =  0)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
242	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  >=  0)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
243	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len!=  0)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
244	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs.length  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs.length  >  0)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
245	[BUG]  [BUGGY]  if(len  <  destOffs)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  destOffs)  {	  if(destOffs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
246	[BUG]  [BUGGY]  if(destOffs  >  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >  len)  {	  if(destOffs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
247	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  0  ||  len!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  0  ||  len!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  0  ||  len!=  0)  {	  if(this.in    ==    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
248	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  0  ||  len  >  0)  {	  if(this.in    ==    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
249	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >  offs)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  >  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  >  offs)  {	  if(offs    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
250	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  >=  len)  {	  if(offs    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
251	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  offs)  {	  if(offs    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
252	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  0  ||  offs  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
253	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  >  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
254	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  >=  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
255	[BUG]  [BUGGY]  if(offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  len  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
256	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
257	[BUG]  [BUGGY]  aughtException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
258	[BUG]  [BUGGY]  aughtException( "dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
259	[BUG]  [BUGGY]  fenders.add(dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ").   ");  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  fenders.add(dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ").   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	fenders.add(dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ").   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
260	[BUG]  [BUGGY]  aughtException( "len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   "). ");  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   "). ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len( "  +  len  +   ")>  dest.length( "  +  dest.length  +   "). ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
261	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  >=  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  >=  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  >=  0  ||  len  >=  0)  {	  if(this.in    ==    null    ||    offs    <    0    ||    len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
262	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  0  ||  len  >=  0)  {	  if(this.in    ==    null    ||    offs    <    0    ||    len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
265	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in  ==  null  ||  len  <  =  0)  {	  if(this.in    ==    null    ||    len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
266	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  =  0)  {	  if(this.in    ==    null    ||    len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
267	[BUG]  [BUGGY]  int  len  =  read0()  -  offs;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read0()  -  offs;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read0()  -  offs;	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
268	[BUG]  [BUGGY]  int  len  =  read0().length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read0().length;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read0().length;	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
269	[BUG]  [BUGGY]  int  len  =  read0()  &  0xff;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read0()  &  0xff;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read0()  &  0xff;	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
270	[BUG]  [BUGGY]  int  len  =  read0()  +  offs;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read0()  +  offs;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read0()  +  offs;	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
271	[BUG]  [BUGGY]  int  len  =  read0()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read0()  -  1;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read0()  -  1;	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
272	[BUG]  [BUGGY]  int  len  =  read0()  &  0xFFFF;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read0()  &  0xFFFF;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read0()  &  0xFFFF;	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
273	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
274	[BUG]  [BUGGY]  if(len  ==  offs  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  offs  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  offs  ||  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
275	[BUG]  [BUGGY]  if(offs  ==  len  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
276	[BUG]  [BUGGY]  if(offs  <  len  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
277	[BUG]  [BUGGY]  if(offs  <  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  this.in  ==  null)  {	  if(offs    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
278	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  ==  null)  {	  if(offs    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
279	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  this.in  ==  null)  {	  if(offs    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
280	[BUG]  [BUGGY]  if(offs  >=  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  0  ||  this.in  ==  null)  {	  if(offs    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
281	[BUG]  [BUGGY]  aughtException( "Len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "Len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "Len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(offs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
282	[BUG]  [BUGGY]  aughtException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
283	[BUG]  [BUGGY]  aughtException( "dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
284	[BUG]  [BUGGY]  aughtException( "Offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "Offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "Offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
285	[BUG]  [BUGGY]  aughtException( "Dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "Dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "Dest.length( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
286	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >  0)  {	  if(offs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
287	[BUG]  [BUGGY]  if(len!=  0  ||  this.in!=  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  this.in!=  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  this.in!=  null  ||  len  <  0)  {	  if(this.in!=    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
288	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in!=  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in!=  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in!=  null  ||  len  <  0)  {	  if(this.in!=    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
289	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  =  0)  {	  if(this.in!=    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
290	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
291	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
292	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  >=  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  >=  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  >=  0  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
293	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  >  0  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
294	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  >  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  >  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  >  0  ||  offs  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
295	[BUG]  [BUGGY]  if(offs!=  len  ||  this.in!=  null  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  ||  this.in!=  null  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  ||  this.in!=  null  ||  offs  >  len)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
296	[BUG]  [BUGGY]  if(offs!=  null  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  len  >  this.in)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
297	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  >  len)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
298	[BUG]  [BUGGY]  if(offs!=  len  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  ||  offs  >  len)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
299	[BUG]  [BUGGY]  if(offs!=  offs  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs  ||  len  >  this.in)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
300	[BUG]  [BUGGY]  if(offs!=  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  this.in!=  null)  {	  if(this.in!=    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
301	[BUG]  [BUGGY]  if(offs!=  null  ||  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  offs!=  null)  {	  if(this.in!=    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
302	[BUG]  [BUGGY]  if(destOffs!=  null  ||  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs!=  null  ||  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs!=  null  ||  offs!=  null)  {	  if(this.in!=    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
303	[BUG]  [BUGGY]  if(offs  >=  destOffs)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  destOffs)  {	  if(destOffs    >=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
304	[BUG]  [BUGGY]  if(offs  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  dest.length)  {	  if(destOffs    >=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
305	[BUG]  [BUGGY]  if(offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  len)  {	  if(destOffs    >=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
306	[BUG]  [BUGGY]  if(destOffs  >  offs)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >  offs)  {	  if(destOffs    >=    offs)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
307	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null  ||  offs  <  len)  {	  if(this.in    ==    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
308	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  dest.length)  {	  if(this.in    ==    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
309	[BUG]  [BUGGY]  if(dest  ==  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(dest  ==  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(dest  ==  null  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
310	[BUG]  [BUGGY]  if(dest  ==  null  ||  len  <  this.in.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(dest  ==  null  ||  len  <  this.in.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(dest  ==  null  ||  len  <  this.in.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
311	[BUG]  [BUGGY]  if(dest!=  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(dest!=  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(dest!=  null  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
312	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
313	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in  ==  null  ||  len  >  0)  {	  if(this.in    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
314	[BUG]  [BUGGY]  while(destOffs  <  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(destOffs  <  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(destOffs  <  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
315	[BUG]  [BUGGY]  while(destOffs  <  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(destOffs  <  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(destOffs  <  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
316	[BUG]  [BUGGY]  while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
317	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
318	[BUG]  [BUGGY]  while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
319	[BUG]  [BUGGY]  while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  len   ");  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  len   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(destOffs  <  len)  {  throw  new  IndexOutOfBoundsException( "len  >  len   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
320	[BUG]  [BUGGY]  aughtException( "len  >  0 ");  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len  >  0 ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len  >  0 ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
321	[BUG]  [BUGGY]  if(len  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  =  0)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
322	[BUG]  [BUGGY]  if(len  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  1)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  1)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
323	[BUG]  [BUGGY]  if(offs  ==  offs)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
324	[BUG]  [BUGGY]  if(offs!=  len  &&  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  &&  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  &&  offs  <  len)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
325	[BUG]  [BUGGY]  if(offs!=  len  &&  this.in!=  null  &&  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  &&  this.in!=  null  &&  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  &&  this.in!=  null  &&  offs  <  len)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
326	[BUG]  [BUGGY]  if(this.in  ==  null  &&  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  &&  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  &&  offs  <  len)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
327	[BUG]  [BUGGY]  if(offs!=  len  &&  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len  &&  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len  &&  offs  <  dest.length)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
328	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  <  dest.length)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
329	[BUG]  [BUGGY]  if(destOffs!=  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs!=  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs!=  null  ||  this.in!=  null)  {	  if(destOffs    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
330	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  destOffs!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  destOffs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  destOffs!=  null)  {	  if(destOffs    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
331	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len!=  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len!=  null)  {	  if(destOffs    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
332	[BUG]  [BUGGY]  if(len  ==  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
333	[BUG]  [BUGGY]  if(len  ==  0  ||  len  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  len  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  len  ==  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
334	[BUG]  [BUGGY]  if(offs  ==  len  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  this.in  ==  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
335	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  1)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  1)  {	  if(destOffs    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
336	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  0  ||  len  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
337	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  0  ||  offs  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  0  ||  offs  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  0  ||  offs  >=  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
338	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  =  offs  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  =  offs  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  =  offs  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
339	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  1  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  1  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  1  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
340	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  len  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  len  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  len  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
341	[BUG]  [BUGGY]  Dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  Dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	Dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
342	[BUG]  [BUGGY]  membres.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  membres.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	membres.length( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
343	[BUG]  [BUGGY]  côte.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  côte.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	côte.length( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
344	[BUG]  [BUGGY]  ||(destOffs  <  0  &&  len  <  dest.length))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  ||(destOffs  <  0  &&  len  <  dest.length))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	||(destOffs  <  0  &&  len  <  dest.length))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
345	[BUG]  [BUGGY]  ||(destOffs  <  0  &&  dest.length()  >  len))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  ||(destOffs  <  0  &&  dest.length()  >  len))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	||(destOffs  <  0  &&  dest.length()  >  len))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
346	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  <  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  <  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  <  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
347	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
348	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  >=  this.in)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  >=  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  >=  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
349	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len!=  this.in)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len!=  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len!=  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
350	[BUG]  [BUGGY]  if(len  ==  offs  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  offs  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  offs  ||  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
351	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  >=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  >=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  >=  dest.length)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
352	[BUG]  [BUGGY]  if(offs!=  null  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  this.in  ==  null)  {	  if(this.in!=    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
353	[BUG]  [BUGGY]  if(offs!=  null  ||  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  offs  ==  null)  {	  if(this.in!=    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
354	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  destOffs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  temp_charArray2.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
357	[BUG]  [BUGGY]  if(offs!=  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  this.in!=  null)  {	  if(this.in!=    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
358	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs!=  null)  {	  if(this.in!=    null    ||    offs!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
359	[BUG]  [BUGGY]  if(len  <  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  0  ||  this.in  ==  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
360	[BUG]  [BUGGY]  if(len  >=  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  >=  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  >=  0  ||  this.in!=  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
361	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  >=  0)  {	  if(destOffs    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
362	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
363	[BUG]  [BUGGY]  if(offs  ==  offs  &&  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  &&  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  &&  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
364	[BUG]  [BUGGY]  if(offs  ==  len  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
365	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  >  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  >  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  >  0  ||  len  >=  0)  {	  if(this.in    ==    null    ||    offs    <    0    ||    len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
366	[BUG]  [BUGGY]  if(len  ==  null  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  null  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  null  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
367	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
368	[BUG]  [BUGGY]  int  len  =  read(0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read(0);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read(0);	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
369	[BUG]  [BUGGY]  int  len  =  read1();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read1();  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read1();	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
370	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  <  0  ||  len  <  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
371	[BUG]  [BUGGY]  if(len!=  0  ||  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  offs  <  0  ||  len  <  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
373	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
374	[BUG]  [BUGGY]  if(offs!=  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  offs  >  len)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
375	[BUG]  [BUGGY]  if(offs!=  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  len)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
376	[BUG]  [BUGGY]  if(len!=  0  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  offs  >  len)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
377	[BUG]  [BUGGY]  if(len!=  null  ||  offs  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  null  ||  offs  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  null  ||  offs  >  this.in)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
378	[BUG]  [BUGGY]  if(len!=  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  this.in!=  null)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
379	[BUG]  [BUGGY]  if(len!=  null  ||  offs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  null  ||  offs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  null  ||  offs  ==  0)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
380	[BUG]  [BUGGY]  if(len!=  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  null  ||  this.in!=  null)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
381	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
382	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
383	[BUG]  [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
384	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
385	[BUG]  [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
386	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
387	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  <  0)  {	  if(this.in!=    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
388	[BUG]  [BUGGY]  if(offs!=  0  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  len  <  0  ||  offs  >  0)  {	  if(this.in!=    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
389	[BUG]  [BUGGY]  if(this.in!=  null  &&  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  len  <  0  ||  offs  >  0)  {	  if(this.in!=    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
390	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  destOffs  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  destOffs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  0  ||  destOffs  >  0)  {	  if(this.in!=    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
391	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThan  <  =  0)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
392	[BUG]  [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
393	[BUG]  [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	nisipIsSurrogate(dest))  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
394	[BUG]  [BUGGY]  if(len!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0)  {	  if(destOffs!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
395	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  offs.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  offs.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  offs.length)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
396	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  0  ||  offs  >  0  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
397	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  <  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
398	[BUG]  [BUGGY]  if(offs  ==  len  ||  offs  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  len  ||  offs  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  len  ||  offs  <  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
399	[BUG]  [BUGGY]  if(offs  <  0  ||  this.in  ==  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  this.in  ==  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  this.in  ==  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
400	[BUG]  [BUGGY]  if(offs  ==  0  ||  this.in!=  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  this.in!=  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  this.in!=  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
401	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  this.in  ==  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  this.in  ==  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  this.in  ==  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
402	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in  ==  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
403	[BUG]  [BUGGY]  if(offs  <  0  ||  this.in!=  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  this.in!=  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  this.in!=  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
404	[BUG]  [BUGGY]  if(offs  ==  offs  &&  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  &&  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  &&  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
405	[BUG]  [BUGGY]  int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
406	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
407	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  this.in)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
408	[BUG]  [BUGGY]  if(len  ==  0  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  len  >  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
409	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  >  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
410	[BUG]  [BUGGY]  if(offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  0  ||  len  <  0)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
411	[BUG]  [BUGGY]  if(offs!=  0  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  offs  <  len)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
412	[BUG]  [BUGGY]  if(offs!=  0  ||  this.in!=  null  ||  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  this.in!=  null  ||  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  this.in!=  null  ||  offs  <  len)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
413	[BUG]  [BUGGY]  if(offs!=  0  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  len  <  offs)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
414	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  dest,  offs,  n);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  dest,  offs,  n);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
415	[BUG]  [BUGGY]  System.arraycopy(data,  0,  dest,  0,  offs);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(data,  0,  dest,  0,  offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(data,  0,  dest,  0,  offs);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
416	[BUG]  [BUGGY]  if(destOffs!=  null  ||  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs!=  null  ||  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs!=  null  ||  offs  ==  null)  {	  if(this.in!=    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
417	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  destOffs  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  destOffs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  destOffs  <  0)  {	  if(destOffs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
418	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  len  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
419	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  offs  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
420	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  <  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  <  len  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
421	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  <  offs)  {	  if(this.in    ==    null    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
422	[BUG]  [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  >  offs)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  this.in  ==  null  ||  len  >  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  this.in  ==  null  ||  len  >  offs)  {	  if(this.in    ==    null    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
423	[BUG]  [BUGGY]  if(this.in!=  null  &&  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  len  <  0)  {	  if(this.in!=    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
424	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  >=  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  >=  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  >=  0  ||  offs  <  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
425	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  len  >=  0)  {	  if(destOffs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
426	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  >=  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  >=  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  >=  0  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
427	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  =  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  =  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  =  0  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
428	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len!=  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len!=  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len!=  0  ||  offs  <  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
429	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  0  ||  offs  >  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
430	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
431	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  >  dest.length)  {	  if(offs    ==    0    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
432	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
433	[BUG]  [BUGGY]  if(offs!=  0  ||  this.in!=  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  ||  this.in!=  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  ||  this.in!=  null  ||  offs  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
434	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
435	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  ==  0)  {	  if(destOffs    ==    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
436	[BUG]  [BUGGY]  if(destOffs  <  0  ||  offs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  offs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  offs  ==  0)  {	  if(destOffs    ==    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
437	[BUG]  [BUGGY]  Vorteil(dest.length)  <  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +   ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  Vorteil(dest.length)  <  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +   ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	Vorteil(dest.length)  <  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +   ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
438	[BUG]  [BUGGY]  Vorteil(dest.length)  <  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +   ")*  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  Vorteil(dest.length)  <  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +   ")*  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	Vorteil(dest.length)  <  0)  {  throw  new  IndexOutOfBoundsException( "offs(   "  +  offs  +   ")>  dest.length( "  +  len  +   ")*  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
439	[BUG]  [BUGGY]  if(destOffs  >=  null  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  null  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  null  ||  this.in!=  null)  {	  if(destOffs    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
440	[BUG]  [BUGGY]  safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
441	[BUG]  [BUGGY]  safeThanIndex(destOffs)>  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(destOffs)>  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(destOffs)>  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
442	[BUG]  [BUGGY]  safeThanIndex(destOffs,  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(destOffs,  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(destOffs,  0)  {  throw  new  IndexOutOfBoundsException( "len  >  0 ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len    >    0   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
443	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  destOffs,  offs,  len);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  destOffs,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  destOffs,  offs,  len);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
444	[BUG]  [BUGGY]  System.arraycopy(data[0],  0,  destOffs,  offs,  len);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(data[0],  0,  destOffs,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(data[0],  0,  destOffs,  offs,  len);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
445	[BUG]  [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  n);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(dest,  0,  destOffs,  offs,  n);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(dest,  0,  destOffs,  offs,  n);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
446	[BUG]  [BUGGY]  if(this.in  ==  null  &&  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  &&  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  &&  this.in!=  null)  {	  if(this.in!=    null    &&    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
447	[BUG]  [BUGGY]  if(destOffs!=  0  &&  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs!=  0  &&  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs!=  0  &&  this.in!=  null)  {	  if(this.in!=    null    &&    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
448	[BUG]  [BUGGY]  if(destOffs  ==  0  &&  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  &&  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  &&  this.in!=  null)  {	  if(this.in!=    null    &&    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
449	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  0,  offs);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  0,  offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  0,  offs);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
450	[BUG]  [BUGGY]  if(in  ==  null  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(in  ==  null  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(in  ==  null  ||  len  >=  0)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
451	[BUG]  [BUGGY]  if(in!=  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(in!=  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(in!=  null  ||  len  <  0)  {	  if(in    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
452	[BUG]  [BUGGY]  if(destOffs  <  0  ||  offs  >  nInUse)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  offs  >  nInUse)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  offs  >  nInUse)  {	  if(destOffs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
453	[BUG]  [BUGGY]  if(offs  ==  null  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  null  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  null  ||  len  <  offs)  {	  if(this.in    ==    null    ||    len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
454	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  offs)  {	  if(this.in    ==    null    ||    len    <    offs)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
455	[BUG]  [BUGGY]  if(destOffs  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  offs  >  0)  {	  if(destOffs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
456	[BUG]  [BUGGY]  if(len!=  0  ||  offs  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  offs  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  offs  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
457	[BUG]  [BUGGY]  if(destOffs  >=  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  0  ||  len  <  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
458	[BUG]  [BUGGY]  if(destOffs  <  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  this.in  ==  null)  {	  if(destOffs    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
459	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  <  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  <  0  ||  len  >  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
460	[BUG]  [BUGGY]  if(this.in!=  null  ||  offs  >  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  offs  >  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  offs  >  0  ||  len  >  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
461	[BUG]  [BUGGY]  if(len!=  0  ||  offs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  ||  offs  <  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  ||  offs  <  0  ||  len  >  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
462	[BUG]  [BUGGY]  if(dest.length  ==  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(dest.length  ==  0  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(dest.length  ==  0  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
463	[BUG]  [BUGGY]  if(dest  <  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(dest  <  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(dest  <  null  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
464	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  len  <  this.in.length)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  len  <  this.in.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  len  <  this.in.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
465	[BUG]  [BUGGY]  if(len!=  0  &&  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len!=  0  &&  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len!=  0  &&  offs  <  len)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
466	[BUG]  [BUGGY]  if(offs!=  0  &&  offs  <  len)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  0  &&  offs  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  0  &&  offs  <  len)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
467	[BUG]  [BUGGY]  if(this.in!=  null  &&  len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  len  <  offs)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
468	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  <  =  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  <  =  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  <  =  len)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
469	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  >  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  >  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  >  0  ||  len  >  0)  {	  if(this.in    ==    null    ||    offs    <    0    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
470	[BUG]  [BUGGY]  nisipIsSurrogate())  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  nisipIsSurrogate())  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	nisipIsSurrogate())  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }	  if(offs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
471	[BUG]  [BUGGY]  nisipIsSurrogate())  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  nisipIsSurrogate())  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	nisipIsSurrogate())  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(offs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
472	[BUG]  [BUGGY]  if(offs  >=  0  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  0  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  0  ||  this.in!=  null)  {	  if(offs    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
473	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  ==  null)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
474	[BUG]  [BUGGY]  if(offs  <  len  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  len  >  0)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
475	[BUG]  [BUGGY]  if(offs  >=  0  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  0  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  0  ||  len  <  0  ||  offs  >  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
476	[BUG]  [BUGGY]  safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
477	[BUG]  [BUGGY]  safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length('  +  dest.length  +   "). ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length('  +  dest.length  +   "). ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(destOffs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length('  +  dest.length  +   "). ");  }	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
478	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
479	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
480	[BUG]  [BUGGY]  safeThanIndex(offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
481	[BUG]  [BUGGY]  safeThanIndex(len)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(len)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(len)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
482	[BUG]  [BUGGY]  safeThanIndex(dest.length)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeThanIndex(dest.length)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeThanIndex(dest.length)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  + ")  <  dest.length;  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
483	[BUG]  [BUGGY]  if(offs  <  len  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  offs  >  len)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
484	[BUG]  [BUGGY]  if(offs  >  len  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  len  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  len  ||  offs  >  len)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
485	[BUG]  [BUGGY]  if(offs  <  len  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  offs  >  dest.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
486	[BUG]  [BUGGY]  if(offs  >=  len  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  len  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  len  ||  offs  >  dest.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
487	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][0];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
488	[BUG]  [BUGGY]  safeMultiply(dest.length  +  offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeMultiply(dest.length  +  offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeMultiply(dest.length  +  offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
489	[BUG]  [BUGGY]  safeMultiply(dest.length  +  offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  safeMultiply(dest.length  +  offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	safeMultiply(dest.length  +  offs)  {  throw  new  IndexOutOfBoundsException( "len(   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
490	[BUG]  [BUGGY]  if(destOffs  <  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  offs  ||  len  <  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
491	[BUG]  [BUGGY]  if(len  ==  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  offs  ||  len  <  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
492	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  len  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  len  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  len  ==  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
493	[BUG]  [BUGGY]  if(destOffs  ==  0  ||  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  0  ||  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  0  ||  offs  ==  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
494	[BUG]  [BUGGY]  int  nInUse  =  read0(offs);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read0(offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read0(offs);	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
495	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  >=  offs)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  >=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  >=  offs)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
496	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  >=  len)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  >=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  >=  len)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
497	[BUG]  [BUGGY]  if(offs  ==  0  ||  offs!=  len)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  offs!=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  offs!=  len)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
498	[BUG]  [BUGGY]  if(offs  ==  0  ||  len!=  offs)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len!=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len!=  offs)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
499	[BUG]  [BUGGY]  if(len  ==  0  ||  offs!=  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs!=  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs!=  len)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
500	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  >  0)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
501	[BUG]  [BUGGY]  if(len  ==  0  ||  destOffs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  destOffs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  destOffs  ==  null)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
502	[BUG]  [BUGGY]  if(offs  >=  offs  ||  len  <  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  offs  ||  len  <  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  offs  ||  len  <  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
503	[BUG]  [BUGGY]  if(offs  <  len  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
504	[BUG]  [BUGGY]  if(offs  ==  offs  +  len  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  +  len  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  +  len  ||  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
505	[BUG]  [BUGGY]  if(offs  ==  offs  +  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  +  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  +  len  >  this.in)  {	  if(offs    ==    offs    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
506	[BUG]  [BUGGY]  if(offs!=  offs  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs  ||  len  <  dest.length)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
507	[BUG]  [BUGGY]  if(offs!=  offs  ||  len  <  destOffs)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs  ||  len  <  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs  ||  len  <  destOffs)  {	  if(this.in!=    null    ||    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
508	[BUG]  [BUGGY]  if(this.in!=  null  &&  this.stream!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  this.stream!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  this.stream!=  null)  {	  if(this.in!=    null    &&    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
509	[BUG]  [BUGGY]  if(offs  <  len  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  len  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  len  ||  offs  >  0)  {	  if(offs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
510	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  [Delete]  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	[Delete]	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
511	[BUG]  [BUGGY]  aughtInvalidIndexException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtInvalidIndexException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtInvalidIndexException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   "). ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +       ").   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
512	[BUG]  [BUGGY]  if(destOffs!=  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs!=  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs!=  null  ||  offs  >  0)  {	  if(this.in!=    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
513	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
514	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
515	[BUG]  [BUGGY]  int  len  =  offs.length;  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  offs.length;  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  offs.length;  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray2,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
516	[BUG]  [BUGGY]  if(len  <  =  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  =  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  =  0  ||  this.in  ==  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
517	[BUG]  [BUGGY]  if(offs  <  0  ||  len  ==  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  ==  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
518	[BUG]  [BUGGY]  if(len  >=  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  >=  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  >=  0  ||  this.in  ==  null)  {	  if(len    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
519	[BUG]  [BUGGY]  if(destOffs  >=  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  null  ||  offs  >  0)  {	  if(destOffs    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
520	[BUG]  [BUGGY]  if(len  ==  offs  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  offs  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  offs  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
521	[BUG]  [BUGGY]  if(this.in!=  null  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
522	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  ==  len)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  ==  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  ==  len)  {	  if(this.in    ==    null    ||    offs    ==    len)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
523	[BUG]  [BUGGY]  if(destOffs  >=  0  ||  this.in  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  0  ||  this.in  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  0  ||  this.in  ==  null)  {	  if(destOffs    ==    0    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
524	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  unzftab  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  unzftab  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  unzftab  ==  null)  {	  if(destOffs    ==    null    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
525	[BUG]  [BUGGY]  int  len  =  read(dest.length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  read(dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  read(dest.length);	  int    len    =    read0();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
526	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
527	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
528	[BUG]  [BUGGY]  if(offs!=  offs)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs)  {	  if(this.in!=    null    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
529	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  <  0  ||  offs  >  0)  {	  if(this.in!=    null    ||    len    <    0    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
530	[BUG]  [BUGGY]  if(offs  <  null  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  null  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  null  ||  len  <  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
531	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  <  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
532	[BUG]  [BUGGY]  if(offs  >=  offs  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  offs  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  offs  ||  len  <  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
533	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  offs  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  <  offs  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  <  offs  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
534	[BUG]  [BUGGY]  aughtInvalidIndexException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtInvalidIndexException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtInvalidIndexException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
535	[BUG]  [BUGGY]  aughtInvalidIndex( "  <   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtInvalidIndex( "  <   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtInvalidIndex( "  <   "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
536	[BUG]  [BUGGY]  aughtInvalidIndex(dest,  offs  +  len)>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtInvalidIndex(dest,  offs  +  len)>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtInvalidIndex(dest,  offs  +  len)>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    dest.length    +       ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
537	[BUG]  [BUGGY]  if(offs  <  0  ||  len  ==  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  ==  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  ==  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
538	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  ==  null  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  offs  ==  null  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  offs  ==  null  ||  len  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
539	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  ==  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  offs  ==  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  offs  ==  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
540	[BUG]  [BUGGY]  if(offs  >  0  ||  this.in  ==  null  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  0  ||  this.in  ==  null  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  0  ||  this.in  ==  null  ||  offs  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
541	[BUG]  [BUGGY]  if(offs  <  0  ||  this.in  ==  null  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  this.in  ==  null  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  this.in  ==  null  ||  len  >  0)  {	  if(offs    ==    0    ||    this.in    ==    null    ||    offs    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
542	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  >  this.in)  {	  if(offs    ==    null    ||    len    >    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
543	[BUG]  [BUGGY]  if(offs  <  0  ||  offs  >  this.in)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  offs  >  this.in)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  offs  >  this.in)  {	  if(offs    ==    0    ||    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
544	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  >  dest.length)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
545	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  >  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  >  destOffs)  {	  if(offs    ==    len    ||    offs    >    len)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
546	[BUG]  [BUGGY]  System.arraycopy(crc,  0,  destOffs,  offs,  len);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(crc,  0,  destOffs,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(crc,  0,  destOffs,  offs,  len);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
547	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  destOffs,  offs,  len);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  destOffs,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(temp_charArray2d,  0,  destOffs,  offs,  len);	  System.arraycopy(dest,    0,    destOffs,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
548	[BUG]  [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	while(offs  <  len)  {  throw  new  IndexOutOfBoundsException( "len( "  +  offs  + ")>  dest.length( "  +  dest.length  + ")  <  0.   ");  }	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
549	[BUG]  [BUGGY]  aughtException( "len  <  len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtException( "len  <  len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtException( "len  <  len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
550	[BUG]  [BUGGY]  aughtInvalidIndexException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtInvalidIndexException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtInvalidIndexException( "len( "  +  offs  +   ")>  dest.length( "  +  dest.length  +   ")  <  0.   ");	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")>    dest.length(   "    +    dest.length    +   ")    <    0.       ");    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
551	[BUG]  [BUGGY]  if(destOffs  ==  offs  +  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  +  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  +  len  ||  len  <  0)  {	  if(destOffs    ==    offs    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
552	[BUG]  [BUGGY]  if(destOffs  >=  offs  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  offs  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  offs  ||  len  ==  0)  {	  if(destOffs!=    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
553	[BUG]  [BUGGY]  if(offs  >  0  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  0  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  0  ||  len  ==  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
554	[BUG]  [BUGGY]  if(offs  >=  offs  ||  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  offs  ||  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  offs  ||  len  ==  0)  {	  if(offs    ==    0    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
555	[BUG]  [BUGGY]  if(destOffs  ==  offs  ||  this.in!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  offs  ||  this.in!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  offs  ||  this.in!=  null)  {	  if(data    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
556	[BUG]  [BUGGY]  if(data  ==  null  ||  offs!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(data  ==  null  ||  offs!=  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(data  ==  null  ||  offs!=  null)  {	  if(data    ==    null    ||    this.in!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
557	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  dest,  0,  len);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  dest,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(temp_charArray2d,  0,  dest,  0,  len);	  System.arraycopy(dest,    0,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
558	[BUG]  [BUGGY]  if(dest  {  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(dest  {  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(dest  {  null  ||  len  <  dest.length)  {	  if(this.in    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
559	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len!=  offs)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len!=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len!=  offs)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
560	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len!=  dest.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len!=  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len!=  dest.length)  {	  if(this.in    ==    null    ||    offs!=    len)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
561	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  <  0  ||  offs  >  dest.length)  {	  if(offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
562	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  >  dest.length)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
563	[BUG]  [BUGGY]  if(offs  >  0  ||  len  >  offs)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  0  ||  len  >  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  0  ||  len  >  offs)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
564	[BUG]  [BUGGY]  if(offs  <  0  ||  len  >  destOffs)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  >  destOffs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  >  destOffs)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
565	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  >  dest.length)  {	  if(offs    ==    0    ||    len    >    offs)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
566	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  >  len)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  >  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  >  len)  {	  if(destOffs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
567	[BUG]  [BUGGY]  Vorteil(dest.length)>  dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  Vorteil(dest.length)>  dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	Vorteil(dest.length)>  dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
568	[BUG]  [BUGGY]  aughtables.add(dest.length,  offs  +  len),  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtables.add(dest.length,  offs  +  len),  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtables.add(dest.length,  offs  +  len),  new  IndexOutOfBoundsException( "offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
569	[BUG]  [BUGGY]  Vorteil(dest.length  +   ")>  dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  Vorteil(dest.length  +   ")>  dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	Vorteil(dest.length  +   ")>  dest.length( "  +  len  + ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
570	[BUG]  [BUGGY]  aughtables.add(dest.length,  offs  +  len)>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtables.add(dest.length,  offs  +  len)>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtables.add(dest.length,  offs  +  len)>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
571	[BUG]  [BUGGY]  aughtables.add(dest.length,  offs  +  len),  new  IndexOutOfBoundsException( "Offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtables.add(dest.length,  offs  +  len),  new  IndexOutOfBoundsException( "Offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtables.add(dest.length,  offs  +  len),  new  IndexOutOfBoundsException( "Offs( "  +  offs  +   ")>  dest.length( "  +  dest.length  +	  if(destOffs    <    0)    {    throw    new    IndexOutOfBoundsException(   "offs(   "    +    offs    +       ")>    dest.length(   "    +    len    +       ")>    dest.length(   "    +    dest.length    +    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
572	[BUG]  [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >  nInUse)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  0  ||  len  <  0  ||  offs  >  nInUse)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  0  ||  len  <  0  ||  offs  >  nInUse)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
573	[BUG]  [BUGGY]  if(len  <  0  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  0  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  0  ||  offs  >  0  ||  len  <  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
574	[BUG]  [BUGGY]  if(len  <  0  ||  offs  <  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  0  ||  offs  <  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  0  ||  offs  <  0  ||  len  <  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
575	[BUG]  [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  >  nInUse)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  0  ||  len  <  0  ||  offs  >  nInUse)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  0  ||  len  <  0  ||  offs  >  nInUse)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
576	[BUG]  [BUGGY]  if(offs  >  0  ||  len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >  0  ||  len  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >  0  ||  len  <  0  ||  offs  <  0)  {	  if(len    ==    0    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
577	[BUG]  [BUGGY]  if(len  <  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  1)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  1)  {	  if(len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
578	[BUG]  [BUGGY]  if(this.in!=  null  ||  offs  >  0  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  offs  >  0  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  offs  >  0  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    >    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
579	[BUG]  [BUGGY]  if(destOffs  <  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  null  ||  len  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
580	[BUG]  [BUGGY]  if(destOffs  >=  null  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  null  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  null  ||  len  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
581	[BUG]  [BUGGY]  if(destOffs  <  offs  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  offs  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  offs  ||  len  <  dest.length)  {	  if(offs    ==    null    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
582	[BUG]  [BUGGY]  if(this.in!=  null  &&  this.stream  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  this.stream  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  this.stream  ==  null)  {	  if(this.in!=    null    &&    this.in    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
583	[BUG]  [BUGGY]  if(len  <  len)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  len)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  len)  {	  if(destOffs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
584	[BUG]  [BUGGY]  if(len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  dest.length)  {	  if(destOffs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
585	[BUG]  [BUGGY]  if(len  <  offs)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  <  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  <  offs)  {	  if(destOffs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
586	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
587	[BUG]  [BUGGY]  if(this.in!=  null  &&  len  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  len  ==  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  len  ==  0)  {	  if(this.in!=    null    ||    len    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
588	[BUG]  [BUGGY]  if(offs!=  offs  &&  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs  &&  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs  &&  len  <  dest.length)  {	  if(this.in!=    null    &&    offs    <    len)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
589	[BUG]  [BUGGY]  char  nInUse  =  read0();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  char  nInUse  =  read0();  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	char  nInUse  =  read0();	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
590	[BUG]  [BUGGY]  int  nInUse  =  read0()  +  dest.length;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  nInUse  =  read0()  +  dest.length;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  nInUse  =  read0()  +  dest.length;	  int    nInUse    =    read0();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
591	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  >=  offs)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  >=  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  >=  offs)  {	  if(this.in    ==    null    ||    offs    >=    len)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
592	[BUG]  [BUGGY]  if(offs!=  offs  ||  len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs  ||  len  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs  ||  len  <  0  ||  offs  <  0)  {	  if(this.in!=    null    ||    offs    <    0    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
593	[BUG]  [BUGGY]  if(this.in  ==  null  ||  len  <  =  offs)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  len  <  =  offs)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  len  <  =  offs)  {	  if(this.in    ==    null    ||    len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
594	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  <  =  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  <  =  0)  {	  if(this.in    ==    null    ||    len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
595	[BUG]  [BUGGY]  System.arraycopy(cftab,  offs,  dest,  0,  offs);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  offs,  dest,  0,  offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  offs,  dest,  0,  offs);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
596	[BUG]  [BUGGY]  System.arraycopy(cftab,  offs,  dt,  0,  len);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  offs,  dt,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  offs,  dt,  0,  len);	  System.arraycopy(cftab,    offs,    dest,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
597	[BUG]  [BUGGY]  if(this.in!=  null  ||  len  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len  >=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len  >=  0)  {	  if(this.in    ==    null    ||    len    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
598	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  >  dest.length)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  >  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  >  dest.length)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
599	[BUG]  [BUGGY]  if(destOffs  >=  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  null  ||  len  <  0)  {	  if(destOffs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
600	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  unzftab,  len);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  unzftab,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  unzftab,  len);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
601	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  nInUse);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  nInUse);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offs,  nInUse);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
602	[BUG]  [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  offs);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(cftab,  0,  dest,  offs,  offs);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(cftab,  0,  dest,  offs,  offs);	  System.arraycopy(cftab,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
603	[BUG]  [BUGGY]  if(offs  <  dest.length  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  dest.length  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  dest.length  ||  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
604	[BUG]  [BUGGY]  if(offs  >=  offs  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  offs  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  offs  ||  len  <  dest.length)  {	  if(offs    ==    offs    ||    len    <    dest.length)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
605	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    temp_    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
606	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  len  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  len  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  len  ||  offs  >  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
607	[BUG]  [BUGGY]  if(this.in!=  null  ||  offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  offs  <  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  offs  <  len  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
608	[BUG]  [BUGGY]  if(destOffs  ==  null  ||  offs  <  len  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  ==  null  ||  offs  <  len  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  ==  null  ||  offs  <  len  ||  len  <  0)  {	  if(this.in    ==    null    ||    offs    <    len    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
609	[BUG]  [BUGGY]  int  len  =  offs.length;  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  int  len  =  offs.length;  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	int  len  =  offs.length;  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
610	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  0,  dest.length	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
611	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  1,  dest.length);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  1,  dest.length);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  dest.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[len][len];  System.arraycopy(temp_charArray,  0,  temp_charArray2d,  1,  dest.length);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray,    0,    temp_charArray2d,    0,    dest.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
612	[BUG]  [BUGGY]  if(offs  ==  offs  ||  len  <  0  ||  offs  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  ==  offs  ||  len  <  0  ||  offs  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  ==  offs  ||  len  <  0  ||  offs  <  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
613	[BUG]  [BUGGY]  if(this.in  ==  null  ||  offs  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in  ==  null  ||  offs  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in  ==  null  ||  offs  <  0  ||  offs  >  0)  {	  if(this.in    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
614	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
615	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	for(int  i  =  0,  len  =  offs.length;  i  <  len;  i++)  {  char[]  temp_charArray2d  =  new  char[temp_charArray2.length];  System.arraycopy(temp_charArray2,  0,  temp_charArray2d,  0,  len);  }	  for(int    i    =    0,    len    =    offs.length;    i    <    len;    i++)    {    char[]    temp_charArray2d    =    new    char[len][len];    System.arraycopy(temp_charArray2,    0,    temp_charArray2d,    0,    len);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
616	[BUG]  [BUGGY]  if(this.in!=  null  ||  len!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  ||  len!=  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  ||  len!=  0)  {	  if(this.in    ==    null    ||    len!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
617	[BUG]  [BUGGY]  if(this.in!=  null  &&  offs  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(this.in!=  null  &&  offs  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(this.in!=  null  &&  offs  ==  null)  {	  if(this.in!=    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
618	[BUG]  [BUGGY]  if(offs!=  null  ||  len  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  null  ||  len  ==  null)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  null  ||  len  ==  null)  {	  if(this.in!=    null    ||    offs    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
619	[BUG]  [BUGGY]  if(offs  <  offs  ||  len  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  <  offs  ||  len  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  <  offs  ||  len  >  0)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
620	[BUG]  [BUGGY]  if(len  ==  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(len  ==  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(len  ==  0  ||  offs  >  0)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
621	[BUG]  [BUGGY]  if(offs  >=  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs  >=  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs  >=  offs  ||  len  <  0)  {	  if(offs    ==    null    ||    len    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
622	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  <  dest.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  <  dest.length)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  <  dest.length)  {	  if(destOffs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
623	[BUG]  [BUGGY]  System.arraycopy(crc,  0,  dest,  offs,  len);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(crc,  0,  dest,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(crc,  0,  dest,  offs,  len);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
624	[BUG]  [BUGGY]  System.arraycopy(temp_charArray2d,  0,  dest,  offs,  len);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  System.arraycopy(temp_charArray2d,  0,  dest,  offs,  len);  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	System.arraycopy(temp_charArray2d,  0,  dest,  offs,  len);	  System.arraycopy(dest,    0,    dest,    offs,    len);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
625	[BUG]  [BUGGY]  if(offs!=  offs  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(offs!=  offs  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(offs!=  offs  ||  len  <  0)  {	  if(this.in!=    null    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
626	[BUG]  [BUGGY]  if(destOffs  >=  null  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  >=  null  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  >=  null  ||  len  <  0  ||  offs  >  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
627	[BUG]  [BUGGY]  if(destOffs  <  0  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  0  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  0  ||  len  <  0  ||  offs  >  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
628	[BUG]  [BUGGY]  if(destOffs  <  null  ||  len  <  0  ||  offs  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  null  ||  len  <  0  ||  offs  >  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  null  ||  len  <  0  ||  offs  >  0)  {	  if(destOffs    ==    null    ||    len    <    0    ||    offs    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
629	[BUG]  [BUGGY]  aughtInvalidIndexException( "len( "  +  offs  + ")  <  dest.length;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  aughtInvalidIndexException( "len( "  +  offs  + ")  <  dest.length;  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	aughtInvalidIndexException( "len( "  +  offs  + ")  <  dest.length;	  if(offs    <    len)    {    throw    new    IndexOutOfBoundsException(   "len(   "    +    offs    +   ")    <    dest.length;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
630	[BUG]  [BUGGY]  if(destOffs  <  null  ||  len  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (offs  <  0)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  <  0.     ");  }  if  (len  <  0)  {  throw  new  IndexOutOfBoundsException(     "len(     "  +  len  +       ")  <  0.     ");  }  if  (offs  +  len  >  dest.length)  {  throw  new  IndexOutOfBoundsException(     "offs(     "  +  offs  +       ")  +  len(     "  +  len  +       ")  >  dest.length(     "  +  dest.length  +       ").     ");  }      [BUGGY]  if(destOffs  <  null  ||  len  <  0)  {  [BUGGY]      throw  new  IOException(     "stream  closed     ");  }  final  int  hi  =  offs  +  len;  int  destOffs  =  offs;  int  b;  while  (destOffs  <  hi  &&  ((b  =  read0())  >=  0))  {  dest[destOffs++]  =  (byte)  b;  count(1);  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read  [RETURN_TYPE]  int  final  byte[]  dest  final  int  offs  final  int  len  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  last  len  nInUse  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	165	165	1	replace	if(destOffs  <  null  ||  len  <  0)  {	  if(destOffs    ==    null    ||    len    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
