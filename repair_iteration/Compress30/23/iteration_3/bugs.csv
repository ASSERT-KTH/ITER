bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(this.currentState  |  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  getAndMoveToFrontDecode_yy)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
2	[BUG]  [BUGGY]  switch(this.currentState  +  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  getAndMoveToFrontDecode_yy)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
3	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_y0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_y0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_y0)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
4	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_0)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
5	[BUG]  [BUGGY]  switch(selector,  0,  seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  0,  seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  0,  seqToUnseq)  {	  switch(selector,    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  switch(selector,  1)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  1)  {	  switch(selector,    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  switch(selector,  0,  selectorMtf)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  0,  selectorMtf)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  0,  selectorMtf)  {	  switch(selector,    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  switch(selector,  0,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  0,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  0,  0)  {	  switch(selector,    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  switch(selector,  0,  selector.length)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  0,  selector.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  0,  selector.length)  {	  switch(selector,    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  switch(this.currentState  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  getAndMoveToFrontDecode_yy())  {	  switch(currentState    |    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
11	[BUG]  [BUGGY]  switch(su_z  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  |  getAndMoveToFrontDecode_yy())  {	  switch(currentState    |    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
12	[BUG]  [BUGGY]  switch(getState()  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  |  getAndMoveToFrontDecode_yy())  {	  switch(currentState    |    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
13	[BUG]  [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  getAndMoveToFrontDecode())  {	  switch(currentState    |    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
14	[BUG]  [BUGGY]  switch(su_z  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  +  getAndMoveToFrontDecode_yy())  {	  switch(su_z    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
15	[BUG]  [BUGGY]  switch(this.su_z  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.su_z  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.su_z  &  getAndMoveToFrontDecode_yy())  {	  switch(su_z    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
16	[BUG]  [BUGGY]  switch(su_z  -  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  -  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  -  getAndMoveToFrontDecode_yy())  {	  switch(su_z    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
17	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy(1))  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy(1))  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode_yy(1))  {	  switch(su_z    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
18	[BUG]  [BUGGY]  switch(currentState  |  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  RAND_PART_A_STATE)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
19	[BUG]  [BUGGY]  switch(currentState  |  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  NO_RAND_PART_A_STATE)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
20	[BUG]  [BUGGY]  switch(currentState  |  EOF)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  EOF)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
21	[BUG]  [BUGGY]  switch(currentState  |  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  RAND_PART_C_STATE)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
22	[BUG]  [BUGGY]  switch(currentState  |  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  RAND_PART_B_STATE)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
23	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
24	[BUG]  [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
25	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
26	[BUG]  [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  &  getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
27	[BUG]  [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
28	[BUG]  [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode_1())  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode_1())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  getAndMoveToFrontDecode_1())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
29	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  +  1;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy  +  1;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
30	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy.length;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy.length;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy.length;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
31	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_xy;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_xy;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_xy;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
32	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  -  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  -  1;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy  -  1;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
33	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  /  2;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  /  2;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy  /  2;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
34	[BUG]  [BUGGY]  switch(this.currentState  |  0xff)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  0xff)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
35	[BUG]  [BUGGY]  switch(this.currentState  &  EOF)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  EOF)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
36	[BUG]  [BUGGY]  switch(this.currentState  &  0xf)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  0xf)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  0xf)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
37	[BUG]  [BUGGY]  switch(this.currentState  +  0xff)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  0xff)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
38	[BUG]  [BUGGY]  switch(this.currentState  &  1xff)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  1xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  1xff)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
39	[BUG]  [BUGGY]  switch(currentState  &  0xff)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  0xff)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
40	[BUG]  [BUGGY]  int[]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
41	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
42	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(false);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(false);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(false);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
43	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
44	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(int  i);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(int  i);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(int  i);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
45	[BUG]  [BUGGY]  switch(in.read0())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in.read0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in.read0())  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  switch(in,  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  false)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  switch(in,  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  0)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  switch(in,  read0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  read0)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  switch(in,  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  null)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  switch(int)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(int)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(int)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  switch(currentState  +  EOF)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  EOF)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
52	[BUG]  [BUGGY]  switch(currentState  +  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  1)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
53	[BUG]  [BUGGY]  switch(currentState  *  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  *  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  *  START_PART_A_STATE)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
54	[BUG]  [BUGGY]  switch(currentState  +  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  NO_RAND_PART_A_STATE)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
55	[BUG]  [BUGGY]  switch(currentState  +  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  RAND_PART_A_STATE)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
56	[BUG]  [BUGGY]  switch(currentState  +  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  RAND_PART_C_STATE)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
57	[BUG]  [BUGGY]  switch(this.in,  this.data.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.data.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.data.length)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
58	[BUG]  [BUGGY]  switch(in,  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  this.in)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
59	[BUG]  [BUGGY]  switch(this.in,  this.temp_charArray2d)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.temp_charArray2d)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.temp_charArray2d)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
60	[BUG]  [BUGGY]  switch(this.in,  this.crc)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.crc)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.crc)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
61	[BUG]  [BUGGY]  switch(this.selector,  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  false)  {	  switch(selector,    false)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  switch(selector,  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  null)  {	  switch(selector,    false)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  switch(selectionMtf  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionMtf  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionMtf  &  getAndMoveToFrontDecode_yy())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  switch(this.selectorMtf  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf  &  getAndMoveToFrontDecode_yy())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
65	[BUG]  [BUGGY]  switch(selectorMtf  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  |  getAndMoveToFrontDecode_yy())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
66	[BUG]  [BUGGY]  switch(selector  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector  &  getAndMoveToFrontDecode_yy())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
67	[BUG]  [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_y0())  {  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_y0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  &  getAndMoveToFrontDecode_y0())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
68	[BUG]  [BUGGY]  switch(this.currentState  &  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  RAND_PART_C_STATE)  {	  switch(currentState    &    RAND_PART_C_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  switch(this.currentState  |  EOF_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  EOF_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  EOF_PART_B_STATE)  {	  switch(this.currentState    &    EOF_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
70	[BUG]  [BUGGY]  switch(this.currentState  &  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  NO_RAND_PART_A_STATE)  {	  switch(this.currentState    &    EOF_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
71	[BUG]  [BUGGY]  switch(this.currentState  &  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  RAND_PART_B_STATE)  {	  switch(this.currentState    &    EOF_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
72	[BUG]  [BUGGY]  switch(this.currentState  ||  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  getAndMoveToFrontDecode_yy)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
73	[BUG]  [BUGGY]  switch(currentState  &&  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &&  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &&  getAndMoveToFrontDecode_yy)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
74	[BUG]  [BUGGY]  switch(su_z  ||  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  ||  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  ||  getAndMoveToFrontDecode_yy)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
75	[BUG]  [BUGGY]  switch(getState()  ||  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  ||  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  ||  getAndMoveToFrontDecode_yy)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
76	[BUG]  [BUGGY]  switch(getCurrentState()  ||  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCurrentState()  ||  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCurrentState()  ||  getAndMoveToFrontDecode_yy)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][0],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][0],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][0],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(data[i][0],  0,  inUse);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  System.arraycopy(data[i][0],  0,  inUse);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	System.arraycopy(data[i][0],  0,  inUse);	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[0][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[0][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[0][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
83	[BUG]  [BUGGY]  Switch(currentState  |  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  |  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  |  START_PART_A_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
84	[BUG]  [BUGGY]  Switch(currentState  &  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  RAND_PART_A_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
85	[BUG]  [BUGGY]  Switch(currentState  &  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  NO_RAND_PART_A_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
86	[BUG]  [BUGGY]  Switch(currentState  &  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  RAND_PART_C_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
87	[BUG]  [BUGGY]  Switch(this.currentState  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  &  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  &  START_PART_A_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
88	[BUG]  [BUGGY]  Switch(currentState  &  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  RAND_PART_B_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
89	[BUG]  [BUGGY]  switch(this.selector,  this.in)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  this.in)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
90	[BUG]  [BUGGY]  switch(this.in,  this.selector,  0)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector,  0)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
91	[BUG]  [BUGGY]  switch(this.in,  this.selector,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector,  this.blockSize100k)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  switch(this.in,  this.selector,  false)  {  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector,  false)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  switch(this.in,  this.selector,  null)  {  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector,  null)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
94	[BUG]  [BUGGY]  switch(this.in,  this.selector,  true)  {  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector,  true)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
95	[BUG]  [BUGGY]  switch(this.currentState  |  START_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  START_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  START_PART_B_STATE)  {	  switch(this.currentState    &    START_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
97	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
98	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
100	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[0][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[0][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[0][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
101	[BUG]  [BUGGY]  Switch(currentState  |  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  |  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  |  EOF_PART_A_STATE)  {	  Switch(currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
102	[BUG]  [BUGGY]  Switch(this.currentState  &  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  &  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  &  EOF_PART_A_STATE)  {	  Switch(currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
103	[BUG]  [BUGGY]  Switch(currentState  &  EOF_PART_A_STATE,  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &  EOF_PART_A_STATE,  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  EOF_PART_A_STATE,  START_BLOCK_STATE)  {	  Switch(currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
104	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
105	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
106	[BUG]  [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  &  getAndMoveToFrontDecode())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
107	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
108	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.seqToUnseq)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
109	[BUG]  [BUGGY]  Switch(this.blockSize100k,  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  0)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
110	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.bsBuff)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.bsBuff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.bsBuff)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
111	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.currentState)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.currentState)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
112	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.saveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.saveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.saveToFrontDecode_yy)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
113	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.charArray2d)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.charArray2d)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.charArray2d)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
114	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_y0();  break;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_y0();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_y0();  break;	  int[][]    base    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
115	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_z);  break;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_z);  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_z);  break;	  int[][]    base    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
116	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_rNToGo);  break;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_rNToGo);  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_rNToGo);  break;	  int[][]    base    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
117	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode();  break;  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode();  break;	  int[][]    base    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
118	[BUG]  [BUGGY]  switch(su_z  |  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  |  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  |  getAndMoveToFrontDecode_yy)  {	  switch(currentState    |    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
119	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy  |  currentState)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy  |  currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy  |  currentState)  {	  switch(currentState    |    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
120	[BUG]  [BUGGY]  switch(getState()  |  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  |  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  |  getAndMoveToFrontDecode_yy)  {	  switch(currentState    |    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
121	[BUG]  [BUGGY]  switch(getCrc()  |  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  |  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  |  getAndMoveToFrontDecode_yy)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
122	[BUG]  [BUGGY]  switch(getCrc()  +  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  +  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  +  getAndMoveToFrontDecode_yy)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
123	[BUG]  [BUGGY]  switch(getCrc()  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  START_BLOCK_STATE)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
124	[BUG]  [BUGGY]  switch(getCrc()  *  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  *  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  *  getAndMoveToFrontDecode_yy)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
125	[BUG]  [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_y0)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_y0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  getAndMoveToFrontDecode_y0)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
126	[BUG]  [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_0)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  getAndMoveToFrontDecode_0)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
127	[BUG]  [BUGGY]  switch(this.currentState  |  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  START_BLOCK_STATE)  {	  switch(this.currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
128	[BUG]  [BUGGY]  switch(selectionMtf,  true)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionMtf,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionMtf,  true)  {	  switch(selectorMtf,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
129	[BUG]  [BUGGY]  switch(this.selectorMtf,  false)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf,  false)  {	  switch(selectorMtf,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
130	[BUG]  [BUGGY]  switch(selectionMtf,  false)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionMtf,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionMtf,  false)  {	  switch(selectorMtf,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
131	[BUG]  [BUGGY]  switch(this.currentState  |  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  EOF_PART_A_STATE)  {	  switch(this.currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
132	[BUG]  [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  &  getAndMoveToFrontDecode())  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
133	[BUG]  [BUGGY]  switch(this.inUse  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  |  getAndMoveToFrontDecode_yy())  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
134	[BUG]  [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  &  getAndMoveToFrontDecode_yy)  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
135	[BUG]  [BUGGY]  Switch(this.currentState,  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState,  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState,  RAND_PART_A_STATE)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
136	[BUG]  [BUGGY]  Switch(this.currentState,  true)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState,  true)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
137	[BUG]  [BUGGY]  Switch(this.currentState,  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState,  false)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
138	[BUG]  [BUGGY]  Switch(this.currentState,  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState,  0)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
139	[BUG]  [BUGGY]  Switch(this.currentState,  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState,  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState,  RAND_PART_B_STATE)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
140	[BUG]  [BUGGY]  Switch(this.currentState,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState,  this.blockSize100k)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
141	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_z);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
142	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(recvDecodingTables_pos);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
143	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_y0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_y0();	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
144	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
145	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode();	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
146	[BUG]  [BUGGY]  switch(this.seqToUnseq,  this.in)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  this.in)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
147	[BUG]  [BUGGY]  switch(this.in,  this.seqToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.seqToUnseq,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.seqToUnseq,  0)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  switch(this.seqToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  0)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
149	[BUG]  [BUGGY]  switch(this.out,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.out,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.out,  this.seqToUnseq)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
150	[BUG]  [BUGGY]  switch(this.crc,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.crc,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.crc,  this.seqToUnseq)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
151	[BUG]  [BUGGY]  switch(this.in,  this.seqToUnseq,  false)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.seqToUnseq,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.seqToUnseq,  false)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
152	[BUG]  [BUGGY]  switch(inUse  |  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  |  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  |  getAndMoveToFrontDecode_yy)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
153	[BUG]  [BUGGY]  switch(su_ch2  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_ch2  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_ch2  &  getAndMoveToFrontDecode_yy)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
154	[BUG]  [BUGGY]  switch(inUse  +  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  +  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  +  getAndMoveToFrontDecode_yy)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
156	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
157	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
158	[BUG]  [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
159	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
160	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
161	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_y0();	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
162	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_z);	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
163	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
164	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_xy();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_xy();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_xy();	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
165	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode();	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
166	[BUG]  [BUGGY]  switch(this.blockSize100k),  this.read0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.blockSize100k),  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.blockSize100k),  this.read0)  {	  switch(this.read0),    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
167	[BUG]  [BUGGY]  switch(this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.blockSize100k)  {	  switch(this.read0),    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
168	[BUG]  [BUGGY]  switch(this.read0(),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0(),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0(),  this.blockSize100k)  {	  switch(this.read0),    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
169	[BUG]  [BUGGY]  switch(this.bsBuff),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.bsBuff),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.bsBuff),  this.blockSize100k)  {	  switch(this.read0),    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
170	[BUG]  [BUGGY]  switch(this.currentState  &&  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &&  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &&  this.seqToUnseq)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
171	[BUG]  [BUGGY]  switch(this.seqToUnseq  ||  this.currentState)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq  ||  this.currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq  ||  this.currentState)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
172	[BUG]  [BUGGY]  switch(this.currentState  ||  this.seqToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  this.seqToUnseq,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  this.seqToUnseq,  0)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
173	[BUG]  [BUGGY]  switch(seqToUnseq  ||  this.currentState)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq  ||  this.currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq  ||  this.currentState)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
174	[BUG]  [BUGGY]  switch(this.currentState  ||  this.seqToUnseq,  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  this.seqToUnseq,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  this.seqToUnseq,  false)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
175	[BUG]  [BUGGY]  switch(currentState  ||  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  RAND_PART_A_STATE)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
176	[BUG]  [BUGGY]  switch(currentState  ||  EOF)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  EOF)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
177	[BUG]  [BUGGY]  switch(currentState  ||  read0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  read0)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
178	[BUG]  [BUGGY]  switch(currentState  ||  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  RAND_PART_C_STATE)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
179	[BUG]  [BUGGY]  switch(currentState  ||  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  RAND_PART_B_STATE)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
180	[BUG]  [BUGGY]  switch(su_z  +  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  +  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  +  getAndMoveToFrontDecode_yy)  {	  switch(su_z    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
181	[BUG]  [BUGGY]  switch(this.su_z  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.su_z  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.su_z  &  getAndMoveToFrontDecode_yy)  {	  switch(su_z    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
182	[BUG]  [BUGGY]  switch(su_z  -  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  -  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  -  getAndMoveToFrontDecode_yy)  {	  switch(su_z    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
183	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy  +  1)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode_yy  +  1)  {	  switch(su_z    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
184	[BUG]  [BUGGY]  Switch(currentState,  1)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  1)  {	  Switch(currentState,    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
185	[BUG]  [BUGGY]  Switch(currentState,  0,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  0,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  0,  0)  {	  Switch(currentState,    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
186	[BUG]  [BUGGY]  Switch(currentState,  0,  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  0,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  0,  null)  {	  Switch(currentState,    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
187	[BUG]  [BUGGY]  Switch(currentState,  0,  true)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  0,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  0,  true)  {	  Switch(currentState,    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
188	[BUG]  [BUGGY]  Switch(currentState,  2)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  2)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  2)  {	  Switch(currentState,    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
189	[BUG]  [BUGGY]  switch(selectorMtf,  0,  seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf,  0,  seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  0,  seqToUnseq)  {	  switch(selectorMtf,    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
190	[BUG]  [BUGGY]  switch(selectorMtf,  1)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf,  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  1)  {	  switch(selectorMtf,    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
191	[BUG]  [BUGGY]  switch(this.in,  null,  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  null,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null,  0)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
192	[BUG]  [BUGGY]  switch(this.in,  null,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  null,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null,  this.seqToUnseq)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
193	[BUG]  [BUGGY]  switch(this.in,  null,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  null,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null,  this.blockSize100k)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
194	[BUG]  [BUGGY]  switch(this.in,  null,  this.selector)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  null,  this.selector)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null,  this.selector)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
195	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  data[i],  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  data[i],  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  data[i],	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
196	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
197	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
198	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  }	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
199	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
200	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
201	[BUG]  [BUGGY]  switch(this.seqToUnseq),  this.read0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq),  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq),  this.read0)  {	  switch(this.read0),    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
202	[BUG]  [BUGGY]  switch(this.seqToUnseq,  this.read0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  this.read0)  {	  switch(this.read0),    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
203	[BUG]  [BUGGY]  switch(this.read0  -  1,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0  -  1,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0  -  1,  this.seqToUnseq)  {	  switch(this.read0),    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
204	[BUG]  [BUGGY]  switch(selector,  read0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  read0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
205	[BUG]  [BUGGY]  switch(read0,  seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(read0,  seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(read0,  seqToUnseq)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
206	[BUG]  [BUGGY]  switch(selectorMtf,  read0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  read0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
207	[BUG]  [BUGGY]  switch(selectionToUnseq,  read0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionToUnseq,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionToUnseq,  read0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
208	[BUG]  [BUGGY]  switch(sequenceToUnseq,  read0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(sequenceToUnseq,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(sequenceToUnseq,  read0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
209	[BUG]  [BUGGY]  switch(seqToUnseq,  read0,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  read0,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  read0,  0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
210	[BUG]  [BUGGY]  switch(this.currentState  |  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  RAND_PART_A_STATE)  {	  switch(this.currentState    &    RAND_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
211	[BUG]  [BUGGY]  switch(this.currentState  &  NO_ROOT_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  NO_ROOT_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  NO_ROOT_PART_A_STATE)  {	  switch(this.currentState    &    RAND_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
212	[BUG]  [BUGGY]  switch(this.selector,  true)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  true)  {	  switch(selector,    true)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
213	[BUG]  [BUGGY]  switch(selection,  true)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selection,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selection,  true)  {	  switch(selector,    true)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
214	[BUG]  [BUGGY]  switch(this.read0())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0())  {	  switch(this.read1)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
215	[BUG]  [BUGGY]  switch(this.read0,  this.read1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  this.read1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  this.read1)  {	  switch(this.read1)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
216	[BUG]  [BUGGY]  switch(this.read0),  this.read1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0),  this.read1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0),  this.read1)  {	  switch(this.read1)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
217	[BUG]  [BUGGY]  switch(this.crc)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.crc)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.crc)  {	  switch(this.read1)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
218	[BUG]  [BUGGY]  switch(selector.read0())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.read0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.read0())  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
219	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  getAndMoveToFrontDecode_yy)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
220	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  false)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
221	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  START_PART_A_STATE)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
222	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  START_BLOCK_STATE)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
223	[BUG]  [BUGGY]  switch(selectorMtf  -  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  -  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
224	[BUG]  [BUGGY]  switch(selector.length  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.length  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.length  -  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
225	[BUG]  [BUGGY]  switch(selectionToUnseq  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionToUnseq  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionToUnseq  -  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
226	[BUG]  [BUGGY]  switch(seqToUnseq.length  -  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq.length  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq.length  -  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
227	[BUG]  [BUGGY]  switch(seqToUnseq  +  1)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq  +  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
228	[BUG]  [BUGGY]  switch(this.selector.cloneTree())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector.cloneTree())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector.cloneTree())  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
229	[BUG]  [BUGGY]  switch(selector.next())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.next())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.next())  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
230	[BUG]  [BUGGY]  switch(selector.cloneBlock())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.cloneBlock())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.cloneBlock())  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
231	[BUG]  [BUGGY]  switch(this.read1  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read1  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read1  -  1)  {	  switch(this.read0    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
232	[BUG]  [BUGGY]  switch(this.read0()  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0()  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0()  -  1)  {	  switch(this.read0    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
233	[BUG]  [BUGGY]  switch(this.read0  +  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0  +  1)  {	  switch(this.read0    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
234	[BUG]  [BUGGY]  switch(this.read0  /  1)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0  /  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0  /  1)  {	  switch(this.read0    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
235	[BUG]  [BUGGY]  Switch(this.read0,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.read0,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0,  this.seqToUnseq)  {	  Switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
236	[BUG]  [BUGGY]  Switch(this.read0,  true)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.read0,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0,  true)  {	  Switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
237	[BUG]  [BUGGY]  Switch(this.read0,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.read0,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0,  this.blockSize100k)  {	  Switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
238	[BUG]  [BUGGY]  Switch(this.read0,  false)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.read0,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0,  false)  {	  Switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
239	[BUG]  [BUGGY]  Switch(this.read0,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.read0,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0,  0)  {	  Switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
240	[BUG]  [BUGGY]  switch(this.currentState,  this.in)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState,  this.in)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
241	[BUG]  [BUGGY]  switch(in,  this.currentState)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  this.currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  this.currentState)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
242	[BUG]  [BUGGY]  switch(this.in,  this.currentState  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.currentState  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.currentState  &  START_BLOCK_STATE)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
243	[BUG]  [BUGGY]  switch(this.in,  this.currentState  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.currentState  &  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.currentState  &  START_PART_A_STATE)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
244	[BUG]  [BUGGY]  switch(this.in,  this.currentState  &  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.currentState  &  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.currentState  &  RAND_PART_A_STATE)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
245	[BUG]  [BUGGY]  switch(this.selector,  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  getAndMoveToFrontDecode_yy)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
246	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy,  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_yy,  0)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
247	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy),  this)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy),  this)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_yy),  this)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
248	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy,  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_yy,  false)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
249	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_y0();  break;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_y0();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_y0();  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
250	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_len();  break;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_len();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_len();  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
251	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_loop();  break;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_loop();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_loop();  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
252	[BUG]  [BUGGY]  char  len  =  getAndMoveToFrontDecode_yy();  break;  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char  len  =  getAndMoveToFrontDecode_yy();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	char  len  =  getAndMoveToFrontDecode_yy();  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
253	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode();  break;  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode();  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
254	[BUG]  [BUGGY]  switch(this.selector,  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  0)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
255	[BUG]  [BUGGY]  switch(this.selector,  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  null)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
256	[BUG]  [BUGGY]  switch(this.selector,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  this.blockSize100k)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
257	[BUG]  [BUGGY]  Switch(currentState  |  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  |  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  |  START_BLOCK_STATE)  {	  Switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
258	[BUG]  [BUGGY]  Switch(this.currentState  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  &  START_BLOCK_STATE)  {	  Switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
259	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState  ==  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  RAND_PART_A_STATE)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
260	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
261	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState  ==  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  RAND_PART_C_STATE)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
262	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState  ==  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  RAND_PART_B_STATE)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
263	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  EOF_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState  ==  EOF_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  EOF_BLOCK_STATE)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
264	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  EOF)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState  ==  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  EOF)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
265	[BUG]  [BUGGY]  switch(inUse  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  |  getAndMoveToFrontDecode_yy())  {	  switch(inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
266	[BUG]  [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  getAndMoveToFrontDecode())  {	  switch(inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
267	[BUG]  [BUGGY]  int[]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
268	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read1();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read1();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read1();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
269	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read(0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read(0);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read(0);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
270	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  this.base.read0();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  this.base.read0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  return  this.base.read0();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
271	[BUG]  [BUGGY]  switch(in,  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  START_BLOCK_STATE)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
272	[BUG]  [BUGGY]  switch(this.in,  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  RAND_PART_A_STATE)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
273	[BUG]  [BUGGY]  switch(this.in,  EOF)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  EOF)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
274	[BUG]  [BUGGY]  switch(this.in,  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  RAND_PART_B_STATE)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
275	[BUG]  [BUGGY]  switch(this.in,  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  RAND_PART_C_STATE)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
276	[BUG]  [BUGGY]  switch(this.in,  read0)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  read0)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
277	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
278	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
279	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
280	[BUG]  [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
281	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
282	[BUG]  [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  while(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	while(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
283	[BUG]  [BUGGY]  switch(this.seqToUnseq,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  this.seqToUnseq)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
284	[BUG]  [BUGGY]  switch(this.seqToUnseq,  true)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  true)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
285	[BUG]  [BUGGY]  switch(this.seqToUnseq,  false)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  false)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
286	[BUG]  [BUGGY]  switch(this.seqToUnseq,  this.selectorMtf)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  this.selectorMtf)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  this.selectorMtf)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
287	[BUG]  [BUGGY]  switch(currentState  =  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  =  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  =  RAND_PART_A_STATE)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
288	[BUG]  [BUGGY]  switch(currentState  =  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  =  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  =  NO_RAND_PART_A_STATE)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
289	[BUG]  [BUGGY]  switch(currentState  =  EOF)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  =  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  =  EOF)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
290	[BUG]  [BUGGY]  switch(currentState  ||  currentState  =  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  currentState  =  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  currentState  =  START_BLOCK_STATE)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
291	[BUG]  [BUGGY]  switch(currentState  =  START_BLOCK_STATE,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  =  START_BLOCK_STATE,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  =  START_BLOCK_STATE,  0)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
292	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_z);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
293	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
294	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_y0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_y0();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
295	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_ch2);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
296	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
297	[BUG]  [BUGGY]  switch(selectorMtf.length  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf.length  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf.length  -  1)  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
298	[BUG]  [BUGGY]  switch(selector.length)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.length)  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
299	[BUG]  [BUGGY]  switch(selectionMtf.length)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionMtf.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionMtf.length)  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
300	[BUG]  [BUGGY]  switch(selectorMtf,  data.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf,  data.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  data.length)  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
301	[BUG]  [BUGGY]  switch(selectorMtf.length  +  1)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf.length  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf.length  +  1)  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
302	[BUG]  [BUGGY]  switch(this.in,  1)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  1)  {	  switch(this.in,    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
303	[BUG]  [BUGGY]  switch(this.in,  0,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  0,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  0,  this.seqToUnseq)  {	  switch(this.in,    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
304	[BUG]  [BUGGY]  switch(this.in,  false)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  false)  {	  switch(this.in,    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
305	[BUG]  [BUGGY]  switch(this.in,  true)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  true)  {	  switch(this.in,    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
306	[BUG]  [BUGGY]  switch(this.in,  0,  this.recvDecodingTables_pos)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  0,  this.recvDecodingTables_pos)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  0,  this.recvDecodingTables_pos)  {	  switch(this.in,    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
307	[BUG]  [BUGGY]  switch(this.read0,  false)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  false)  {	  switch(this.read0,    true)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
308	[BUG]  [BUGGY]  switch(this.read0(),  true)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0(),  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0(),  true)  {	  switch(this.read0,    true)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
309	[BUG]  [BUGGY]  switch(this.read0,  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  null)  {	  switch(this.read0,    true)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
310	[BUG]  [BUGGY]  switch(in.read0,  true)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in.read0,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in.read0,  true)  {	  switch(this.read0,    true)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
311	[BUG]  [BUGGY]  switch(this.read0,  true,  false)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  true,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  true,  false)  {	  switch(this.read0,    true)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
312	[BUG]  [BUGGY]  switch(currentState  /  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  /  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  /  EOF_PART_A_STATE)  {	  switch(currentState    +    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
313	[BUG]  [BUGGY]  switch(currentState  *  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  *  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  *  EOF_PART_A_STATE)  {	  switch(currentState    +    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
314	[BUG]  [BUGGY]  switch(currentState  +  EOF_PART_A_STATE,  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  EOF_PART_A_STATE,  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  EOF_PART_A_STATE,  START_BLOCK_STATE)  {	  switch(currentState    +    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
315	[BUG]  [BUGGY]  switch(getState()  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  &  START_BLOCK_STATE)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
316	[BUG]  [BUGGY]  switch(getState()  +  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  +  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  +  getAndMoveToFrontDecode_yy)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
317	[BUG]  [BUGGY]  switch(getState()  &  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  &  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  &  RAND_PART_A_STATE)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
318	[BUG]  [BUGGY]  switch(getState()  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  &  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  &  START_PART_A_STATE)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
319	[BUG]  [BUGGY]  switch(getState()  *  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  *  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  *  getAndMoveToFrontDecode_yy)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
320	[BUG]  [BUGGY]  switch(this.currentState  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
321	[BUG]  [BUGGY]  switch(seqToUnseq  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
322	[BUG]  [BUGGY]  switch(currentState  +  getAndMoveToFrontDecode_yy(),  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  getAndMoveToFrontDecode_yy(),  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  getAndMoveToFrontDecode_yy(),  RAND_PART_A_STATE)  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
323	[BUG]  [BUGGY]  switch(su_ch2  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_ch2  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_ch2  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
324	[BUG]  [BUGGY]  switch(this.selector.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector.toCharArray())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector.toCharArray())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
325	[BUG]  [BUGGY]  switch(selector.toCharArray(),  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.toCharArray(),  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.toCharArray(),  false)  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
326	[BUG]  [BUGGY]  switch(selector.toString())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.toString())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.toString())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
327	[BUG]  [BUGGY]  switch(selector.toCharArray(),  true)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.toCharArray(),  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.toCharArray(),  true)  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
328	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  0)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
329	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  this.seqToUnseq)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
330	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  0,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  0,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  0,  this.seqToUnseq)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
331	[BUG]  [BUGGY]  Switch(seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(seqToUnseq)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
332	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  true)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  true)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
333	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  false)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  false)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
334	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_len();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_len();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_len();	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
335	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_y0();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_y0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_y0();	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
336	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_loop();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_loop();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_loop();	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
337	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode();	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
338	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy(su_z);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy(su_z);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy(su_z);	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
339	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  -  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  -  1;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy()  -  1;	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
340	[BUG]  [BUGGY]  switch(sequenceToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(sequenceToUnseq,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(sequenceToUnseq,  0)  {	  switch(sequenceToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
341	[BUG]  [BUGGY]  switch(sequenceToUnseq,  false)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(sequenceToUnseq,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(sequenceToUnseq,  false)  {	  switch(sequenceToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
342	[BUG]  [BUGGY]  Switch(this.selector,  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  getAndMoveToFrontDecode_yy)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
343	[BUG]  [BUGGY]  Switch(this.selector,  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  0)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
344	[BUG]  [BUGGY]  Switch(this.selector,  true)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  true)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
345	[BUG]  [BUGGY]  Switch(this.selector,  null)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  null)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
346	[BUG]  [BUGGY]  Switch(this.selector,  false)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  false)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
347	[BUG]  [BUGGY]  Switch(this.selector,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  this.blockSize100k)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
348	[BUG]  [BUGGY]  Switch(this.selector,  cftab)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  cftab)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  cftab)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
349	[BUG]  [BUGGY]  Switch(currentState  ||  currentState!=  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState!=  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState!=  RAND_PART_A_STATE)  {	  Switch(currentState    ||    currentState!=    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
350	[BUG]  [BUGGY]  Switch(currentState  ||  currentState!=  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState!=  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState!=  NO_RAND_PART_A_STATE)  {	  Switch(currentState    ||    currentState!=    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
351	[BUG]  [BUGGY]  Switch(currentState  ||  currentState!=  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState!=  RAND_PART_C_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState!=  RAND_PART_C_STATE)  {	  Switch(currentState    ||    currentState!=    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
352	[BUG]  [BUGGY]  Switch(currentState  ||  currentState!=  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState!=  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState!=  RAND_PART_B_STATE)  {	  Switch(currentState    ||    currentState!=    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
353	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
354	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  }	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
355	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
356	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i]  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i]	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
357	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
358	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
359	[BUG]  [BUGGY]  switch(this.seqToUnseq,  this.read1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  this.read1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  this.read1)  {	  switch(this.read0,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
360	[BUG]  [BUGGY]  switch(this.read0,  this.seqToUnseq),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  this.seqToUnseq),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  this.seqToUnseq),  this.blockSize100k)  {	  switch(this.read0,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
361	[BUG]  [BUGGY]  switch(this.seqToUnseq0,  this.read0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq0,  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq0,  this.read0)  {	  switch(this.read0,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
362	[BUG]  [BUGGY]  switch(this.read0,  this.seqToUnseq),  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  this.seqToUnseq),  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  this.seqToUnseq),  this.blockRandomised)  {	  switch(this.read0,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
363	[BUG]  [BUGGY]  switch(currentState  |  EOF_PART_A_STATE,  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  EOF_PART_A_STATE,  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  EOF_PART_A_STATE,  START_BLOCK_STATE)  {	  switch(currentState    |    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
364	[BUG]  [BUGGY]  switch(currentState  |  EOF_PART_A_STATE  |  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  EOF_PART_A_STATE  |  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  EOF_PART_A_STATE  |  START_BLOCK_STATE)  {	  switch(currentState    |    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
365	[BUG]  [BUGGY]  switch(this.selectorMtf,  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf,  0)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
366	[BUG]  [BUGGY]  switch(this.selectorMtf,  true)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf,  true)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
367	[BUG]  [BUGGY]  switch(this.selectorMtf,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf,  this.blockSize100k)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
368	[BUG]  [BUGGY]  switch(this.selectorMtf),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf),  this.blockSize100k)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
369	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
370	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
371	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
372	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
373	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
374	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[0][i]);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[0][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[0][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
375	[BUG]  [BUGGY]  switch(currentState  *  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  *  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  *  START_BLOCK_STATE)  {	  switch(currentState    +    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
376	[BUG]  [BUGGY]  switch(currentState  +  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  RAND_PART_B_STATE)  {	  switch(currentState    +    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
377	[BUG]  [BUGGY]  switch(serialMtf,  false)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(serialMtf,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(serialMtf,  false)  {	  switch(selectorMtf,    true)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
378	[BUG]  [BUGGY]  switch(selectorMtf,  null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  null)  {	  switch(selectorMtf,    true)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
379	[BUG]  [BUGGY]  switch(selector.clone(),  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.clone(),  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.clone(),  getAndMoveToFrontDecode_yy)  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
380	[BUG]  [BUGGY]  switch(selector.clone(),  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.clone(),  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.clone(),  START_BLOCK_STATE)  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
381	[BUG]  [BUGGY]  switch(selector!=  null?  0  :  selector.clone())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector!=  null?  0  :  selector.clone())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector!=  null?  0  :  selector.clone())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
382	[BUG]  [BUGGY]  switch(this.selector.clone())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector.clone())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector.clone())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
383	[BUG]  [BUGGY]  switch(selectionToUnseq.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionToUnseq.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionToUnseq.length)  {	  switch(seqToUnseq.length)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
384	[BUG]  [BUGGY]  switch(seqToUnseq.length  +  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq.length  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq.length  +  1)  {	  switch(seqToUnseq.length)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
385	[BUG]  [BUGGY]  switch(seqToUnseq.length,  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq.length,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq.length,  0)  {	  switch(seqToUnseq.length)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
386	[BUG]  [BUGGY]  Switch(currentState  =  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  RAND_PART_A_STATE)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
387	[BUG]  [BUGGY]  Switch(currentState  =  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  NO_RAND_PART_A_STATE)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
388	[BUG]  [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  START_BLOCK_STATE,  RAND_PART_A_STATE)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
389	[BUG]  [BUGGY]  Switch(currentState  =  EOF)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  EOF)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
390	[BUG]  [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  START_BLOCK_STATE,  0)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
391	[BUG]  [BUGGY]  Switch(currentState,  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  START_BLOCK_STATE)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
392	[BUG]  [BUGGY]  switch(this.inUse)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse)  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
393	[BUG]  [BUGGY]  switch(int[])  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(int[])  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(int[])  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
394	[BUG]  [BUGGY]  switch(inUse,  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse,  0)  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
395	[BUG]  [BUGGY]  switch(currentState  ||  currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  currentState  ==  START_BLOCK_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
396	[BUG]  [BUGGY]  switch(currentState  ||  this.currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  this.currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  this.currentState  ==  START_BLOCK_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
397	[BUG]  [BUGGY]  switch(this.currentState  ||  currentState  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  currentState  ==  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  currentState  ==  RAND_PART_A_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
398	[BUG]  [BUGGY]  switch(this.currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
399	[BUG]  [BUGGY]  switch(this.currentState  &&  currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &&  currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &&  currentState  ==  START_BLOCK_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
400	[BUG]  [BUGGY]  Switch(char)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(char)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(char)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
401	[BUG]  [BUGGY]  Switch(int[])  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int[])  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int[])  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
402	[BUG]  [BUGGY]  Switch(int[]  cftab)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int[]  cftab)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int[]  cftab)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
403	[BUG]  [BUGGY]  Switch(int[]  cftab,  int)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int[]  cftab,  int)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int[]  cftab,  int)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
404	[BUG]  [BUGGY]  Switch(int,  0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int,  0)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
405	[BUG]  [BUGGY]  Switch(int[]  baseLens)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int[]  baseLens)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int[]  baseLens)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
406	[BUG]  [BUGGY]  switch(this.blockSize100k,  this.read0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.blockSize100k,  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.blockSize100k,  this.read0)  {	  switch(this.read0,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
407	[BUG]  [BUGGY]  switch(this.seqToUnseq,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq,  this.blockSize100k)  {	  switch(this.read0,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
408	[BUG]  [BUGGY]  switch(this.bsBuff,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.bsBuff,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.bsBuff,  this.blockSize100k)  {	  switch(this.read0,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
409	[BUG]  [BUGGY]  switch(this.blockSize100k,  this.read1)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.blockSize100k,  this.read1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.blockSize100k,  this.read1)  {	  switch(this.read0,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
410	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_y0())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_y0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_y0())  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
411	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy(),  START_BLOCK_STATE)  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
412	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy(),  RAND_PART_A_STATE)  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
413	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  read0)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy(),  read0)  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
414	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  false)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy(),  false)  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
415	[BUG]  [BUGGY]  switch(selectionToUnseq,  false)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionToUnseq,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionToUnseq,  false)  {	  switch(selectionToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
416	[BUG]  [BUGGY]  switch(selectionToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectionToUnseq,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionToUnseq,  0)  {	  switch(selectionToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
417	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_y0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_y0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_y0)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
418	[BUG]  [BUGGY]  switch(this.getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.getAndMoveToFrontDecode_yy)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
419	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_0)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
420	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_y1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_y1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_y1)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
421	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy,  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy,  0)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
422	[BUG]  [BUGGY]  switch(this.read0,  1)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  1)  {	  switch(this.read0,    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
423	[BUG]  [BUGGY]  switch(this.read0,  2)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  2)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  2)  {	  switch(this.read0,    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
424	[BUG]  [BUGGY]  switch(this.read0,  0,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  0,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  0,  this.seqToUnseq)  {	  switch(this.read0,    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
425	[BUG]  [BUGGY]  switch(this.read0,  0,  this.data.length)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  0,  this.data.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  0,  this.data.length)  {	  switch(this.read0,    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
426	[BUG]  [BUGGY]  switch(in,  EOF_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  EOF_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  EOF_BLOCK_STATE)  {	  switch(this.in,    EOF_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
427	[BUG]  [BUGGY]  switch(this.in,  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  NO_RAND_PART_A_STATE)  {	  switch(this.in,    EOF_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
428	[BUG]  [BUGGY]  switch(this.in,  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  EOF_PART_A_STATE)  {	  switch(this.in,    EOF_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
429	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
430	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLen  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLen  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLen	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
431	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseL  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseL  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseL	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
432	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
433	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_y0();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
434	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
435	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_y0())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_y0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_y0())  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
436	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
437	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i]  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i]	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i],    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
438	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i],  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i],  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i],	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i],    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
439	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i],    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
440	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i],    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
441	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i],    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
442	[BUG]  [BUGGY]  switch(seqToUnseq,  0,  seqToUnseq.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  0,  seqToUnseq.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  0,  seqToUnseq.length)  {	  switch(seqToUnseq,    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
443	[BUG]  [BUGGY]  switch(seqToUnseq,  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  1)  {	  switch(seqToUnseq,    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
444	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length  +  1);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length  +  1);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length  +  1);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    return    read0(cftab,    0,    cftab.length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
445	[BUG]  [BUGGY]  char[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	char[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    return    read0(cftab,    0,    cftab.length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
446	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_z);  return  read0(cftab,  0,  cftab.length);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_z);  return  read0(cftab,  0,  cftab.length);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_z);  return  read0(cftab,  0,  cftab.length);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    return    read0(cftab,    0,    cftab.length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
447	[BUG]  [BUGGY]  int[]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    return    read0(cftab,    0,    cftab.length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
448	[BUG]  [BUGGY]  switch(this.blockSize100k,  this.in)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.blockSize100k,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.blockSize100k,  this.in)  {	  switch(this.in,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
449	[BUG]  [BUGGY]  switch(this.out,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.out,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.out,  this.blockSize100k)  {	  switch(this.in,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
450	[BUG]  [BUGGY]  switch(in,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  this.blockSize100k)  {	  switch(this.in,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
451	[BUG]  [BUGGY]  switch(this.in,  this.blockSize100k  -  1)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.blockSize100k  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.blockSize100k  -  1)  {	  switch(this.in,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
452	[BUG]  [BUGGY]  switch(this.currentState  |  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  |  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  |  START_PART_A_STATE)  {	  switch(this.currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
453	[BUG]  [BUGGY]  Switch(this.blockSize100k  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k  -  1)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
454	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.version)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.version)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.version)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
455	[BUG]  [BUGGY]  switch(inUse,  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse,  false)  {	  switch(selector,    false)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
456	[BUG]  [BUGGY]  Switch(selector,  true)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(selector,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(selector,  true)  {	  switch(selector,    false)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
457	[BUG]  [BUGGY]  switch(this.currentState  -  0xff)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  -  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  -  0xff)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
458	[BUG]  [BUGGY]  Switch(this.currentState  &  0xff)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  &  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  &  0xff)  {	  switch(this.currentState    &    0xff)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
459	[BUG]  [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_yy  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_yy  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  getAndMoveToFrontDecode_yy  -  1)  {	  switch(currentState    |    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
460	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_xy();  break;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_xy();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_xy();  break;	  int[][]    base    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
461	[BUG]  [BUGGY]  Switch(currentState  &  EOF)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  EOF)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
462	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_xy();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_xy();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_xy();	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
463	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy(su_rNToGo);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy(su_rNToGo);	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
464	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy()  +  1;	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
465	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_limit();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_limit();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_limit();	  int    len    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
466	[BUG]  [BUGGY]  switch(getState()  -  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  -  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  -  getAndMoveToFrontDecode_yy)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
467	[BUG]  [BUGGY]  Switch(this.in,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.in,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.in,  this.blockSize100k)  {	  switch(this.in,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
468	[BUG]  [BUGGY]  switch(selectorMtf),  false)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf),  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf),  false)  {	  switch(selectorMtf,    true)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
469	[BUG]  [BUGGY]  Switch(selectorMtf,  false)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(selectorMtf,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(selectorMtf,  false)  {	  switch(selectorMtf,    true)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
470	[BUG]  [BUGGY]  Switch(getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(getAndMoveToFrontDecode_yy)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
471	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy  -  1)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
472	[BUG]  [BUGGY]  Switch(this.selector,  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  this.blockRandomised)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
473	[BUG]  [BUGGY]  switch(selector  ==  null?  0  :  selector.clone())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector  ==  null?  0  :  selector.clone())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector  ==  null?  0  :  selector.clone())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
474	[BUG]  [BUGGY]  switch(selector!=  null?  -1  :  selector.clone())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector!=  null?  -1  :  selector.clone())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector!=  null?  -1  :  selector.clone())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
475	[BUG]  [BUGGY]  switch(this.selectorMtf.length)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf.length)  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
476	[BUG]  [BUGGY]  switch(this.read1,  true)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read1,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read1,  true)  {	  switch(this.read0,    true)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
477	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
478	[BUG]  [BUGGY]  switch(read0  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(read0  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(read0  -  1)  {	  switch(this.read0    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
479	[BUG]  [BUGGY]  switch(this.inUse  -  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse  -  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  -  getAndMoveToFrontDecode_yy())  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
480	[BUG]  [BUGGY]  Switch(this.inUse  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.inUse  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.inUse  &  getAndMoveToFrontDecode_yy())  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
481	[BUG]  [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  &  getAndMoveToFrontDecode_0())  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
482	[BUG]  [BUGGY]  switch(this.currentState  -  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  -  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  -  getAndMoveToFrontDecode_yy)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
483	[BUG]  [BUGGY]  Switch(this.currentState  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  &  getAndMoveToFrontDecode_yy)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
484	[BUG]  [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
485	[BUG]  [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][len]);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][len]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][len]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
486	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][0]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][0]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][0]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
487	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][0]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][0]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][0]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
488	[BUG]  [BUGGY]  switch(currentState  -  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  -  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  -  START_BLOCK_STATE)  {	  switch(currentState    +    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
489	[BUG]  [BUGGY]  switch(currentState  +  EOF_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  EOF_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  EOF_BLOCK_STATE)  {	  switch(currentState    +    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
490	[BUG]  [BUGGY]  switch(this.seqToUnseq  &  0xff)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq  &  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq  &  0xff)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
491	[BUG]  [BUGGY]  switch(this.seqToUnseq  -  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq  -  1)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
492	[BUG]  [BUGGY]  Switch(this.seqToUnseq),  this.read0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq),  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq),  this.read0)  {	  switch(this.read0),    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
493	[BUG]  [BUGGY]  switch(su_rNToGo  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_rNToGo  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_rNToGo  &  getAndMoveToFrontDecode_yy())  {	  switch(inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
494	[BUG]  [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  getAndMoveToFrontDecode_0())  {	  switch(inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
495	[BUG]  [BUGGY]  switch(inUse  -  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  -  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  -  getAndMoveToFrontDecode_yy())  {	  switch(inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
496	[BUG]  [BUGGY]  Switch(currentState  &&  currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &&  currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &&  currentState  ==  START_BLOCK_STATE)  {	  Switch(currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
497	[BUG]  [BUGGY]  switch(selector!=  null?  0  :  selector.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector!=  null?  0  :  selector.toCharArray())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector!=  null?  0  :  selector.toCharArray())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
498	[BUG]  [BUGGY]  switch(selector.getCharArray())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.getCharArray())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.getCharArray())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
499	[BUG]  [BUGGY]  switch(selector!=  null?  -1  :  selector.toCharArray())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector!=  null?  -1  :  selector.toCharArray())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector!=  null?  -1  :  selector.toCharArray())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
500	[BUG]  [BUGGY]  switch(this.in,  this.tempLens)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.tempLens)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.tempLens)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
501	[BUG]  [BUGGY]  switch(this.selectionToUnseq)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectionToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectionToUnseq)  {	  switch(selectionToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
502	[BUG]  [BUGGY]  switch(selectorToUnseq)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorToUnseq)  {	  switch(selectionToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
503	[BUG]  [BUGGY]  switch(currentState  ||  currentState  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  currentState  ==  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  currentState  ==  RAND_PART_A_STATE)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
504	[BUG]  [BUGGY]  switch(currentState  >  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  >  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  >  START_BLOCK_STATE)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
505	[BUG]  [BUGGY]  switch(currentState  -  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  -  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  -  START_PART_A_STATE)  {	  switch(currentState    +    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
506	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
507	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
508	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
509	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
510	[BUG]  [BUGGY]  switch(this.currentState  -  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  -  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  -  getAndMoveToFrontDecode_yy())  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
511	[BUG]  [BUGGY]  switch(this.currentState  ||  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  getAndMoveToFrontDecode_yy())  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
512	[BUG]  [BUGGY]  switch(su_rNToGo  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_rNToGo  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_rNToGo  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
513	[BUG]  [BUGGY]  Switch(currentState  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
514	[BUG]  [BUGGY]  switch(currentState  +  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  +  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  getAndMoveToFrontDecode_0())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
515	[BUG]  [BUGGY]  switch(seqToUnseq  *  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq  *  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq  *  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
516	[BUG]  [BUGGY]  switch(seqToUnseq  -  1  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq  -  1  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq  -  1  -  1)  {	  switch(seqToUnseq    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
517	[BUG]  [BUGGY]  switch(in),  case  EOF)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in),  case  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in),  case  EOF)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
518	[BUG]  [BUGGY]  Switch(in,  this.currentState)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(in,  this.currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(in,  this.currentState)  {	  Switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
519	[BUG]  [BUGGY]  switch(selector!=  null?  0  :  selector.cloneTree())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector!=  null?  0  :  selector.cloneTree())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector!=  null?  0  :  selector.cloneTree())  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
520	[BUG]  [BUGGY]  switch(selector.cloneTree(),  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.cloneTree(),  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.cloneTree(),  getAndMoveToFrontDecode_yy)  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
521	[BUG]  [BUGGY]  switch(currentState  |  BZip2CompressorInputStream)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  BZip2CompressorInputStream)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  BZip2CompressorInputStream)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
522	[BUG]  [BUGGY]  switch(currentState  |  EOF_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  EOF_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  EOF_BLOCK_STATE)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
523	[BUG]  [BUGGY]  switch(read0,  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(read0,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(read0,  0)  {	  switch(this.read0,    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
524	[BUG]  [BUGGY]  switch(this.read0,  0),  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0,  0),  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  0),  {	  switch(this.read0,    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
525	[BUG]  [BUGGY]  switch(currentState  ||  this.currentState  ==  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  this.currentState  ==  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  this.currentState  ==  NO_RAND_PART_A_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
526	[BUG]  [BUGGY]  switch(currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  currentState  ==  NO_RAND_PART_A_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
527	[BUG]  [BUGGY]  switch(currentState  ||  this.currentState  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  this.currentState  ==  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  this.currentState  ==  RAND_PART_A_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
528	[BUG]  [BUGGY]  switch(currentState  ||  EOF  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  EOF  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  EOF  ==  START_BLOCK_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
529	[BUG]  [BUGGY]  switch(currentState  &&  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &&  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &&  START_BLOCK_STATE)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
530	[BUG]  [BUGGY]  switch(currentState  ||  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  NO_RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  NO_RAND_PART_A_STATE)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
531	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy(),  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy(),  getAndMoveToFrontDecode_yy)  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
532	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy()  -  1)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy()  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy()  -  1)  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
533	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  this.read0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  this.read0)  {	  switch(this.read0,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
534	[BUG]  [BUGGY]  switch(this.currentState  +  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  START_BLOCK_STATE)  {	  switch(this.currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
535	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
536	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
537	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i].length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
538	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][0],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][0],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][0],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
539	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse  +  1);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse  +  1);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse  +  1);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
540	[BUG]  [BUGGY]  switch(selectorMtf),  true)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf),  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf),  true)  {	  switch(selectorMtf,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
541	[BUG]  [BUGGY]  Switch(currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ==  START_BLOCK_STATE)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
542	[BUG]  [BUGGY]  Switch(currentState  {  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  {  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  {  START_BLOCK_STATE)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
543	[BUG]  [BUGGY]  Switch(currentState  +  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  +  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  +  EOF_PART_A_STATE)  {	  Switch(currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
544	[BUG]  [BUGGY]  switch(currentState  -  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  -  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  -  EOF_PART_A_STATE)  {	  switch(currentState    +    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
545	[BUG]  [BUGGY]  Switch(this.in,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.in,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.in,  this.seqToUnseq)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
546	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  this.in)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  this.in)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
547	[BUG]  [BUGGY]  Switch(currentState  ||  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  getAndMoveToFrontDecode_yy)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
548	[BUG]  [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode_yy  +  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode_yy  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  getAndMoveToFrontDecode_yy  +  1)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
549	[BUG]  [BUGGY]  switch(this.selectorMtf  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf  -  1)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
550	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy()  +  1;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy()  +  1;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
551	[BUG]  [BUGGY]  switch(this.seqToUnseq  &&  this.currentState)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq  &&  this.currentState)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq  &&  this.currentState)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
552	[BUG]  [BUGGY]  Switch(this.currentState  ||  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  ||  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  ||  this.seqToUnseq)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
553	[BUG]  [BUGGY]  switch(this.currentState  ||  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  this.blockRandomised)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
554	[BUG]  [BUGGY]  if(inUse)  {  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  }	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    return    read0(cftab,    0,    cftab.length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
555	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_xy();  return  read0(cftab,  0,  cftab.length);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_xy();  return  read0(cftab,  0,  cftab.length);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_xy();  return  read0(cftab,  0,  cftab.length);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    return    read0(cftab,    0,    cftab.length);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
556	[BUG]  [BUGGY]  switch(currentState  &  EOF)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &  EOF)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  EOF)  {	  switch(currentState    &    RAND_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
557	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.readUTF();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.readUTF();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.readUTF();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
558	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.readInt();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.readInt();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.readInt();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
559	[BUG]  [BUGGY]  switch(this.seqToUnseq.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq.length)  {	  switch(seqToUnseq.length)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
560	[BUG]  [BUGGY]  switch(su_rNToGo  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_rNToGo  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_rNToGo  &  getAndMoveToFrontDecode_yy)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
561	[BUG]  [BUGGY]  switch(inUse  -  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  -  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  -  getAndMoveToFrontDecode_yy)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
562	[BUG]  [BUGGY]  switch(su_i  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_i  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_i  &  getAndMoveToFrontDecode_yy)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
563	[BUG]  [BUGGY]  switch(currentState  &&  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &&  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &&  START_PART_A_STATE)  {	  switch(currentState    ||    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
564	[BUG]  [BUGGY]  Switch(currentState  ||  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  START_BLOCK_STATE)  {	  Switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
565	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
566	[BUG]  [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  getAndMoveToFrontDecode())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
567	[BUG]  [BUGGY]  switch(this.selector,  this.recvDecodingTables_pos)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  this.recvDecodingTables_pos)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  this.recvDecodingTables_pos)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
568	[BUG]  [BUGGY]  switch(this.decompressConcatenated)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.decompressConcatenated)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.decompressConcatenated)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
569	[BUG]  [BUGGY]  switch(this.selector,  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  this.blockRandomised)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
570	[BUG]  [BUGGY]  switch(su_ch2  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_ch2  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_ch2  &  getAndMoveToFrontDecode_yy())  {	  switch(su_z    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
571	[BUG]  [BUGGY]  switch(inUse,  true)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse,  true)  {	  switch(selector,    true)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
572	[BUG]  [BUGGY]  Switch(selector,  false)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(selector,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(selector,  false)  {	  switch(selector,    true)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
573	[BUG]  [BUGGY]  switch(this.currentState  +  EOF_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  EOF_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  EOF_PART_B_STATE)  {	  switch(this.currentState    &    EOF_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
574	[BUG]  [BUGGY]  Switch(int,  false)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int,  false)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
575	[BUG]  [BUGGY]  Switch(false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(false)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
576	[BUG]  [BUGGY]  Switch(int,  inUse)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int,  inUse)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int,  inUse)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
577	[BUG]  [BUGGY]  Switch(null)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(null)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
578	[BUG]  [BUGGY]  switch(this.currentState  +  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  EOF_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  EOF_PART_A_STATE)  {	  switch(this.currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
579	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_xy();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_xy();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_xy();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
580	[BUG]  [BUGGY]  Switch(this.read0),  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.read0),  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0),  this.seqToUnseq)  {	  Switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
581	[BUG]  [BUGGY]  Switch(read0,  seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(read0,  seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(read0,  seqToUnseq)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
582	[BUG]  [BUGGY]  switch(seqToUnseq,  read1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  read1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  read1)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
583	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  +  2;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy  +  2;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy  +  2;	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
584	[BUG]  [BUGGY]  switch(null,  this.in)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(null,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(null,  this.in)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
585	[BUG]  [BUGGY]  switch(this,  null)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this,  null)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this,  null)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
586	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  this.blockRandomised)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
587	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
588	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
589	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
590	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
591	[BUG]  [BUGGY]  switch(this.in,  this.currentState  -  1)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.currentState  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.currentState  -  1)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
592	[BUG]  [BUGGY]  switch(this.currentState,  inUse)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState,  inUse)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState,  inUse)  {	  switch(this.in,    this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
593	[BUG]  [BUGGY]  switch(inUse  &  0xff)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &  0xff)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  0xff)  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
594	[BUG]  [BUGGY]  switch(inUse  &&  inUse.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &&  inUse.length  >  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &&  inUse.length  >  0)  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
595	[BUG]  [BUGGY]  Switch(currentState  &&  currentState!=  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  &&  currentState!=  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &&  currentState!=  START_BLOCK_STATE)  {	  Switch(currentState    ||    currentState!=    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
596	[BUG]  [BUGGY]  Switch(currentState  ||  currentState!=  EOF_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  ||  currentState!=  EOF_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState!=  EOF_BLOCK_STATE)  {	  Switch(currentState    ||    currentState!=    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
597	[BUG]  [BUGGY]  Switch(selectorMtf  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(selectorMtf  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(selectorMtf  &  getAndMoveToFrontDecode_yy())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
598	[BUG]  [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
599	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
600	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data[i];  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
601	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][0],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][0],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][0],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
602	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
603	[BUG]  [BUGGY]  switch(currentState  |  EOF_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  EOF_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  EOF_PART_B_STATE)  {	  switch(currentState    |    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
604	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(baseLens);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(baseLens);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(baseLens);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
605	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_xy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_xy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_xy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
606	[BUG]  [BUGGY]  char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
607	[BUG]  [BUGGY]  Switch(this.selector,  this.in)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  this.in)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
608	[BUG]  [BUGGY]  switch(this.crc,  this.selector)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.crc,  this.selector)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.crc,  this.selector)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
609	[BUG]  [BUGGY]  switch(this.out,  this.selector)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.out,  this.selector)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.out,  this.selector)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
610	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_limit();  break;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_limit();  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_limit();  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
611	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  +  1;  break;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  +  1;  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy()  +  1;  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
612	[BUG]  [BUGGY]  Switch(this.in,  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.in,  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.in,  0)  {	  switch(this.in,    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
613	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  true)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  true)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
614	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  1)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
615	[BUG]  [BUGGY]  switch(this.selector.restrictByNotNullOrUnseq())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector.restrictByNotNullOrUnseq())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector.restrictByNotNullOrUnseq())  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
616	[BUG]  [BUGGY]  switch(this.read0  -  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.read0  -  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0  -  this.blockSize100k)  {	  switch(this.read0),    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
617	[BUG]  [BUGGY]  Switch(this.blockSize100k),  this.read0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k),  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k),  this.read0)  {	  switch(this.read0),    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
618	[BUG]  [BUGGY]  Switch(selector,  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(selector,  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(selector,  getAndMoveToFrontDecode_yy)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
619	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy),  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy),  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_yy),  false)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
620	[BUG]  [BUGGY]  switch(this.in,  RAND_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  RAND_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  RAND_BLOCK_STATE)  {	  switch(this.in,    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
621	[BUG]  [BUGGY]  switch(getCrc()  -  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  -  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  -  getAndMoveToFrontDecode_yy)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
622	[BUG]  [BUGGY]  switch(getCrc()  &  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  RAND_PART_A_STATE)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
623	[BUG]  [BUGGY]  switch(getCrc()  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  START_PART_A_STATE)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
624	[BUG]  [BUGGY]  Switch(this.blockSize100k,  this.read0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k,  this.read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k,  this.read0)  {	  switch(this.read0,    this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
625	[BUG]  [BUGGY]  switch(inUse  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  START_BLOCK_STATE)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
626	[BUG]  [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  getAndMoveToFrontDecode_YY)  {	  switch(inUse    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
627	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(su_ch2);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
628	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(suffix);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(suffix);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(suffix);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
629	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy(1);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy(1);	  int[][]    cftab    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
630	[BUG]  [BUGGY]  switch(getState()  >  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getState()  >  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  >  getAndMoveToFrontDecode_yy)  {	  switch(getState()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
631	[BUG]  [BUGGY]  switch(selectorMtf.charAt(0))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf.charAt(0))  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf.charAt(0))  {	  switch(selectorMtf.length)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
632	[BUG]  [BUGGY]  char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
633	[BUG]  [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  true)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  START_BLOCK_STATE,  true)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
634	[BUG]  [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  START_BLOCK_STATE,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  START_BLOCK_STATE,  false)  {	  Switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
635	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][0],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][0],  0,  i);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][0],  0,  i);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(inUse,    0,    data[i][i],    0,    i);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
636	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
637	[BUG]  [BUGGY]  switch(currentState  |  START_BLOCK_STATE  -  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  START_BLOCK_STATE  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  START_BLOCK_STATE  -  1)  {	  switch(currentState    |    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
638	[BUG]  [BUGGY]  switch(in,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  this.seqToUnseq)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
639	[BUG]  [BUGGY]  switch(this.in,  this.seqToUnseq  -  1)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.seqToUnseq  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.seqToUnseq  -  1)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
640	[BUG]  [BUGGY]  switch(seqToUnseq,  this.in)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  this.in)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  this.in)  {	  switch(this.in,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
641	[BUG]  [BUGGY]  switch(this.in,  this.selector),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector),  this.blockSize100k)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
642	[BUG]  [BUGGY]  switch(this.in,  this.selector,  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector,  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector,  this.blockRandomised)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
643	[BUG]  [BUGGY]  switch(this.in,  this.selector),  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.selector),  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector),  this.blockRandomised)  {	  switch(this.in,    this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
644	[BUG]  [BUGGY]  Switch(currentState  =  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  =  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  START_PART_A_STATE)  {	  Switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
645	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_rNToGo);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_rNToGo);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_rNToGo);  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
646	[BUG]  [BUGGY]  switch(this.in,  this.saveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.saveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.saveToFrontDecode_yy)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
647	[BUG]  [BUGGY]  switch(this.in,  this.socket)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.socket)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.socket)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
648	[BUG]  [BUGGY]  switch(this.in,  this.saveToUnseq)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  this.saveToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.saveToUnseq)  {	  switch(this.in,    this.in)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
649	[BUG]  [BUGGY]  switch(this.currentState  &  NO_RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  NO_RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  NO_RAND_PART_B_STATE)  {	  switch(this.currentState    &    EOF_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
650	[BUG]  [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_YY())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_YY())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  &  getAndMoveToFrontDecode_YY())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
651	[BUG]  [BUGGY]  switch(selectorMtf  -  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  -  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  -  getAndMoveToFrontDecode_yy())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
652	[BUG]  [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_ptr())  {  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_ptr())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  &  getAndMoveToFrontDecode_ptr())  {	  switch(selectorMtf    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
653	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  getAndMoveToFrontDecode_0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_0)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
654	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy),  true)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy),  true)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_yy),  true)  {	  switch(selector,    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
655	[BUG]  [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  getAndMoveToFrontDecode_YY)  {	  switch(currentState    ||    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
656	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  inUse,  data[i][i]);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  inUse,  data[i][i]);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data,    0,    inUse,    data[i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
657	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i][i]);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
658	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy()  &&  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy()  &&  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy()  &&  getAndMoveToFrontDecode_yy())  {	  switch(getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
659	[BUG]  [BUGGY]  switch(currentState  -  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  -  getAndMoveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  -  getAndMoveToFrontDecode_yy)  {	  switch(currentState    |    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
660	[BUG]  [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  getAndMoveToFrontDecode_YY)  {	  switch(currentState    |    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
661	[BUG]  [BUGGY]  Switch(currentState  +  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState  +  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  +  START_BLOCK_STATE)  {	  Switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
662	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_ch2);  break;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_ch2);  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_ch2);  break;	  int[][]    base    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
663	[BUG]  [BUGGY]  char[]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char[]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	char[]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();	  int[][]    base    =    getAndMoveToFrontDecode_yy();    return    base.read0();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
664	[BUG]  [BUGGY]  Switch(this.selector,  this.selector)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.selector,  this.selector)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector,  this.selector)  {	  Switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
665	[BUG]  [BUGGY]  switch(inUse,  read0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse,  read0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
666	[BUG]  [BUGGY]  switch(seqToUnseq,  read0  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  read0  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  read0  -  1)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
667	[BUG]  [BUGGY]  Switch(seqToUnseq,  read0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(seqToUnseq,  read0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(seqToUnseq,  read0)  {	  switch(seqToUnseq,    read0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
668	[BUG]  [BUGGY]  switch(currentState  &  NON_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &  NON_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  NON_PART_A_STATE)  {	  switch(currentState    &    RAND_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
669	[BUG]  [BUGGY]  switch(currentState  ==  START_BLOCK_STATE  ||  currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ==  START_BLOCK_STATE  ||  currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ==  START_BLOCK_STATE  ||  currentState  ==  START_BLOCK_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
670	[BUG]  [BUGGY]  switch(currentState  ==  START_BLOCK_STATE  ||  currentState  ==  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ==  START_BLOCK_STATE  ||  currentState  ==  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ==  START_BLOCK_STATE  ||  currentState  ==  RAND_PART_A_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
671	[BUG]  [BUGGY]  switch(currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ==  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ==  START_BLOCK_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
672	[BUG]  [BUGGY]  switch(currentState  ||  currentState  ==  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  currentState  ==  RAND_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  currentState  ==  RAND_PART_B_STATE)  {	  switch(this.currentState    ||    currentState    ==    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
673	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    inUse);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
674	[BUG]  [BUGGY]  switch(selector.getTree())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.getTree())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.getTree())  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
675	[BUG]  [BUGGY]  switch(selector.getTreeLength())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.getTreeLength())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.getTreeLength())  {	  switch(selector.cloneTree())    {    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
676	[BUG]  [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_YY())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_YY())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  &  getAndMoveToFrontDecode_YY())  {	  switch(this.inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
677	[BUG]  [BUGGY]  switch(selectorMtf),  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selectorMtf),  0)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf),  0)  {	  switch(selectorMtf,    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
678	[BUG]  [BUGGY]  switch(seqToUnseq.size())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq.size())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq.size())  {	  switch(seqToUnseq.length)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
679	[BUG]  [BUGGY]  switch(seqToUnseq.length  -  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq.length  -  2)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq.length  -  2)  {	  switch(seqToUnseq.length)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
680	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  STRICT_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  STRICT_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  STRICT_BLOCK_STATE)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
681	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  this)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.restrictByNotNullOrUnseq(),  this)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq(),  this)  {	  switch(selector.restrictByNotNullOrUnseq())    {    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
682	[BUG]  [BUGGY]  Switch(this.seqToUnseq,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq,  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq,  this.blockSize100k)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
683	[BUG]  [BUGGY]  Switch(this.seqToUnseq),  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq),  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq),  this.seqToUnseq)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
684	[BUG]  [BUGGY]  Switch(this.seqToUnseq),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.seqToUnseq),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq),  this.blockSize100k)  {	  Switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
685	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  -  1;  break;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy()  -  1;  break;  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy()  -  1;  break;	  int    len    =    getAndMoveToFrontDecode_yy();    break;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
686	[BUG]  [BUGGY]  switch(currentState  <  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  <  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  <  START_BLOCK_STATE)  {	  switch(currentState    =    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
687	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode_YY)  {	  switch(su_z    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
688	[BUG]  [BUGGY]  switch(su_z  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  START_BLOCK_STATE)  {	  switch(su_z    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
689	[BUG]  [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  getAndMoveToFrontDecode_YY)  {	  switch(getCrc()    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
690	[BUG]  [BUGGY]  switch(this.currentState  +  START_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  START_PART_B_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  START_PART_B_STATE)  {	  switch(this.currentState    &    START_PART_B_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
691	[BUG]  [BUGGY]  switch(inUseToUnseq)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUseToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUseToUnseq)  {	  switch(sequenceToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
692	[BUG]  [BUGGY]  switch(sequenceToUnseq.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(sequenceToUnseq.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(sequenceToUnseq.length)  {	  switch(sequenceToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
693	[BUG]  [BUGGY]  switch(this.sequenceToUnseq)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.sequenceToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.sequenceToUnseq)  {	  switch(sequenceToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
694	[BUG]  [BUGGY]  switch(sequenceToUnseq  -  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(sequenceToUnseq  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(sequenceToUnseq  -  1)  {	  switch(sequenceToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
695	[BUG]  [BUGGY]  switch(this.in,  null  &&  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  null  &&  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null  &&  this.seqToUnseq)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
696	[BUG]  [BUGGY]  switch(this.in,  cftab)  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  cftab)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  cftab)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
697	[BUG]  [BUGGY]  switch(this.in,  null  &&  this.saveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.in,  null  &&  this.saveToFrontDecode_yy)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null  &&  this.saveToFrontDecode_yy)  {	  switch(this.in,    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
698	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_ch2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_ch2);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy(su_ch2);	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
699	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_YY())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_YY())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_YY())  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
700	[BUG]  [BUGGY]  Switch(this.currentState  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.currentState  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState  &  getAndMoveToFrontDecode_yy())  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
701	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_0())    {    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
702	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  data.length;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]	  if(inUse)    {    for(int    i    =    0,    len    =    inUse;    i    <    len;    ++i)    {    System.arraycopy(data[i][i],    0,    data[i][i][i]);    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
703	[BUG]  [BUGGY]  Switch(inUse  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(inUse  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(inUse  &  getAndMoveToFrontDecode_yy())  {	  switch(inUse    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
704	[BUG]  [BUGGY]  switch(inUse.clone())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse.clone())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse.clone())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
705	[BUG]  [BUGGY]  switch(selector.reset())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.reset())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.reset())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
706	[BUG]  [BUGGY]  switch(selector.read())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.read())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.read())  {	  switch(selector.clone())    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
707	[BUG]  [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode0())  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode0())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  getAndMoveToFrontDecode0())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
708	[BUG]  [BUGGY]  switch(currentState  &  getAndMoveToFrontDecodeBlock())  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  &  getAndMoveToFrontDecodeBlock())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  getAndMoveToFrontDecodeBlock())  {	  switch(currentState    &    getAndMoveToFrontDecode())    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
709	[BUG]  [BUGGY]  switch(inUse  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    +    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
710	[BUG]  [BUGGY]  switch(this.readOnly)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.readOnly)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.readOnly)  {	  switch(this.read1)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
711	[BUG]  [BUGGY]  switch(inUse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
712	[BUG]  [BUGGY]  switch(inUse  &&  inUse)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &&  inUse)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &&  inUse)  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
713	[BUG]  [BUGGY]  switch(inUse  &&  isEnabled(Feature.QUOTE_BLOCK_STATE))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(inUse  &&  isEnabled(Feature.QUOTE_BLOCK_STATE))  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &&  isEnabled(Feature.QUOTE_BLOCK_STATE))  {	  switch(inUse)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
714	[BUG]  [BUGGY]  Switch(currentState,  0,  cftab.length)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(currentState,  0,  cftab.length)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  0,  cftab.length)  {	  Switch(currentState,    0)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
715	[BUG]  [BUGGY]  char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	char[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
716	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_initialize();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_initialize();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_initialize();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens	  int[][]    baseLens    =    getAndMoveToFrontDecode_yy();    for(int    i    =    0,    len    =    baseLens.length;    i    <    len;    ++i)    {    System.arraycopy(baseLens,    0,    data[i],    0,    baseLens[i]);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
717	[BUG]  [BUGGY]  switch(this.selectorMtf  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf  &  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf  &  START_PART_A_STATE)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
718	[BUG]  [BUGGY]  switch(this.selectorMtf),  this.blockRandomised)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf),  this.blockRandomised)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf),  this.blockRandomised)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
719	[BUG]  [BUGGY]  switch(this.selectorMtf  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selectorMtf  &  START_BLOCK_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf  &  START_BLOCK_STATE)  {	  switch(this.selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
720	[BUG]  [BUGGY]  switch(currentState  -  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  -  getAndMoveToFrontDecode_yy())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  -  getAndMoveToFrontDecode_yy())  {	  switch(currentState    |    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
721	[BUG]  [BUGGY]  switch(selector.getType())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.getType())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.getType())  {	  switch(selector,    true)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
722	[BUG]  [BUGGY]  switch(this.blockSize100k,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.blockSize100k,  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.blockSize100k,  this.seqToUnseq)  {	  switch(this.read0,    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
723	[BUG]  [BUGGY]  switch(seqToUnseq,  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(seqToUnseq,  2)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  2)  {	  switch(seqToUnseq,    0)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
724	[BUG]  [BUGGY]  switch(this.currentState  +  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  START_PART_A_STATE)  {	  switch(this.currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
725	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_h);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_h);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_h);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
726	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_i2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(su_i2);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(su_i2);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
727	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(suffix);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy(suffix);  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy(suffix);	  int[][]    base    =    getAndMoveToFrontDecode_yy();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
728	[BUG]  [BUGGY]  Switch(int,  cftab)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(int,  cftab)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int,  cftab)  {	  Switch(int)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
729	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_YY)  {	  switch(this.currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
730	[BUG]  [BUGGY]  switch(destOffs,  false)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(destOffs,  false)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(destOffs,  false)  {	  switch(selector,    false)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
731	[BUG]  [BUGGY]  switch(this.seqToUnseq  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.seqToUnseq  &  START_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq  &  START_PART_A_STATE)  {	  switch(this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
732	[BUG]  [BUGGY]  Switch(this.blockSize100k  |  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k  |  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k  |  this.blockSize100k)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
733	[BUG]  [BUGGY]  Switch(this.blockSize100k),  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k),  this.seqToUnseq)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k),  this.seqToUnseq)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
734	[BUG]  [BUGGY]  Switch(this.blockSize100k  -  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  Switch(this.blockSize100k  -  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k  -  this.blockSize100k)  {	  Switch(this.blockSize100k)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
735	[BUG]  [BUGGY]  switch(this.currentState  +  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  +  RAND_PART_A_STATE)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  +  RAND_PART_A_STATE)  {	  switch(this.currentState    &    RAND_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
736	[BUG]  [BUGGY]  switch(this.currentState  ||  this.seqToUnseq  -  1)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.currentState  ||  this.seqToUnseq  -  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  this.seqToUnseq  -  1)  {	  switch(this.currentState    ||    this.seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
737	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_YY)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_YY)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_YY)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
738	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy  +  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(getAndMoveToFrontDecode_yy  +  1)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy  +  1)  {	  switch(getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
739	[BUG]  [BUGGY]  switch(in,  cftab)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in,  cftab)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in,  cftab)  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
740	[BUG]  [BUGGY]  switch(in.read())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(in.read())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in.read())  {	  switch(in)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
741	[BUG]  [BUGGY]  switch(selector.getLength())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.getLength())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.getLength())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
742	[BUG]  [BUGGY]  switch(selector.toBlock())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(selector.toBlock())  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.toBlock())  {	  switch(selector.toCharArray())    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
743	[BUG]  [BUGGY]  switch(currentState  ||  BZip2CompressorInputStream)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(currentState  ||  BZip2CompressorInputStream)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  BZip2CompressorInputStream)  {	  switch(currentState    ||    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
744	[BUG]  [BUGGY]  switch(this.selector,  this.selector)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector,  this.selector)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector,  this.selector)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
745	[BUG]  [BUGGY]  switch(this.selector),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  int  read0()  throws  IOException  {      [BUGGY]  switch(this.selector),  this.blockSize100k)  {  [BUGGY]      case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector),  this.blockSize100k)  {	  switch(this.selector)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
