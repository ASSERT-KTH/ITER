bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector,  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  getAndMoveToFrontDecode_yy)  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  switch(this.selector)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.selector)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selector)  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  switch(selector,  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector,  0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  0)  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  switch(selector,  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector,  false)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  false)  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  switch(selector,  true)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector,  true)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector,  true)  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  switch(in)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(in)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(in)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  switch(this.in,  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  START_BLOCK_STATE)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  switch(this.in,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  this.seqToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.seqToUnseq)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  switch(this.in,  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  0)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  switch(this.in,  null)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  null)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  null)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  switch(this.in,  this.selector)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  this.selector)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.selector)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  switch(currentState  &  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  &  RAND_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  RAND_PART_A_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  switch(currentState  |  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  |  START_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  START_PART_A_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  switch(currentState  &  NO_RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  &  NO_RAND_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  NO_RAND_PART_A_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  switch(currentState  &  RAND_PART_C_STATE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  &  RAND_PART_C_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  RAND_PART_C_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  switch(currentState  &  RAND_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  &  RAND_PART_B_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  RAND_PART_B_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  switch(this.currentState  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  START_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  START_PART_A_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  switch(this.currentState  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  START_BLOCK_STATE)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  switch(this.currentState  &  RAND_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  RAND_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  RAND_PART_A_STATE)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  switch(this.currentState  &  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  EOF_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  EOF_PART_A_STATE)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  switch(this.currentState  &  START_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  START_PART_B_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  START_PART_B_STATE)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  switch(selectionToUnseq)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selectionToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectionToUnseq)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  switch(seqToUnseq,  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(seqToUnseq,  0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  0)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  switch(seqToUnseq,  read0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(seqToUnseq,  read0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq,  read0)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  switch(this.selectorMtf)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.selectorMtf)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.selectorMtf)  {	  switch(selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  switch(selectorMtf,  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selectorMtf,  0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  0)  {	  switch(selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  switch(selectorMtf,  false)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selectorMtf,  false)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  false)  {	  switch(selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  switch(selectorMtf,  true)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selectorMtf,  true)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf,  true)  {	  switch(selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  switch(currentState  |  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  |  EOF_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  EOF_PART_A_STATE)  {	  switch(currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode())  {  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  getAndMoveToFrontDecode())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selectorMtf  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf  &  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i]);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i]  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i]  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i]	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i],  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i],  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i][i],	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i]);  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i]);  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy();  for(int  i  =  0,  len  =  baseLens.length;  i  <  len;  ++i)  {  System.arraycopy(baseLens,  0,  data[i],  0,  baseLens[i]);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  switch(this.read0,  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0,  this.seqToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  this.seqToUnseq)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  switch(this.read0),  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0),  this.seqToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0),  this.seqToUnseq)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  switch(this.read0),  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0),  this.blockSize100k)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0),  this.blockSize100k)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  switch(this.read0,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0,  this.blockSize100k)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  this.blockSize100k)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  switch(this.read0,  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0,  0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  0)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  switch(this.read0,  true)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0,  true)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0,  true)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  switch(getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  |  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(su_z  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(su_z  &  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  switch(getState()  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(getState()  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getState()  &  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(getCrc()  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(getCrc()  &  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  switch(currentState  |  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  |  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  |  START_BLOCK_STATE)  {	  switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  Switch(this.currentState)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(this.currentState)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.currentState)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  Switch(this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(this.seqToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.seqToUnseq)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  Switch(this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(this.blockSize100k)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.blockSize100k)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  Switch(int)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(int)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(int)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  Switch(this.selector)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(this.selector)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.selector)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  Switch(currentState,  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState,  0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState,  0)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  switch(currentState  ||  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  ||  START_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  START_PART_A_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  switch(this.read1)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read1)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read1)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
64	[BUG]  [BUGGY]  switch(this.read0  -  1)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.read0  -  1)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.read0  -  1)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
65	[BUG]  [BUGGY]  Switch(this.read0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(this.read0)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(this.read0)  {	  switch(this.read0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  switch(selector.toCharArray())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector.toCharArray())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.toCharArray())  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  switch(inUse)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(inUse)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse)  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode_yy)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  ||  getAndMoveToFrontDecode_yy)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  getAndMoveToFrontDecode_yy)  {	  switch(currentState    &    getAndMoveToFrontDecode_yy)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  inUse);  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data,  0,  inUse,  data[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  baseLens  =  getAndMoveToFrontDecode_yy;  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  baseLens  =  getAndMoveToFrontDecode_yy;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(data[i][i],  0,  data[i][i]);  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	if(inUse)  {  for(int  i  =  0,  len  =  inUse;  i  <  len;  ++i)  {  System.arraycopy(inUse,  0,  data[i][i],  0,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(inUse  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(inUse  &  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
77	[BUG]  [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.inUse  &  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.inUse  &  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  switch(currentState  +  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  +  EOF_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  EOF_PART_A_STATE)  {	  switch(currentState    &    EOF_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  Switch(currentState  &  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState  &  START_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  START_PART_A_STATE)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
80	[BUG]  [BUGGY]  Switch(currentState  &  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState  &  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  START_BLOCK_STATE)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  Switch(currentState  &  EOF_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState  &  EOF_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  &  EOF_PART_A_STATE)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  Switch(currentState  ||  currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState  ||  currentState  ==  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState  ==  START_BLOCK_STATE)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
83	[BUG]  [BUGGY]  switch(this.currentState  &  0xff)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  0xff)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  0xff)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  switch(this.currentState  &  EOF_PART_B_STATE)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  &  EOF_PART_B_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  &  EOF_PART_B_STATE)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
85	[BUG]  [BUGGY]  switch(this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.seqToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.seqToUnseq)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  switch(seqToUnseq.length)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(seqToUnseq.length)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq.length)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  switch(this.in,  EOF_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  EOF_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  EOF_BLOCK_STATE)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  switch(this.in,  this.currentState)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  this.currentState)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.currentState)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
89	[BUG]  [BUGGY]  switch(currentState  ||  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  ||  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  ||  START_BLOCK_STATE)  {	  switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  switch(currentState  +  START_PART_A_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  +  START_PART_A_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  START_PART_A_STATE)  {	  switch(currentState    &    START_PART_A_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  switch(currentState  +  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  +  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  START_BLOCK_STATE)  {	  switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  switch(currentState  =  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  =  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  =  START_BLOCK_STATE)  {	  switch(currentState    &    START_BLOCK_STATE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  Switch(currentState  ||  currentState!=  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState  ||  currentState!=  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  ||  currentState!=  START_BLOCK_STATE)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  Switch(currentState  =  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  Switch(currentState  =  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	Switch(currentState  =  START_BLOCK_STATE)  {	  Switch(currentState)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
95	[BUG]  [BUGGY]  switch(selectorMtf.length)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selectorMtf.length)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selectorMtf.length)  {	  switch(selectorMtf)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
96	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy();  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  return  base.read0();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
100	[BUG]  [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  cftab  =  getAndMoveToFrontDecode_yy();  return  read0(cftab,  0,  cftab.length);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
101	[BUG]  [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy();  break;  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int  len  =  getAndMoveToFrontDecode_yy();  break;  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int  len  =  getAndMoveToFrontDecode_yy();  break;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
102	[BUG]  [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  break;  [CE]  illegal  start  of  type  [FE]                              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  int[][]  base  =  getAndMoveToFrontDecode_yy();  break;  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	int[][]  base  =  getAndMoveToFrontDecode_yy();  break;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
103	[BUG]  [BUGGY]  switch(this.currentState  ||  currentState  ==  START_BLOCK_STATE)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  ||  currentState  ==  START_BLOCK_STATE)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  currentState  ==  START_BLOCK_STATE)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
104	[BUG]  [BUGGY]  switch(this.currentState  ||  this.seqToUnseq)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.currentState  ||  this.seqToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.currentState  ||  this.seqToUnseq)  {	  switch(this.currentState)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
105	[BUG]  [BUGGY]  switch(selector.cloneTree())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector.cloneTree())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.cloneTree())  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
106	[BUG]  [BUGGY]  switch(selector.restrictByNotNullOrUnseq())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector.restrictByNotNullOrUnseq())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.restrictByNotNullOrUnseq())  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
107	[BUG]  [BUGGY]  switch(selector.clone())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(selector.clone())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(selector.clone())  {	  switch(selector)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
108	[BUG]  [BUGGY]  switch(this.in,  this.blockSize100k)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  this.blockSize100k)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.blockSize100k)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
109	[BUG]  [BUGGY]  switch(this.in,  this.in)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(this.in,  this.in)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(this.in,  this.in)  {	  switch(this.in)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
110	[BUG]  [BUGGY]  switch(sequenceToUnseq)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(sequenceToUnseq)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(sequenceToUnseq)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
111	[BUG]  [BUGGY]  switch(seqToUnseq  -  1)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(seqToUnseq  -  1)  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(seqToUnseq  -  1)  {	  switch(seqToUnseq)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
112	[BUG]  [BUGGY]  switch(currentState  +  getAndMoveToFrontDecode_yy())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  +  getAndMoveToFrontDecode_yy())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  +  getAndMoveToFrontDecode_yy())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
113	[BUG]  [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode_0())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  int  read0()  throws  IOException  {    [BUGGY]  switch(currentState  &  getAndMoveToFrontDecode_0())  {  [BUGGY]    case  EOF:  return  -1;  case  START_BLOCK_STATE:  return  setupBlock();  case  RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  RAND_PART_B_STATE:  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	197	197	1	replace	switch(currentState  &  getAndMoveToFrontDecode_0())  {	  switch(currentState    &    getAndMoveToFrontDecode_yy())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
