bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandPartA();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandPartA_STATE();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]  return  setupNO_RAND_PART_A_STATE();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNO_RAND_PART_A_STATE();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNO_RAND_PART_A_STATE();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
4	[BUG]  [BUGGY]  return  setupNoRandPartC();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandPartC();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartC();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
5	[BUG]  [BUGGY]  return  setupNO_RAND_PART_B();  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNO_RAND_PART_B();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNO_RAND_PART_B();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
6	[BUG]  [BUGGY]  return  setupNoSize100k();  [CE]  illegal  start  of  type  [FE]              AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoSize100k();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]    [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	  	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
8	[BUG]  [BUGGY]  return  setupNoRandpartA();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandpartA();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandpartA();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
9	[BUG]  [BUGGY]  return  setupNORANDPartA();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNORANDPartA();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORANDPartA();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
10	[BUG]  [BUGGY]  return  setupNonRandPartA();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNonRandPartA();  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonRandPartA();	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
11	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE);  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE);	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
12	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
13	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE);  [BUGGY]    case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE);	return  setupNoRandPartB();  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
