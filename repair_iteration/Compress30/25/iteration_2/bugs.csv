bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  setupNO_RAND_PART_B_STATE();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNO_RAND_PART_B_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNO_RAND_PART_B_STATE();	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNoRandPartC();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNoRandPartC();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupNoRandPartC();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNoRandPartC();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNoRandPartC();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupNoRandPartC();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNoRandPartB();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNoRandPartB();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupNoRandPartB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  return  setupNO_RAND_PART_A();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNO_RAND_PART_A();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNO_RAND_PART_A();	  return    setupNonRandPartA();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  return  setupNoSize100k(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoSize100k(no_RAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_RAND_PART_A_STATE);	  return    setupNoSize100k();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  return  setupNoSize100k(no_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoSize100k(no_RAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_RAND_PART_B_STATE);	  return    setupNoSize100k();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  return  setupNoSize100k(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoSize100k(no_rAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_rAND_PART_A_STATE);	  return    setupNoSize100k();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  return  setupNoSize100k()  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoSize100k()  /  NO_RAND_PART_A_STATE;  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k()  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupRandPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupRandPartA();	  return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  return  setupNoRandPart_B();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPart_B();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_B();	  return    setupNO_RAND_PART_B();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  START_BLOCK_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  START_BLOCK_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  EOF);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  EOF);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  START_BLOCK_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  START_BLOCK_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  EOF);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  EOF);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_C_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  return  setupNoRandpartB();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandpartB();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandpartB();	  return    setupNoRandpartA();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  START_BLOCK_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  START_BLOCK_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  EOF);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  EOF);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  return  setupNoRANDPartA_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRANDPartA_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPartA_STATE();	  return    setupNO_RAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  return  setupNoRandPartA()  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA()  +  1;  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA()  +  1;	  return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  return  setupNORAND_PART_A_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNORAND_PART_A_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_PART_A_STATE();	  return    setupNO_RAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  return  setupNORAND_Part_A_STATE();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNORAND_Part_A_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_Part_A_STATE();	  return    setupNO_RAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  return  setupNORAND_PART_B();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNORAND_PART_B();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_PART_B();	  return    setupNO_RAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  return  setupNORandPartA();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNORandPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORandPartA();	  return    setupNonRandPartA();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  return  setupNoRandPartA(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA(no_RAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(no_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  return  setupNoRandPartA(no_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA(no_RAND_PART_B_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(no_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  return  setupNoRandPartA(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA(no_rAND_PART_A_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(no_rAND_PART_A_STATE);	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  return  setupNORANDPartA_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNORANDPartA_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORANDPartA_STATE();	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  return  setupNoRandPartA();  case  NO_RAND_PART_B_STATE:  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA();  case  NO_RAND_PART_B_STATE:  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA();  case  NO_RAND_PART_B_STATE:	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNoRandPartB();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNoRandPartB();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupNoRandPartB();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNoRandPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupNoRandPartA();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  return  setupNORANDPartB();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNORANDPartB();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORANDPartB();	  return    setupNORANDPartA();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  return  setupOwnPartA();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupOwnPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupOwnPartA();	  return    setupNORANDPartA();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  return  setupNoRANDPartA();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRANDPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPartA();	  return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
39	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(null);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(null);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(null);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  return  setupNonPartA();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNonPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonPartA();	  return    setupNORANDPartA();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  return  setupNumberPartA();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNumberPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNumberPartA();	  return    setupNORANDPartA();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  return  setupNoRandPARTA();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPARTA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPARTA();	  return    setupNoRandpartA();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  return  setupNoRandPart_A_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPart_A_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_A_STATE();	  return    setupNO_RAND_PART_B();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  return  setupNoRANDPart_B();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRANDPart_B();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPart_B();	  return    setupNO_RAND_PART_B();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_C_STATE);  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_C_STATE);	  return    setupNoRandPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  return  setupNonRandPartB();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNonRandPartB();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonRandPartB();	  return    setupNonRandPartA();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  return  setupNoRandPart_B_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRandPart_B_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_B_STATE();	  return    setupNoSize100k();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  return  setupNoRANDPart_A_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  return  setupNoRANDPart_A_STATE();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPart_A_STATE();	  return    setupNO_RAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:    [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNoRandPartA();  [BUGGY]      case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupNoRandPartA();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
