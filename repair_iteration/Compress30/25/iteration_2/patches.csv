bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  START_BLOCK_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  return  setupNoRandPartA(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA(START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(START_BLOCK_STATE);	  return    setupNoRandPartA(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
7	[BUG]  [BUGGY]  return  setupNoRandPartA(NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA(NO_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(NO_RAND_PART_B_STATE);	  return    setupNoRandPartA(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
8	[BUG]  [BUGGY]  return  setupNoRandPartC(no_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartC(no_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartC(no_RAND_PART_B_STATE);	  return    setupNoRandPartA(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
9	[BUG]  [BUGGY]  return  setupNoSize100k(NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(NO_RAND_PART_A_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  return  setupNoSize100k(NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(NO_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(NO_RAND_PART_B_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  return  setupNoSize100k(START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(START_BLOCK_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  return  setupNoSize100k(no_RAND_PART_B_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(no_RAND_PART_B_STATE,  START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_RAND_PART_B_STATE,  START_BLOCK_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  return  setupNoSize100k(no_RAND_PART_B_STATE,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(no_RAND_PART_B_STATE,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_RAND_PART_B_STATE,  NO_RAND_PART_A_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  Return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  Return  setupNoRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	Return  setupNoRandPartA();	  return    setupNoRandPartA()    +    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
15	[BUG]  [BUGGY]  return  setupNORAND_PART_B_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNORAND_PART_B_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_PART_B_STATE();	  return    setupNORAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
16	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE,  START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE,  START_BLOCK_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupNoRandPartC();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupNoRandPartC();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  START_BLOCK_STATE:  return  setupNoRandPartC();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupSize100k();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupSize100k();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupSize100k();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupStandardBlock();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupStandardBlock();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupStandardBlock();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartC();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_A_STATE:  return  setupRandPartC();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  return  setupNoSize100k(no_rAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(no_rAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_rAND_PART_B_STATE);	  return    setupNoSize100k(no_rAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  return  setupNoRandPartA(NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA(NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(NO_RAND_PART_A_STATE);	  return    setupNoRandPartA(no_rAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
23	[BUG]  [BUGGY]  return  setupNoRandPartB(no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartB(no_rAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartB(no_rAND_PART_A_STATE);	  return    setupNoRandPartA(no_rAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
24	[BUG]  [BUGGY]  return  setupNoRandPartA(no_rAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA(no_rAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA(no_rAND_PART_B_STATE);	  return    setupNoRandPartA(no_rAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
25	[BUG]  [BUGGY]  return  setupNoRANDPartB();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRANDPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPartB();	  return    setupNoRANDPart_B();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
26	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  NO_RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  NO_RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  NO_RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  NO_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  NO_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  NO_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(no_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  no_RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  no_RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  no_RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(no_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupNoRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  START_BLOCK_STATE:  return  setupNoRandPartA();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
33	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupSize100k();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupSize100k();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupSize100k();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
34	[BUG]  [BUGGY]  case  RAND_PART_B_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_B_STATE:  return  setupRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_B_STATE:  return  setupRandPartA();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
35	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNORandPartA();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNORandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupNORandPartA();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
36	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:	  return    setupNoRandPartA();    case    NO_RAND_PART_B_STATE:    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
37	[BUG]  [BUGGY]  return  setupSize100k();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupSize100k();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupSize100k();	  return    setupNoRandPartA();    case    NO_RAND_PART_B_STATE:    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_A_STATE:  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:	  return    setupNoRandPartA();    case    NO_RAND_PART_B_STATE:    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  case  RAND_PART_B_STATE:  return  setupRandPartC();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_B_STATE:  return  setupRandPartC();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_B_STATE:  return  setupRandPartC();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupStandardBlock();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupStandardBlock();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupStandardBlock();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  return  setupNoSize100k()  +  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k()  +  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k()  +  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
42	[BUG]  [BUGGY]  return  setupNoSize100k()  /  NO_RAND_PART_B_STATE;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k()  /  NO_RAND_PART_B_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k()  /  NO_RAND_PART_B_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  return  setupNoSize100k()  *  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k()  *  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k()  *  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE,  START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE,  START_BLOCK_STATE);	  return    setupNoRandPartA_STATE(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
45	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_B_STATE,  EOF);	  return    setupNoRandPartA_STATE(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
46	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
47	[BUG]  [BUGGY]  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupRandPartB();	  return    setupNoRandPart_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
48	[BUG]  [BUGGY]  case  START_BLOCK_STATE:  return  setupNoRandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  START_BLOCK_STATE:  return  setupNoRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  START_BLOCK_STATE:  return  setupNoRandPartB();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_A_STATE:  return  setupRandPartB();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  RAND_PART_C_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  RAND_PART_C_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  RAND_PART_C_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
51	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartA();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  return  setupRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_A_STATE:  return  setupRandPartA();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
52	[BUG]  [BUGGY]  case  RAND_PART_B_STATE:  return  setupRandPartB();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_B_STATE:  return  setupRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_B_STATE:  return  setupRandPartB();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNORandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNORandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupNORandPartB();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
54	[BUG]  [BUGGY]  return  setupNoRandPart_A();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPart_A();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_A();	  return    setupNO_RAND_PART_A();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  return  setupNoRandPartB(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartB(no_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartB(no_RAND_PART_A_STATE);	  return    setupNoRandPartA(no_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
56	[BUG]  [BUGGY]  return  setupNoSize100k(no_RAND_PART_A_STATE,  START_BLOCK_STATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(no_RAND_PART_A_STATE,  START_BLOCK_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_RAND_PART_A_STATE,  START_BLOCK_STATE);	  return    setupNoSize100k(no_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  return  setupNoSize100k(no_RAND_PART_A_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(no_RAND_PART_A_STATE,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(no_RAND_PART_A_STATE,  EOF);	  return    setupNoSize100k(no_RAND_PART_A_STATE);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(EOF,  no_rAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(EOF,  no_rAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(EOF,  no_rAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
59	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  1);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  1);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
60	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  0,  EOF);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  0,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  0,  EOF);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(EOF,  no_rAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(EOF,  no_rAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(EOF,  no_rAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_B_STATE,  EOF);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  1);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  1);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  0,  EOF);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  0,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  0,  EOF);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(null,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(null,  null);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(null,  null);	  return    setupNoRandPartA_STATE(null);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
66	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(null,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(null,  false);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(null,  false);	  return    setupNoRandPartA_STATE(null);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
67	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(EOF);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(EOF);	  return    setupNoRandPartA_STATE(NO_RAND_PART_C_STATE);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
68	[BUG]  [BUGGY]  return  setupNonRandPartA_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNonRandPartA_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonRandPartA_STATE();	  return    setupNonRandPartB();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
69	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(EOF,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(EOF,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(EOF,  NO_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
70	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  0,  EOF);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  0,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  0,  EOF);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
71	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  EOF);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  EOF);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  1);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  1);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  return  setupNoRandPartB_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartB_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartB_STATE();	  return    setupNoRandPart_B_STATE();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
74	[BUG]  [BUGGY]  return  setupNoRandPARTB();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPARTB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPARTB();	  return    setupNoRandPARTA();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
75	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(null,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(null,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(null,  NO_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(null);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
76	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(null,  EOF);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(null,  EOF);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(null,  EOF);	  return    setupNoRandPartA_STATE(null);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
77	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  NO_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  NO_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  return  setupNO_RANDPartA_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNO_RANDPartA_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNO_RANDPartA_STATE();	  return    setupNoRANDPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNORandPartA();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNORandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupNORandPartA();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
81	[BUG]  [BUGGY]  Case  NO_RAND_PART_B_STATE:  return  setupNoRandPartB();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  Case  NO_RAND_PART_B_STATE:  return  setupNoRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	Case  NO_RAND_PART_B_STATE:  return  setupNoRandPartB();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
82	[BUG]  [BUGGY]  return  setupNoSize100k(noRAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(noRAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(noRAND_PART_A_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  return  setupNoSize100k(noRAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(noRAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(noRAND_PART_B_STATE);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  return  setupNoSize100k(this.blockSize100k);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoSize100k(this.blockSize100k);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoSize100k(this.blockSize100k);	  return    setupNoSize100k(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  return  setupNORandPartB();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNORandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORandPartB();	  return    setupNoRandpartB();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
86	[BUG]  [BUGGY]  Case  NO_RAND_PART_B_STATE:  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  Case  NO_RAND_PART_B_STATE:  return  setupNoRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	Case  NO_RAND_PART_B_STATE:  return  setupNoRandPartA();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
87	[BUG]  [BUGGY]  return  setupNoRandPartB()  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartB()  /  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartB()  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
88	[BUG]  [BUGGY]  return  setupNoRandPartA()  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA()  /  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA()  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
89	[BUG]  [BUGGY]  return  setupNORAND_PART_A();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNORAND_PART_A();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_PART_A();	  return    setupNO_RAND_PART_A();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  NO_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
91	[BUG]  [BUGGY]  return  setupNORAND_Part_B();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNORAND_Part_B();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_Part_B();	  return    setupNORAND_PART_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
92	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  0);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,  0);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
93	[BUG]  [BUGGY]  return  setupNonRandPartA(no_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNonRandPartA(no_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonRandPartA(no_RAND_PART_A_STATE);	  return    setupNoRandPartA(no_RAND_PART_B_STATE);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNonPartB();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupNonPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupNonPartB();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  return  setupNumberPartB();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNumberPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNumberPartB();	  return    setupNumberPartA();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
96	[BUG]  [BUGGY]  return  setupNoRandPartStats();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartStats();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartStats();	  return    setupNoRandPart_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
97	[BUG]  [BUGGY]  return  setupNORAND_Part_B_STATE();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNORAND_Part_B_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORAND_Part_B_STATE();	  return    setupNORAND_Part_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
98	[BUG]  [BUGGY]  return  setupNORandPartA_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNORandPartA_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNORandPartA_STATE();	  return    setupNoRandPart_B_STATE();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
99	[BUG]  [BUGGY]  return  setupOwnPartB();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupOwnPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupOwnPartB();	  return    setupOwnPartA();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
100	[BUG]  [BUGGY]  return  setupNoRandPartB();  case  NO_RAND_PART_B_STATE:  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartB();  case  NO_RAND_PART_B_STATE:  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartB();  case  NO_RAND_PART_B_STATE:	  return    setupNoRandPartA();    case    NO_RAND_PART_B_STATE:    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
101	[BUG]  [BUGGY]  return  setupNoRandPartA();  case  START_BLOCK_STATE:  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA();  case  START_BLOCK_STATE:  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA();  case  START_BLOCK_STATE:	  return    setupNoRandPartA();    case    NO_RAND_PART_B_STATE:    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
102	[BUG]  [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNORandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_A_STATE:  return  setupNORandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_A_STATE:  return  setupNORandPartB();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
103	[BUG]  [BUGGY]  return  setupNO_RANDPartA();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNO_RANDPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNO_RANDPartA();	  return    setupNoRANDPartA();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
104	[BUG]  [BUGGY]  return  setupNoRandPartStat();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartStat();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartStat();	  return    setupNoRandPart_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
105	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_RAND_PART_A_STATE,  RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(NO_RAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
106	[BUG]  [BUGGY]  return  setupNonPartB();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNonPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonPartB();	  return    setupNORandPartA();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
107	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  NO_RAND_PART_A_STATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  NO_RAND_PART_A_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  NO_RAND_PART_A_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
108	[BUG]  [BUGGY]  return  setupNoRANDPart_B_STATE();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRANDPart_B_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPart_B_STATE();	  return    setupNoRANDPart_A_STATE();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
109	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  0);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  0);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
110	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  2);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  2);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
111	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  4);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  4);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_B_STATE,  4);	  return    setupNoRandPartA_STATE(no_rAND_PART_B_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
112	[BUG]  [BUGGY]  case  RAND_PART_B_STATE:  return  setupNoRandPartB();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_B_STATE:  return  setupNoRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_B_STATE:  return  setupNoRandPartB();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
113	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  0);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  0);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
114	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  2);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  2);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    EOF);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
115	[BUG]  [BUGGY]  case  RAND_PART_B_STATE:  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_B_STATE:  return  setupNoRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_B_STATE:  return  setupNoRandPartA();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
116	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  RAND_PART_B_STATE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  RAND_PART_B_STATE);  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE(no_rAND_PART_A_STATE,  RAND_PART_B_STATE);	  return    setupNoRandPartA_STATE(no_rAND_PART_A_STATE,    START_BLOCK_STATE);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
117	[BUG]  [BUGGY]  case  RAND_PART_B_STATE:  return  setupNoRandPartC();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_B_STATE:  return  setupNoRandPartC();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_B_STATE:  return  setupNoRandPartC();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
118	[BUG]  [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupStatementB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  NO_RAND_PART_B_STATE:  return  setupStatementB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  NO_RAND_PART_B_STATE:  return  setupStatementB();	  case    NO_RAND_PART_B_STATE:    return    setupNoRandPartC();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
119	[BUG]  [BUGGY]  return  setupNoRANDPart_A();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRANDPart_A();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRANDPart_A();	  return    setupNO_RAND_PART_A();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
120	[BUG]  [BUGGY]  return  setupNonPartA_STATE();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNonPartA_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNonPartA_STATE();	  return    setupNORANDPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
121	[BUG]  [BUGGY]  return  setupRandPartA_STATE();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupRandPartA_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupRandPartA_STATE();	  return    setupNORANDPartA_STATE();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
122	[BUG]  [BUGGY]  return  setupNoRandpartA_STATE();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandpartA_STATE();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandpartA_STATE();	  return    setupNoRandpartB();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
123	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  return  setupNoRandPartB();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  return  setupNoRandPartB();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_A_STATE:  return  setupNoRandPartB();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartB();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
124	[BUG]  [BUGGY]  return  setupNoRandPart_A_STATE()  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPart_A_STATE()  /  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_A_STATE()  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
125	[BUG]  [BUGGY]  return  setupNoRandPart_B_STATE()  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPart_B_STATE()  /  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_B_STATE()  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
126	[BUG]  [BUGGY]  return  setupNoRandPartA_STATE()  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPartA_STATE()  /  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPartA_STATE()  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
127	[BUG]  [BUGGY]  return  setupNoRandPart_A_STATE  /  NO_RAND_PART_A_STATE;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  return  setupNoRandPart_A_STATE  /  NO_RAND_PART_A_STATE;  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	return  setupNoRandPart_A_STATE  /  NO_RAND_PART_A_STATE;	  return    setupNoSize100k()    /    NO_RAND_PART_A_STATE;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
128	[BUG]  [BUGGY]  case  RAND_PART_A_STATE:  return  setupNoRandPartA();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      case  RAND_PART_B_STATE:  return  setupRandPartB();  case  RAND_PART_C_STATE:  return  setupRandPartC();  case  NO_RAND_PART_A_STATE:  throw  new  IllegalStateException();  case  NO_RAND_PART_B_STATE:      [BUGGY]  case  RAND_PART_A_STATE:  return  setupNoRandPartA();  [BUGGY]        case  NO_RAND_PART_C_STATE:  return  setupNoRandPartC();  default:  throw  new  IllegalStateException();  }  }  [CLASS]  BZip2CompressorInputStream  Data  [METHOD]  read0  [RETURN_TYPE]  int  [VARIABLES]  int[][]  base  limit  perm  InputStream  in  char[][]  temp_charArray2d  Data  data  int[]  cftab  minLens  tt  unzftab  int  EOF  NO_RAND_PART_A_STATE  NO_RAND_PART_B_STATE  NO_RAND_PART_C_STATE  RAND_PART_A_STATE  RAND_PART_B_STATE  RAND_PART_C_STATE  START_BLOCK_STATE  b  blockSize100k  bsBuff  bsLive  c  computedBlockCRC  computedCombinedCRC  currentState  destOffs  hi  i  last  len  nInUse  nInUseShadow  offs  origPtr  r  storedBlockCRC  storedCombinedCRC  su_ch2  su_chPrev  su_count  su_i2  su_j2  su_rNToGo  su_rTPos  su_tPos  char[]  getAndMoveToFrontDecode_yy  byte[]  dest  ll8  recvDecodingTables_pos  selector  selectorMtf  seqToUnseq  boolean  blockRandomised  decompressConcatenated  CRC  crc  char  su_z  boolean[]  inUse  	projects/Compress30/src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java	1.0	217	217	1	replace	case  RAND_PART_A_STATE:  return  setupNoRandPartA();	  case    NO_RAND_PART_A_STATE:    return    setupNoRandPartA();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
